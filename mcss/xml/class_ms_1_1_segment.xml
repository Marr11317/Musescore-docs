<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_ms_1_1_segment" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Ms::Segment</compoundname>
    <basecompoundref refid="class_ms_1_1_element" prot="public" virt="non-virtual">Ms::Element</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_segment_1ab337771da2e38997469676a85227b9ef" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
        <definition>SegmentType Ms::Segment::_segmentType</definition>
        <argsstring></argsstring>
        <name>_segmentType</name>
        <initializer>{ <ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894a4bbb8f967da6d1a610596d7257179c2b" kindref="member">SegmentType::Invalid</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="51" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1a199c49414cddf2ed6cbc5bb3c70e67f5" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Segment::_tick</definition>
        <argsstring></argsstring>
        <name>_tick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="52" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1abd5218a26837897f628223c539179af6" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Segment::_ticks</definition>
        <argsstring></argsstring>
        <name>_ticks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="53" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1adb8fb8a2f2f92facf3a837b391639c5a" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref></type>
        <definition>Spatium Ms::Segment::_extraLeadingSpace</definition>
        <argsstring></argsstring>
        <name>_extraLeadingSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="54" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1a51cb7cd20134d729fe3e0a2da287c3d1" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal Ms::Segment::_stretch</definition>
        <argsstring></argsstring>
        <name>_stretch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="55" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1a5b835d08a9c2423ec006b20521bbd6e0" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Segment::_next</definition>
        <argsstring></argsstring>
        <name>_next</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="57" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1a4dae0331aaba14dc2883fdcf5d4e9108" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Segment::_prev</definition>
        <argsstring></argsstring>
        <name>_prev</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="58" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1adc2689e391a5a140fe73fc305e73f7bb" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> * &gt;</type>
        <definition>std::vector&lt;Element*&gt; Ms::Segment::_annotations</definition>
        <argsstring></argsstring>
        <name>_annotations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="60" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1a7d0756fdd6312b470672630b51831c72" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> * &gt;</type>
        <definition>std::vector&lt;Element*&gt; Ms::Segment::_elist</definition>
        <argsstring></argsstring>
        <name>_elist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="61" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1a86d21de38681a7bf73431f650d230d7b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &gt;</type>
        <definition>std::vector&lt;Shape&gt; Ms::Segment::_shapes</definition>
        <argsstring></argsstring>
        <name>_shapes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="62" column="22" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_segment_1a73ad84a555f499cc5a1ce410661e46bf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; qreal &gt;</type>
        <definition>std::vector&lt;qreal&gt; Ms::Segment::_dotPosX</definition>
        <argsstring></argsstring>
        <name>_dotPosX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="63" column="22" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ms_1_1_segment_1a4bf18b37fbc19e7f8477fc8ea503852b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::init</definition>
        <argsstring>()</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="66" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="199" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a0cbec79c667aa39ef89abdd4df374c27" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::checkEmpty</definition>
        <argsstring>() const</argsstring>
        <name>checkEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="67" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="794" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a1c53e32a09fdab00ea643714fa3e42e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::checkElement</definition>
        <argsstring>(Element *, int track)</argsstring>
        <name>checkElement</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>el</defname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="68" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="453" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a2f11fa5a47b88ccf882831a6a5950c8c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setEmpty</definition>
        <argsstring>(bool val) const</argsstring>
        <name>setEmpty</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="69" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="69" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_ms_1_1_segment_1a0f0decdac2b8174edc9d7254c745373d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::getElement</definition>
        <argsstring>(int staff)</argsstring>
        <name>getElement</name>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="72" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1148" bodyend="1166"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_segment_1a3433e9b1c158570c08f989b544a05cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Segment::Segment</definition>
        <argsstring>(Measure *m=0)</argsstring>
        <name>Segment</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="75" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="113" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a9706d9837744739f8f523cbc3ddf7929" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Segment::Segment</definition>
        <argsstring>(Measure *, SegmentType, const Fraction &amp;)</argsstring>
        <name>Segment</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <defname>m</defname>
        </param>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <defname>st</defname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="76" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="120" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1afdcd8458722693e1ce57e1a8fb4eeb00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Segment::Segment</definition>
        <argsstring>(const Segment &amp;)</argsstring>
        <name>Segment</name>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="77" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="135" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1af6fdeca3656fbd9040d46e4ad94a88f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Segment::~Segment</definition>
        <argsstring>()</argsstring>
        <name>~Segment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="78" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="183" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a9b80f58c031081ddd2db36c819b335e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Segment::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="class_ms_1_1_element_1adcd981af2ae9890f31c993050d5f0f25">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="80" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aafa5c086e47d01d8d9d9b5ccdd13861c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_ms_1a2c92ce0204176ede1ab86e2f44ae6b9e" kindref="member">ElementType</ref></type>
        <definition>ElementType Ms::Segment::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="class_ms_1_1_score_element_1a3dbb763c3cd4ec05d202d03115abe1d5">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="81" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a5482249b6b1460998636115bb416256a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Segment::setScore</definition>
        <argsstring>(Score *) override</argsstring>
        <name>setScore</name>
        <reimplements refid="class_ms_1_1_score_element_1a6a1e59c49777e28459d2270981fc97df">setScore</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <defname>score</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="83" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="172" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a1c4c00c6b1052c6c122f5fc665ec8a20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Segment::next</definition>
        <argsstring>() const</argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="85" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ad0ee4fbcb35085bdefc7b2c69d8dcfbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::next</definition>
        <argsstring>(SegmentType) const</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <defname>types</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="86" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="286" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a2e8c3d552efd3f052dab6cd23a68d36a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::nextActive</definition>
        <argsstring>() const</argsstring>
        <name>nextActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="87" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="249" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a560efa5ed72325089f62eb7f27d600e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::nextEnabled</definition>
        <argsstring>() const</argsstring>
        <name>nextEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="88" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="261" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ae0860e587897eb3457dd78dd56d8cca2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setNext</definition>
        <argsstring>(Segment *e)</argsstring>
        <name>setNext</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="89" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1acacbc2ea5286f526b5fc5b8ccc44de47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Segment::prev</definition>
        <argsstring>() const</argsstring>
        <name>prev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="91" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a129c317254495a5b2a2ce954d5cf839a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prev</definition>
        <argsstring>(SegmentType) const</argsstring>
        <name>prev</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <defname>types</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="92" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="300" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1acc499b83bc3a2874a551ca4919f8867f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prevActive</definition>
        <argsstring>() const</argsstring>
        <name>prevActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="93" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="273" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ad97476625810d6e81e3617bf80c760bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prevEnabled</definition>
        <argsstring>() const</argsstring>
        <name>prevEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="94" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="285" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1adf1c821cc8f95e036b0ed25973542f29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setPrev</definition>
        <argsstring>(Segment *e)</argsstring>
        <name>setPrev</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="95" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::next1</definition>
        <argsstring>() const</argsstring>
        <name>next1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return next <emphasis><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref></emphasis>, don’t stop searching at end of <emphasis><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref></emphasis> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="98" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="223" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aa53e40717084c46ea22310ff6404c224" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::next1enabled</definition>
        <argsstring>() const</argsstring>
        <name>next1enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="99" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="235" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a8080c698203ea7dd9f7f00b2e2d0bb00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::next1MM</definition>
        <argsstring>() const</argsstring>
        <name>next1MM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="100" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="247" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aacaa89821976f55a33688d3a19e69565" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::next1MMenabled</definition>
        <argsstring>() const</argsstring>
        <name>next1MMenabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="101" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="273" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a3f002e065d5ff6f750b947d13d7503bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::next1</definition>
        <argsstring>(SegmentType) const</argsstring>
        <name>next1</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <defname>types</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="102" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="255" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a139dbad8cb0264535f8ec38cf17f75cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::next1MM</definition>
        <argsstring>(SegmentType) const</argsstring>
        <name>next1MM</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <defname>types</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="103" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="264" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a07a0b52e5f58941bd85ca307455e62c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prev1</definition>
        <argsstring>() const</argsstring>
        <name>prev1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return previous <emphasis><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref></emphasis>, don’t stop searching at <emphasis><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref></emphasis> begin </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="105" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="315" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1af359b40f5fd11ba0cb5ee367e6a9ce85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prev1enabled</definition>
        <argsstring>() const</argsstring>
        <name>prev1enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="106" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="323" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a166e457ef0cd1b1a946ed83591d420fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prev1MM</definition>
        <argsstring>() const</argsstring>
        <name>prev1MM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="107" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="331" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ad1502e1a87b4e49731223c075edece70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prev1MMenabled</definition>
        <argsstring>() const</argsstring>
        <name>prev1MMenabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="108" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="339" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a77773b88b7154a03c1cd664dfecb8cf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prev1</definition>
        <argsstring>(SegmentType) const</argsstring>
        <name>prev1</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <defname>types</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="109" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="347" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a9da5bed337b49f6603f31319a3a73619" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::prev1MM</definition>
        <argsstring>(SegmentType) const</argsstring>
        <name>prev1MM</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <defname>types</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="110" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="356" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1af72e054dc7896adb071659dea6eff6b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Segment::nextCR</definition>
        <argsstring>(int track=-1, bool sameStaff=false) const</argsstring>
        <name>nextCR</name>
        <param>
          <type>int</type>
          <declname>track</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>sameStaff</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="112" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="370" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a9f84e65ea1cc200227a75b058ab8e8d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Segment::nextChordRest</definition>
        <argsstring>(int track, bool backwards=false) const</argsstring>
        <name>nextChordRest</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>backwards</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="114" column="17" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="399" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a0a42bbe78c8e76c62fe4e3591b2eff2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element* Ms::Segment::element</definition>
        <argsstring>(int track) const</argsstring>
        <name>element</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="116" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a89f0f4996e4b2fd355ffb040b7029891" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Ms::Element</ref> *</type>
        <definition>Ms::Element * Ms::Segment::elementAt</definition>
        <argsstring>(int track) const</argsstring>
        <name>elementAt</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="120" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1058" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a37a7c2088621a49ebefcd6f0e1e65da7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;Element*&gt;&amp; Ms::Segment::elist</definition>
        <argsstring>() const</argsstring>
        <name>elist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="122" column="25" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ac0913af28a1cd7cfa535f7817143f540" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> * &gt; &amp;</type>
        <definition>std::vector&lt;Element*&gt;&amp; Ms::Segment::elist</definition>
        <argsstring>()</argsstring>
        <name>elist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="123" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1abd1fd5a7d7a5cff8929cb8cbc1301db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::removeElement</definition>
        <argsstring>(int track)</argsstring>
        <name>removeElement</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="125" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="95" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1abd202529f56fe3135e6465c349b430fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setElement</definition>
        <argsstring>(int track, Element *el)</argsstring>
        <name>setElement</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>el</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="126" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="78" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a5ca5b0ff459c6022e9468fb8629c4df2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Segment::scanElements</definition>
        <argsstring>(void *data, void(*func)(void *, Element *), bool all=true) override</argsstring>
        <name>scanElements</name>
        <reimplements refid="class_ms_1_1_element_1ab4cacda18439ce6c8c615e253c762f12">scanElements</reimplements>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *, <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *)</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>all</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="127" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1068" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a44dc6d5b22a75152673060bc059acfb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure* Ms::Segment::measure</definition>
        <argsstring>() const</argsstring>
        <name>measure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="129" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ac55f422eeb641115fd88da2c278a3514" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_system" kindref="compound">System</ref> *</type>
        <definition>System* Ms::Segment::system</definition>
        <argsstring>() const</argsstring>
        <name>system</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="130" column="14" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a27109a26a9b8f71b690db260f1ed7673" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>qreal</type>
        <definition>qreal Ms::Segment::x</definition>
        <argsstring>() const override</argsstring>
        <name>x</name>
        <reimplements refid="class_ms_1_1_element_1a6f850cd0581c46bee4661210b7a7777c">x</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="131" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a4c3a13cc57a6e854151ce75fe5fa7752" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setX</definition>
        <argsstring>(qreal v)</argsstring>
        <name>setX</name>
        <param>
          <type>qreal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="132" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a067cdce1b36d6e9ea5428b1cb05e8b04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::insertStaff</definition>
        <argsstring>(int staff)</argsstring>
        <name>insertStaff</name>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="134" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="413" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aa38dbd980653d24cd1d3343f66fdfb8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::removeStaff</definition>
        <argsstring>(int staff)</argsstring>
        <name>removeStaff</name>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="135" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="433" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a1a43bbbee320ca145d6bf07f16243837" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Segment::add</definition>
        <argsstring>(Element *) override</argsstring>
        <name>add</name>
        <reimplements refid="class_ms_1_1_element_1a6466e3a3ada3e0e7add1d1977bbfda96">add</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>el</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="137" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="471" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a667234863eb2620d723edf19ad00d0e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Segment::remove</definition>
        <argsstring>(Element *) override</argsstring>
        <name>remove</name>
        <reimplements refid="class_ms_1_1_element_1acca1fd58c4df74da5cefc31787a2c715">remove</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>el</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="138" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="612" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aee2da233c04193956cc5a2e20ce08f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::swapElements</definition>
        <argsstring>(int i1, int i2)</argsstring>
        <name>swapElements</name>
        <param>
          <type>int</type>
          <declname>i1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="139" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="813" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a2cbbfb84fd3b591abc886e21018c1c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::sortStaves</definition>
        <argsstring>(QList&lt; int &gt; &amp;dst)</argsstring>
        <name>sortStaves</name>
        <param>
          <type>QList&lt; int &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="141" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="753" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a99b767a9af29a94f1fd8374643628196" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Ms::Segment::subTypeName</definition>
        <argsstring>() const</argsstring>
        <name>subTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="142" column="18" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a8056e876b2356e5b349ab779a747f98e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
        <definition>SegmentType Ms::Segment::segmentType</definition>
        <argsstring>() const</argsstring>
        <name>segmentType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="147" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ab41fcb7024cea2f319fa34e0ca7a7489" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setSegmentType</definition>
        <argsstring>(SegmentType t)</argsstring>
        <name>setSegmentType</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="148" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ab095d36e2aa43620629f1e87f5df032a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="150" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a78e88ce4842fabf3a3852e87d40e4559" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::written</definition>
        <argsstring>() const</argsstring>
        <name>written</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="151" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a44a5795b484762f44e405f5e74cb7802" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setWritten</definition>
        <argsstring>(bool val) const</argsstring>
        <name>setWritten</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="152" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ac1bcfcf7f5bb0f19d75429fb9cbe51d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::fixStaffIdx</definition>
        <argsstring>()</argsstring>
        <name>fixStaffIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="154" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="780" bodyend="788"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a56b621a8aee981e1cca66f6248468046" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Segment::stretch</definition>
        <argsstring>() const</argsstring>
        <name>stretch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="156" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a3cc5cb6dbcd884168c976ec987051222" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setStretch</definition>
        <argsstring>(qreal v)</argsstring>
        <name>setStretch</name>
        <param>
          <type>qreal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="157" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a8a396189ef9375898066fb2d30952d79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Segment::rtick</definition>
        <argsstring>() const override</argsstring>
        <name>rtick</name>
        <reimplements refid="class_ms_1_1_element_1ad4608ce52672a6b42930af320d9de2ef">rtick</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="159" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="159" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a458e64e2a7ec6846e1f085dc843fa416" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setRtick</definition>
        <argsstring>(const Fraction &amp;v)</argsstring>
        <name>setRtick</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="160" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a23cde3c97359266e2787b107aa0c8cdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Segment::tick</definition>
        <argsstring>() const override</argsstring>
        <name>tick</name>
        <reimplements refid="class_ms_1_1_element_1a4cc362a42bad65483b59d3a8e0df374f">tick</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="161" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ab9fe97d529862db451072e088903b746" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Segment::ticks</definition>
        <argsstring>() const</argsstring>
        <name>ticks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="163" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a65a42b0bfd39e1ff7c954155fb32e914" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setTicks</definition>
        <argsstring>(const Fraction &amp;v)</argsstring>
        <name>setTicks</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="164" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a7e392d82964e59dd59bef7c1ae6ffd65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::splitsTuplet</definition>
        <argsstring>() const</argsstring>
        <name>splitsTuplet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="166" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="917" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ac30bce62d008049b47f408497d32dccc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> * &gt; &amp;</type>
        <definition>const std::vector&lt;Element*&gt;&amp; Ms::Segment::annotations</definition>
        <argsstring>() const</argsstring>
        <name>annotations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="168" column="25" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="168" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a323a02bed284456b6ed6efeb4cc1e191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::clearAnnotations</definition>
        <argsstring>()</argsstring>
        <name>clearAnnotations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="169" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1047" bodyend="1050"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a6cc607fbbb0bbd2fbaf44977a8654617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::removeAnnotation</definition>
        <argsstring>(Element *e)</argsstring>
        <name>removeAnnotation</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="170" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1033" bodyend="1041"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a28f1500f879842bd3062bb08827dc3d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::hasAnnotationOrElement</definition>
        <argsstring>(ElementType type, int minTrack, int maxTrack) const</argsstring>
        <name>hasAnnotationOrElement</name>
        <param>
          <type><ref refid="namespace_ms_1a2c92ce0204176ede1ab86e2f44ae6b9e" kindref="member">ElementType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minTrack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxTrack</declname>
        </param>
        <briefdescription>
<para>return true if an annotation of type type or and element is found in the track range </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="171" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="989" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ae32294b6c31db3cc1f765a1986773cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::findAnnotation</definition>
        <argsstring>(ElementType type, int minTrack, int maxTrack)</argsstring>
        <name>findAnnotation</name>
        <param>
          <type><ref refid="namespace_ms_1a2c92ce0204176ede1ab86e2f44ae6b9e" kindref="member">ElementType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minTrack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxTrack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the first found annotation of type type or nullptr if nothing was found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="172" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1006" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a19bb06fa24b8756d503ce09c387da5b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> * &gt;</type>
        <definition>std::vector&lt; Element * &gt; Ms::Segment::findAnnotations</definition>
        <argsstring>(ElementType type, int minTrack, int maxTrack)</argsstring>
        <name>findAnnotations</name>
        <param>
          <type><ref refid="namespace_ms_1a2c92ce0204176ede1ab86e2f44ae6b9e" kindref="member">ElementType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minTrack</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxTrack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the list of found annotations or nullptr if nothing was found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="173" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1020" bodyend="1027"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aa5ec7241f8011535f732d44238b5a5da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::hasElements</definition>
        <argsstring>() const</argsstring>
        <name>hasElements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the segment has at least one element. Annotations are not considered. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="174" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="975" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1afde517eb0b39a5f649e25fc929038e7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Segment::dotPosX</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>dotPosX</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="177" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a3d52cb81e00336d49938b6e43e96ead3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setDotPosX</definition>
        <argsstring>(int staffIdx, qreal val)</argsstring>
        <name>setDotPosX</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="178" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aa9b27fc6059b2bb530fd5965166c5f40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref></type>
        <definition>Spatium Ms::Segment::extraLeadingSpace</definition>
        <argsstring>() const</argsstring>
        <name>extraLeadingSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="180" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a72a1fb2ab890728fb72c91e7c3d3048d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::setExtraLeadingSpace</definition>
        <argsstring>(Spatium v)</argsstring>
        <name>setExtraLeadingSpace</name>
        <param>
          <type><ref refid="class_ms_1_1_spatium" kindref="compound">Spatium</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="181" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="181" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a62adb026000a21b5f79f0d783930376d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Segment::write</definition>
        <argsstring>(XmlWriter &amp;) const override</argsstring>
        <name>write</name>
        <reimplements refid="class_ms_1_1_element_1a7298ea80b152246289da660cca217ad1">write</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <defname>xml</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="183" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="827" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a9bfbc65005fbb71af6b6b432c85f7a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Segment::read</definition>
        <argsstring>(XmlReader &amp;) override</argsstring>
        <name>read</name>
        <reimplements refid="class_ms_1_1_element_1a36da47af8aac2c422a2bc3eb91f8ac4f">read</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="184" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="843" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1afb1f4dcc84b940e801abb3c8769325f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Segment::getProperty</definition>
        <argsstring>(Pid propertyId) const override</argsstring>
        <name>getProperty</name>
        <reimplements refid="class_ms_1_1_element_1aceaefa5b47ba457d6f2e69c0ce573105">getProperty</reimplements>
        <param>
          <type>Pid</type>
          <declname>propertyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="186" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="863" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a210480665bdc52b0e5975102fdb60eb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::setProperty</definition>
        <argsstring>(Pid propertyId, const QVariant &amp;) override</argsstring>
        <name>setProperty</name>
        <reimplements refid="class_ms_1_1_element_1af276960f1e28fd18438752eb19895ace">setProperty</reimplements>
        <param>
          <type>Pid</type>
          <declname>propertyId</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="187" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="893" bodyend="911"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a5a8d9501d46968fddbc05f290515de1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Segment::propertyDefault</definition>
        <argsstring>(Pid) const override</argsstring>
        <name>propertyDefault</name>
        <reimplements refid="class_ms_1_1_element_1a3662edfaf353472183a54466eb5749ae">propertyDefault</reimplements>
        <param>
          <type>Pid</type>
          <defname>propertyId</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="188" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="879" bodyend="887"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a295db77c0cf520508dfbcc4497e2f738" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::operator&lt;</definition>
        <argsstring>(const Segment &amp;) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>return true if segment is before s in list </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="190" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="938" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a6082182541496137b8aaac46b4806c06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::operator&gt;</definition>
        <argsstring>(const Segment &amp;) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> &amp;</type>
          <defname>s</defname>
        </param>
        <briefdescription>
<para>return true if segment is after s in list </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="191" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="956" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ac98288a9025052069406783d2b093990" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::Segment::accessibleExtraInfo</definition>
        <argsstring>() const override</argsstring>
        <name>accessibleExtraInfo</name>
        <reimplements refid="class_ms_1_1_element_1ad28416b7cf27aad952ff9e872284ee54">accessibleExtraInfo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="193" column="23" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1871" bodyend="1926"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a32879f300d7f9b4031c5aa64c8323119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::firstInNextSegments</definition>
        <argsstring>(int activeStaff)</argsstring>
        <name>firstInNextSegments</name>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="195" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1250" bodyend="1272"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1afec9ec067383f911d6f625039e8b8fc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::lastInPrevSegments</definition>
        <argsstring>(int activeStaff)</argsstring>
        <name>lastInPrevSegments</name>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="196" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1831" bodyend="1865"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a65e06ebd3e6b0af2fdde6e9125626ac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::firstElement</definition>
        <argsstring>(int staff)</argsstring>
        <name>firstElement</name>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="197" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1093" bodyend="1108"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ae4cba2e39fce792aa683b826bee1da0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::lastElement</definition>
        <argsstring>(int staff)</argsstring>
        <name>lastElement</name>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="198" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1116" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1af3aa0e960bdfcf7d82da9d51d76f5652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::firstElementOfSegment</definition>
        <argsstring>(Segment *s, int activeStaff)</argsstring>
        <name>firstElementOfSegment</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="199" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1279" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a9ace55e84ca6c74230c809d1a824f912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::nextElementOfSegment</definition>
        <argsstring>(Segment *s, Element *e, int activeStaff)</argsstring>
        <name>nextElementOfSegment</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="200" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1297" bodyend="1339"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ac1f098c4087582f1e615b03a3c86101f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::prevElementOfSegment</definition>
        <argsstring>(Segment *s, Element *e, int activeStaff)</argsstring>
        <name>prevElementOfSegment</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="201" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1346" bodyend="1394"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ade1d9f16280c6ecddb3c2daa155d1758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::lastElementOfSegment</definition>
        <argsstring>(Segment *s, int activeStaff)</argsstring>
        <name>lastElementOfSegment</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="202" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1401" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a9f5ab118a8d72224adf13df9918ccea1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::nextAnnotation</definition>
        <argsstring>(Element *e)</argsstring>
        <name>nextAnnotation</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="203" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1173" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aeb5eee4d40810e61acbd706f305b1aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::prevAnnotation</definition>
        <argsstring>(Element *e)</argsstring>
        <name>prevAnnotation</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="204" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1194" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a87913a9cc1c65b1f2ff52f67c14c0797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::firstAnnotation</definition>
        <argsstring>(Segment *s, int activeStaff)</argsstring>
        <name>firstAnnotation</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="205" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1214" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a35611388a40cb4db9a60bf31c23c1601" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::lastAnnotation</definition>
        <argsstring>(Segment *s, int activeStaff)</argsstring>
        <name>lastAnnotation</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="206" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1228" bodyend="1239"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a6a95eeb7b86dae891a68712b32d1ddca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
        <definition>Spanner * Ms::Segment::firstSpanner</definition>
        <argsstring>(int activeStaff)</argsstring>
        <name>firstSpanner</name>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="207" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1426" bodyend="1455"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a1cff28b1481177c8450077fbfd7dc43b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
        <definition>Spanner * Ms::Segment::lastSpanner</definition>
        <argsstring>(int activeStaff)</argsstring>
        <name>lastSpanner</name>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="208" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1461" bodyend="1492"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aa425eaed4218824e6eab022852f06380" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::notChordRestType</definition>
        <argsstring>(Segment *s)</argsstring>
        <name>notChordRestType</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="209" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1500" bodyend="1516"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a5e534221e4f5a67fe1f21397e9e32db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::nextElement</definition>
        <argsstring>(int activeStaff)</argsstring>
        <name>nextElement</name>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="211" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1522" bodyend="1641"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a17eb3c10f9d1ffde13d801a6eefbe863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Segment::prevElement</definition>
        <argsstring>(int activeStaff)</argsstring>
        <name>prevElement</name>
        <param>
          <type>int</type>
          <declname>activeStaff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="213" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1647" bodyend="1820"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1adf9189b637f30e83f286a4626063c143" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &gt;</type>
        <definition>std::vector&lt;Shape&gt; Ms::Segment::shapes</definition>
        <argsstring>()</argsstring>
        <name>shapes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="215" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aafd99e408489e5b3b162c1a642d81ed4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Shape&gt;&amp; Ms::Segment::shapes</definition>
        <argsstring>() const</argsstring>
        <name>shapes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="216" column="25" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1afe26f7a1d64fa1a5628063f1596e090f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
        <definition>const Shape&amp; Ms::Segment::staffShape</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>staffShape</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="217" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ac0b6d5ecfe455b95278c5ea02cc1cf50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
        <definition>Shape&amp; Ms::Segment::staffShape</definition>
        <argsstring>(int staffIdx)</argsstring>
        <name>staffShape</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="218" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aa38b5aacc77c780f8eda8a0afc269aaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::createShapes</definition>
        <argsstring>()</argsstring>
        <name>createShapes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="219" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1932" bodyend="1937"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a148df89ed1001d7d23a975827dd666e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Segment::createShape</definition>
        <argsstring>(int staffIdx)</argsstring>
        <name>createShape</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="220" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="1943" bodyend="2020"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a22f3a07d9e8f34d868c003ced09d0a65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Segment::minRight</definition>
        <argsstring>() const</argsstring>
        <name>minRight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="221" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="2027" bodyend="2035"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a967f59330c99b0029f89b5f1a0111663" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Segment::minLeft</definition>
        <argsstring>(const Shape &amp;) const</argsstring>
        <name>minLeft</name>
        <param>
          <type>const <ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
          <defname>sl</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="222" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="2043" bodyend="2052"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a3e9fe693c69c6608b97bc951054c1a69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Segment::minLeft</definition>
        <argsstring>() const</argsstring>
        <name>minLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="223" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="2054" bodyend="2063"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a6efb223aa110f1cc438409ce139d28d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Segment::minHorizontalDistance</definition>
        <argsstring>(Segment *, bool isSystemGap) const</argsstring>
        <name>minHorizontalDistance</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>ns</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSystemGap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="224" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="2085" bodyend="2215"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a763a0ff679c376b95f7ce51bb69b68a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Segment::minHorizontalCollidingDistance</definition>
        <argsstring>(Segment *ns) const</argsstring>
        <name>minHorizontalCollidingDistance</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="225" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="2070" bodyend="2078"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a9adaf3b1b191b949ca562d891c4c5a49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest* Ms::Segment::cr</definition>
        <argsstring>(int track) const</argsstring>
        <name>cr</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="228" column="17" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a5f0b0ddb0f2fe018c750c261b342e533" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isType</definition>
        <argsstring>(const SegmentType t) const</argsstring>
        <name>isType</name>
        <param>
          <type>const <ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="229" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a6408d27758a1ab84557a73fefc2cd5d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isBeginBarLineType</definition>
        <argsstring>() const</argsstring>
        <name>isBeginBarLineType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="230" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="230" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1aa7eebe7c9a666d118f322f7bb484454e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isClefType</definition>
        <argsstring>() const</argsstring>
        <name>isClefType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="231" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="231" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a44acf78d7f350ac07078bd468ecad1c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isHeaderClefType</definition>
        <argsstring>() const</argsstring>
        <name>isHeaderClefType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="232" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ad8d0303402a624f94e14f426cd476ddc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isKeySigType</definition>
        <argsstring>() const</argsstring>
        <name>isKeySigType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="233" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1abe9f71da912f170efab9228863248663" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isAmbitusType</definition>
        <argsstring>() const</argsstring>
        <name>isAmbitusType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="234" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a2869f67639a3de89412695c3cb0f5464" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isTimeSigType</definition>
        <argsstring>() const</argsstring>
        <name>isTimeSigType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="235" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a33891c2ac20889369c11702c13a135ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isStartRepeatBarLineType</definition>
        <argsstring>() const</argsstring>
        <name>isStartRepeatBarLineType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="236" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a2d5c0a44331a6330d8d8aa1381b30f12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isBarLineType</definition>
        <argsstring>() const</argsstring>
        <name>isBarLineType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="237" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ae172984bc3f5532adff61a346006fd5d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isBreathType</definition>
        <argsstring>() const</argsstring>
        <name>isBreathType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="238" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a12875266ecd46db59c8ba3a12857c944" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isChordRestType</definition>
        <argsstring>() const</argsstring>
        <name>isChordRestType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="239" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a8bc9c0ddee2937bad84e49d527476cfc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isEndBarLineType</definition>
        <argsstring>() const</argsstring>
        <name>isEndBarLineType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="240" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ad718781aace48b1782106f27c856aeaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isKeySigAnnounceType</definition>
        <argsstring>() const</argsstring>
        <name>isKeySigAnnounceType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="241" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a6e0a5bc5828d2c2e217c3686457ff2d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Segment::isTimeSigAnnounceType</definition>
        <argsstring>() const</argsstring>
        <name>isTimeSigAnnounceType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="242" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1a81092ae7891eb2ac2d43d6fe86e1e749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Element::nextElement</definition>
        <argsstring>()</argsstring>
        <name>nextElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="210" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/element.cpp" bodystart="1595" bodyend="1621"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1ad48ce06a988e98b0da7d4cf1e6f56ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Element::prevElement</definition>
        <argsstring>()</argsstring>
        <name>prevElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="212" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/element.cpp" bodystart="1629" bodyend="1655"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ms_1_1_segment_1ad90a3cfc9d476073302c95022fdde569" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * Ms::Segment::subTypeName</definition>
        <argsstring>(SegmentType)</argsstring>
        <name>subTypeName</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="144" column="25" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="52" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_segment_1accf66d981db70ac1bd843ca5e03330a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
        <definition>SegmentType Ms::Segment::segmentType</definition>
        <argsstring>(ElementType type)</argsstring>
        <name>segmentType</name>
        <param>
          <type><ref refid="namespace_ms_1a2c92ce0204176ede1ab86e2f44ae6b9e" kindref="member">ElementType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="145" column="26" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.cpp" bodystart="724" bodyend="747"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
      </node>
      <node id="2">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ms::Segment</label>
        <link refid="class_ms_1_1_segment"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>QList&lt; ScoreElement * &gt;</label>
      </node>
      <node id="3">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="4" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ms::Segment</label>
        <link refid="class_ms_1_1_segment"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" line="50" column="29" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/segment.h" bodystart="50" bodyend="243"/>
    <listofallmembers>
      <member refid="class_ms_1_1_segment_1adc2689e391a5a140fe73fc305e73f7bb" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_annotations</name></member>
      <member refid="class_ms_1_1_element_1a85687d7e7b049c00327023c7306cec14" prot="protected" virt="non-virtual"><scope>Ms::Segment</scope><name>_color</name></member>
      <member refid="class_ms_1_1_segment_1a73ad84a555f499cc5a1ce410661e46bf" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_dotPosX</name></member>
      <member refid="class_ms_1_1_score_element_1a648639a58d05aa85412217db5ad40b18" prot="protected" virt="non-virtual"><scope>Ms::Segment</scope><name>_elementStyle</name></member>
      <member refid="class_ms_1_1_segment_1a7d0756fdd6312b470672630b51831c72" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_elist</name></member>
      <member refid="class_ms_1_1_segment_1adb8fb8a2f2f92facf3a837b391639c5a" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_extraLeadingSpace</name></member>
      <member refid="class_ms_1_1_score_element_1a405b151c60a010237414678a0e0952af" prot="protected" virt="non-virtual"><scope>Ms::Segment</scope><name>_links</name></member>
      <member refid="class_ms_1_1_element_1a24960cc1b17ecdef26c9e2e51f8778f4" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>_name</name></member>
      <member refid="class_ms_1_1_segment_1a5b835d08a9c2423ec006b20521bbd6e0" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_next</name></member>
      <member refid="class_ms_1_1_segment_1a4dae0331aaba14dc2883fdcf5d4e9108" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_prev</name></member>
      <member refid="class_ms_1_1_score_element_1a6d4b99ddb9e217aaa9f9ae67a76861f3" prot="protected" virt="non-virtual"><scope>Ms::Segment</scope><name>_propertyFlagsList</name></member>
      <member refid="class_ms_1_1_segment_1ab337771da2e38997469676a85227b9ef" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_segmentType</name></member>
      <member refid="class_ms_1_1_segment_1a86d21de38681a7bf73431f650d230d7b" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_shapes</name></member>
      <member refid="class_ms_1_1_segment_1a51cb7cd20134d729fe3e0a2da287c3d1" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_stretch</name></member>
      <member refid="class_ms_1_1_segment_1a199c49414cddf2ed6cbc5bb3c70e67f5" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_tick</name></member>
      <member refid="class_ms_1_1_segment_1abd5218a26837897f628223c539179af6" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>_ticks</name></member>
      <member refid="class_ms_1_1_element_1a833151435bfcef81ea589f9e8fc3154b" prot="protected" virt="non-virtual"><scope>Ms::Segment</scope><name>_z</name></member>
      <member refid="class_ms_1_1_element_1ac64eee038c2d81d1ae934be877d8acc5" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>abbox</name></member>
      <member refid="class_ms_1_1_element_1a35614445f0bc2212cbcc75c3f5810543" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>acceptDrop</name></member>
      <member refid="class_ms_1_1_segment_1ac98288a9025052069406783d2b093990" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>accessibleExtraInfo</name></member>
      <member refid="class_ms_1_1_element_1a249d3763ecc760841d71c305004d4c93" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>accessibleInfo</name></member>
      <member refid="class_ms_1_1_segment_1a1a43bbbee320ca145d6bf07f16243837" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>add</name></member>
      <member refid="class_ms_1_1_element_1aeda671935e53857c2dee17b03d68b276" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>addbbox</name></member>
      <member refid="class_ms_1_1_element_1a6ba0ad4dad0b5de65db725a10fc64278" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>addToSkyline</name></member>
      <member refid="class_ms_1_1_segment_1ac30bce62d008049b47f408497d32dccc" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>annotations</name></member>
      <member refid="class_ms_1_1_element_1a36da6a07a74436d96c739f7134873eda" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>autoplace</name></member>
      <member refid="class_ms_1_1_element_1ab762a021459424295e46ef909a5ab34f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>autoplaceCalculateOffset</name></member>
      <member refid="class_ms_1_1_element_1a52c2885c7d4e815d5475b1253cc4142f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>autoplaceMeasureElement</name></member>
      <member refid="class_ms_1_1_element_1a59de63838f71ae75bfbbcfd7960b29b5" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>autoplaceMeasureElement</name></member>
      <member refid="class_ms_1_1_element_1ab5518cc652f95d5d64ddd2bd7bfc6f6b" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>autoplaceSegmentElement</name></member>
      <member refid="class_ms_1_1_element_1a9446e28a4daa9ab0f785ce06ad0a14ab" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>autoplaceSegmentElement</name></member>
      <member refid="class_ms_1_1_element_1a977f5fd6785ea8b160d6b1943727ec9e" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>baseLine</name></member>
      <member refid="class_ms_1_1_element_1adc4d7b66745fbb0335dc73f0c3996994" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>bbox</name></member>
      <member refid="class_ms_1_1_element_1a2c5b74dd03d2d523e2318dbb3b15b13e" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>bbox</name></member>
      <member refid="class_ms_1_1_element_1a6ca9221d8858907d3063fa58255fb804" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>canvasBoundingRect</name></member>
      <member refid="class_ms_1_1_element_1aafc617f0cd5069a406a83da394b15e53" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>canvasPos</name></member>
      <member refid="class_ms_1_1_element_1a60903fed3fd306167c53d86ff3120b3c" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>canvasX</name></member>
      <member refid="class_ms_1_1_element_1a6b065b12b8c1a8549b2a5f96394059af" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>change</name></member>
      <member refid="class_ms_1_1_segment_1a1c53e32a09fdab00ea643714fa3e42e8" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>checkElement</name></member>
      <member refid="class_ms_1_1_segment_1a0cbec79c667aa39ef89abdd4df374c27" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>checkEmpty</name></member>
      <member refid="class_ms_1_1_segment_1a323a02bed284456b6ed6efeb4cc1e191" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>clearAnnotations</name></member>
      <member refid="class_ms_1_1_segment_1a9b80f58c031081ddd2db36c819b335e8" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>clone</name></member>
      <member refid="class_ms_1_1_element_1aaf1b495b1a35846de518c268fc856afd" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>color</name></member>
      <member refid="class_ms_1_1_element_1af14e8c60099db93425f71d649f064fa7" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>composition</name></member>
      <member refid="class_ms_1_1_element_1a688112ba0053649f6ec94ed4efa19584" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>concertPitch</name></member>
      <member refid="class_ms_1_1_element_1a50e66c130bd475554fef1131c68ee4bb" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>contains</name></member>
      <member refid="class_ms_1_1_segment_1a9adaf3b1b191b949ca562d891c4c5a49" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>cr</name></member>
      <member refid="class_ms_1_1_element_1a0e94278fa705e7ee020dd9b652d1bced" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>create</name></member>
      <member refid="class_ms_1_1_segment_1a148df89ed1001d7d23a975827dd666e6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>createShape</name></member>
      <member refid="class_ms_1_1_segment_1aa38b5aacc77c780f8eda8a0afc269aaf" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>createShapes</name></member>
      <member refid="class_ms_1_1_element_1a9de808f86f2dac5c4f7c4f9adc4d1d69" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a530f7947bf997c03a649c563168dbf12" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a052b0228632c1fa016552be2d3da9c3a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a3af6a0d223defe966a8d9c3f2b4d531a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>custom</name></member>
      <member refid="class_ms_1_1_element_1a1a25d75c3a82ba05999a7443eb40b804" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>defaultGrip</name></member>
      <member refid="class_ms_1_1_element_1a29d9f58036c4aa2b86033515187bcf8f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>deleteLater</name></member>
      <member refid="class_ms_1_1_segment_1afde517eb0b39a5f649e25fc929038e7a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>dotPosX</name></member>
      <member refid="class_ms_1_1_element_1ad4d4351606adf92e9628dd7a85825ecb" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>drag</name></member>
      <member refid="class_ms_1_1_element_1a0250d845ffb8a34508b753bf57a7d407" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>dragAnchor</name></member>
      <member refid="class_ms_1_1_element_1a0e093baaf71efa68b681c69e70a2cb71" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>draw</name></member>
      <member refid="class_ms_1_1_element_1aea1fcde23f210754997babe67e7c32aa" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>drawAt</name></member>
      <member refid="class_ms_1_1_element_1aeacd589786e73e54e81ba2cc9a812126" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>drawEditMode</name></member>
      <member refid="class_ms_1_1_element_1a19be3f786fea6071a0043666dfed093c" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>drawSymbol</name></member>
      <member refid="class_ms_1_1_element_1ab46d5de09232cb2f8d3e52de5042eff1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>drawSymbol</name></member>
      <member refid="class_ms_1_1_element_1a99b748b700ce85d3507a51d5221191f4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>drawSymbols</name></member>
      <member refid="class_ms_1_1_element_1aae2c7e7cfc90cf5e4d34573599c4cfe9" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>drawSymbols</name></member>
      <member refid="class_ms_1_1_element_1a0ca69a9fb48e7b9fb481aacaf3860032" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>drop</name></member>
      <member refid="class_ms_1_1_element_1ac8a8ef532022a6618fd7c2827ab9d9e1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>dropTarget</name></member>
      <member refid="class_ms_1_1_element_1a6392770f67e4c8dee01c324f63d5fcd7" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>dump</name></member>
      <member refid="class_ms_1_1_element_1a63a79b1d3f298a5f06fe0548fc4474fc" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>edit</name></member>
      <member refid="class_ms_1_1_element_1a81f2c9509ccf414e30594abf843cbde2" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>EditBehavior</name></member>
      <member refid="class_ms_1_1_element_1a4de0afcde56da979d060edebd7bfd003" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>editCopy</name></member>
      <member refid="class_ms_1_1_element_1a4f5994e224c19a9f0ac2cdba056be706" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>editCut</name></member>
      <member refid="class_ms_1_1_element_1aebe5668ebea4eb253a203211eb6beb12" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>editDrag</name></member>
      <member refid="class_ms_1_1_element_1a8797b5bb9ed7fd50b89c6ef6b7647d3a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>Element</name></member>
      <member refid="class_ms_1_1_element_1acd09fb62181874c199be863980a23328" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>Element</name></member>
      <member refid="class_ms_1_1_segment_1a0a42bbe78c8e76c62fe4e3591b2eff2e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>element</name></member>
      <member refid="class_ms_1_1_segment_1a89f0f4996e4b2fd355ffb040b7029891" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>elementAt</name></member>
      <member refid="class_ms_1_1_segment_1a37a7c2088621a49ebefcd6f0e1e65da7" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>elist</name></member>
      <member refid="class_ms_1_1_segment_1ac0913af28a1cd7cfa535f7817143f540" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>elist</name></member>
      <member refid="class_ms_1_1_segment_1ab095d36e2aa43620629f1e87f5df032a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>empty</name></member>
      <member refid="class_ms_1_1_element_1adbcd81f12f80859fdaf2ca1bd24d23d1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>enabled</name></member>
      <member refid="class_ms_1_1_element_1abf57779ffc58ab9be91ff9376bb4b8c3" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>endDrag</name></member>
      <member refid="class_ms_1_1_element_1a5981873b891a9c965c6fa1714243d7c9" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>endEdit</name></member>
      <member refid="class_ms_1_1_element_1a1e189146458d406cd3e7b9d15202a4a1" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>endEditDrag</name></member>
      <member refid="class_ms_1_1_segment_1aa9b27fc6059b2bb530fd5965166c5f40" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>extraLeadingSpace</name></member>
      <member refid="class_ms_1_1_segment_1ae32294b6c31db3cc1f765a1986773cc6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>findAnnotation</name></member>
      <member refid="class_ms_1_1_segment_1a19bb06fa24b8756d503ce09c387da5b6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>findAnnotations</name></member>
      <member refid="class_ms_1_1_element_1a055b451ded2882a908bf0afe180686e6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>findMeasure</name></member>
      <member refid="class_ms_1_1_element_1a7fea3a47fdac9141e2fd743848be28e5" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>findMeasure</name></member>
      <member refid="class_ms_1_1_element_1a68fbdd43b617c755a867ead5bf49d0bd" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>findMeasureBase</name></member>
      <member refid="class_ms_1_1_element_1aa842ceef53b3036fa443670fdfd2dc84" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>findMeasureBase</name></member>
      <member refid="class_ms_1_1_segment_1a87913a9cc1c65b1f2ff52f67c14c0797" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>firstAnnotation</name></member>
      <member refid="class_ms_1_1_segment_1a65e06ebd3e6b0af2fdde6e9125626ac9" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>firstElement</name></member>
      <member refid="class_ms_1_1_segment_1af3aa0e960bdfcf7d82da9d51d76f5652" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>firstElementOfSegment</name></member>
      <member refid="class_ms_1_1_segment_1a32879f300d7f9b4031c5aa64c8323119" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>firstInNextSegments</name></member>
      <member refid="class_ms_1_1_segment_1a6a95eeb7b86dae891a68712b32d1ddca" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>firstSpanner</name></member>
      <member refid="class_ms_1_1_segment_1ac1bcfcf7f5bb0f19d75429fb9cbe51d9" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>fixStaffIdx</name></member>
      <member refid="class_ms_1_1_element_1aedd1f66a4881665f277bc30fefe765b2" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>flag</name></member>
      <member refid="class_ms_1_1_element_1a3679cdb6351e67e9f482fa9a7fb3d466" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>generated</name></member>
      <member refid="class_ms_1_1_segment_1a0f0decdac2b8174edc9d7254c745373d" prot="protected" virt="non-virtual"><scope>Ms::Segment</scope><name>getElement</name></member>
      <member refid="class_ms_1_1_segment_1afb1f4dcc84b940e801abb3c8769325f8" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>getProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a5dd171e2eca7de57f28a9bc4430bb12d" prot="protected" virt="virtual"><scope>Ms::Segment</scope><name>getPropertyFlagsIdx</name></member>
      <member refid="class_ms_1_1_score_element_1a36d66100b5c6df17eb37f276aaca0454" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>getPropertyStyle</name></member>
      <member refid="class_ms_1_1_element_1a03fc88ee19e2958f2443213af6d5e77d" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>gripAnchor</name></member>
      <member refid="class_ms_1_1_element_1ae6ac97922eb884d9f3af307ada91f74a" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>gripsCount</name></member>
      <member refid="class_ms_1_1_element_1ac4ac75b1d930639f3ed85d618ab38bdf" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>gripsPositions</name></member>
      <member refid="class_ms_1_1_segment_1a28f1500f879842bd3062bb08827dc3d7" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>hasAnnotationOrElement</name></member>
      <member refid="class_ms_1_1_segment_1aa5ec7241f8011535f732d44238b5a5da" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>hasElements</name></member>
      <member refid="class_ms_1_1_element_1abb3880878a2f2826b253d5e0e14b32b6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>header</name></member>
      <member refid="class_ms_1_1_element_1a2a8ba8af6817e602c27c154e93542028" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>height</name></member>
      <member refid="class_ms_1_1_segment_1a4bf18b37fbc19e7f8477fc8ea503852b" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>init</name></member>
      <member refid="class_ms_1_1_score_element_1a8deeadfce551a58b1078f1af62c2075d" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>initElementStyle</name></member>
      <member refid="class_ms_1_1_element_1a0677d13d1c54b74e3b2154169facfc91" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>initialEditModeGrip</name></member>
      <member refid="class_ms_1_1_segment_1a067cdce1b36d6e9ea5428b1cb05e8b04" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>insertStaff</name></member>
      <member refid="class_ms_1_1_element_1a77459c7e2f1077ec3b68b11c26640685" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>intersects</name></member>
      <member refid="class_ms_1_1_element_1a5f1d010c61f361c3310fd22cd9f65d88" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>ipos</name></member>
      <member refid="class_ms_1_1_segment_1abe9f71da912f170efab9228863248663" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isAmbitusType</name></member>
      <member refid="class_ms_1_1_segment_1a2d5c0a44331a6330d8d8aa1381b30f12" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isBarLineType</name></member>
      <member refid="class_ms_1_1_segment_1a6408d27758a1ab84557a73fefc2cd5d7" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isBeginBarLineType</name></member>
      <member refid="class_ms_1_1_score_element_1a997e1063786d8c705c74b3d66c54f269" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isBox</name></member>
      <member refid="class_ms_1_1_segment_1ae172984bc3f5532adff61a346006fd5d" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isBreathType</name></member>
      <member refid="class_ms_1_1_score_element_1ad05261e50a084a0c6c42fced1ca78d8f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isBSymbol</name></member>
      <member refid="class_ms_1_1_score_element_1accef1c91df491a43c54e70474deea60c" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isChordRest</name></member>
      <member refid="class_ms_1_1_segment_1a12875266ecd46db59c8ba3a12857c944" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isChordRestType</name></member>
      <member refid="class_ms_1_1_segment_1aa7eebe7c9a666d118f322f7bb484454e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isClefType</name></member>
      <member refid="class_ms_1_1_score_element_1a203290a59b13861b957d2943f65a4cf0" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isDurationElement</name></member>
      <member refid="class_ms_1_1_element_1accef4917f0fce522b94b90a3ccd0f76b" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>isEditable</name></member>
      <member refid="class_ms_1_1_element_1a52a39d1aee1e730f3cd399a5714b66f0" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>isElement</name></member>
      <member refid="class_ms_1_1_segment_1a8bc9c0ddee2937bad84e49d527476cfc" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isEndBarLineType</name></member>
      <member refid="class_ms_1_1_segment_1a44acf78d7f350ac07078bd468ecad1c8" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isHeaderClefType</name></member>
      <member refid="class_ms_1_1_segment_1ad718781aace48b1782106f27c856aeaa" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isKeySigAnnounceType</name></member>
      <member refid="class_ms_1_1_segment_1ad8d0303402a624f94e14f426cd476ddc" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isKeySigType</name></member>
      <member refid="class_ms_1_1_score_element_1a0d5f2d0a979bf52ab2436f6ceb6d9ef6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isLineSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a1d34473f54590e3d8c2a1bc78b560c21" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isLinked</name></member>
      <member refid="class_ms_1_1_score_element_1a06e5d7c169bf6eb01f5f723cbdae973f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isMeasureBase</name></member>
      <member refid="class_ms_1_1_element_1aaad0ef7a078cd5d1659ff7ed9f65582c" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>isMovable</name></member>
      <member refid="class_ms_1_1_element_1a592da9bef8f5ea3c9840931e8db5f6f6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isNudged</name></member>
      <member refid="class_ms_1_1_element_1a8612168f4af9d7a976e1f8c8f6826143" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isPrintable</name></member>
      <member refid="class_ms_1_1_score_element_1a4de90a044cdd2a7030d707f2b081c8a4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isSLine</name></member>
      <member refid="class_ms_1_1_score_element_1acf35020b5e670ac13791697e65b679d4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isSLineSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a372dfc0678c5194028e61b6a9a24ab62" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isSlurTieSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a98f8c58df0f5baafe63414bedf84514f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isSpanner</name></member>
      <member refid="class_ms_1_1_score_element_1a5aa58f96618edb0e3ff660e1c96c5d4e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isSpannerSegment</name></member>
      <member refid="class_ms_1_1_score_element_1ac009e016c7a3dc148b0aaad50c1c4547" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isStaffTextBase</name></member>
      <member refid="class_ms_1_1_segment_1a33891c2ac20889369c11702c13a135ec" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isStartRepeatBarLineType</name></member>
      <member refid="class_ms_1_1_score_element_1a4d0de3ac9401da46c32ed8becb9d496b" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isStyled</name></member>
      <member refid="class_ms_1_1_score_element_1a979b6e1bc10cf790e755aa8641feb4cf" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isTextBase</name></member>
      <member refid="class_ms_1_1_score_element_1a7151838e2192a30624d6111dd4c87918" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isTextLineBase</name></member>
      <member refid="class_ms_1_1_score_element_1ab98a731c7adf65cebc23235f9fe150af" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isTextLineBaseSegment</name></member>
      <member refid="class_ms_1_1_segment_1a6e0a5bc5828d2c2e217c3686457ff2d1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isTimeSigAnnounceType</name></member>
      <member refid="class_ms_1_1_segment_1a2869f67639a3de89412695c3cb0f5464" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isTimeSigType</name></member>
      <member refid="class_ms_1_1_segment_1a5f0b0ddb0f2fe018c750c261b342e533" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isType</name></member>
      <member refid="class_ms_1_1_element_1aa8c81e3444c2166a739fb31ca1bffe4e" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>isUserModified</name></member>
      <member refid="class_ms_1_1_score_element_1aac3320320d350a161ed3f9a601160451" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>isVBoxBase</name></member>
      <member refid="class_ms_1_1_element_1a07c3b2ed980bf10d79c377a68f7c500d" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>itemDiscovered</name></member>
      <member refid="class_ms_1_1_segment_1a35611388a40cb4db9a60bf31c23c1601" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>lastAnnotation</name></member>
      <member refid="class_ms_1_1_segment_1ae4cba2e39fce792aa683b826bee1da0a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>lastElement</name></member>
      <member refid="class_ms_1_1_segment_1ade1d9f16280c6ecddb3c2daa155d1758" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>lastElementOfSegment</name></member>
      <member refid="class_ms_1_1_segment_1afec9ec067383f911d6f625039e8b8fc2" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>lastInPrevSegments</name></member>
      <member refid="class_ms_1_1_segment_1a1cff28b1481177c8450077fbfd7dc43b" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>lastSpanner</name></member>
      <member refid="class_ms_1_1_element_1a3ae68f5da280c53fd1d329f20601818b" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>layout</name></member>
      <member refid="class_ms_1_1_score_element_1ad9b69df1d2c04f2b298520bb649a8c55" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>lid</name></member>
      <member refid="class_ms_1_1_element_1ab6aade6de785c3ad52c1ed1dadcfcd9f" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>linkedClone</name></member>
      <member refid="class_ms_1_1_score_element_1a2f0ed55c566c19cb483d77250cb52450" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>linkList</name></member>
      <member refid="class_ms_1_1_score_element_1a3d5c97191484848b3f10e754246f8758" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>links</name></member>
      <member refid="class_ms_1_1_score_element_1a1dad93f0591eb31f69854e8f141b051e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>linkTo</name></member>
      <member refid="class_ms_1_1_element_1a904f7cbd2d6c478e10a6e7d7ae9f638d" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>localSpatiumChanged</name></member>
      <member refid="class_ms_1_1_element_1ad01cda9f6017d09c9fb9305de18e9310" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>mag</name></member>
      <member refid="class_ms_1_1_element_1a7d8e2560e3ab7d216656bf79ecff7ae8" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>magS</name></member>
      <member refid="class_ms_1_1_score_element_1ae4991aaf0d79271cc347530f3d07fcd6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>masterScore</name></member>
      <member refid="class_ms_1_1_segment_1a44dc6d5b22a75152673060bc059acfb9" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>measure</name></member>
      <member refid="class_ms_1_1_element_1a90f21ba358732f3c471069758d84a76f" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>mimeData</name></member>
      <member refid="class_ms_1_1_element_1a00b370d217141ef8efe9d32b1f737ce8" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>minDistance</name></member>
      <member refid="class_ms_1_1_segment_1a763a0ff679c376b95f7ce51bb69b68a1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>minHorizontalCollidingDistance</name></member>
      <member refid="class_ms_1_1_segment_1a6efb223aa110f1cc438409ce139d28d7" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>minHorizontalDistance</name></member>
      <member refid="class_ms_1_1_segment_1a967f59330c99b0029f89b5f1a0111663" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>minLeft</name></member>
      <member refid="class_ms_1_1_segment_1a3e9fe693c69c6608b97bc951054c1a69" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>minLeft</name></member>
      <member refid="class_ms_1_1_segment_1a22f3a07d9e8f34d868c003ced09d0a65" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>minRight</name></member>
      <member refid="class_ms_1_1_element_1a76367db103b54a315bfcfcbb9e58b3ab" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>mousePress</name></member>
      <member refid="class_ms_1_1_element_1acee1036e1efc8c4142fdf980d37b5745" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>move</name></member>
      <member refid="class_ms_1_1_score_element_1ad80dda73306d6b784b0cac4626f797d4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>name</name></member>
      <member refid="class_ms_1_1_score_element_1ab6ded8e7ff6dcb45db0036a57f9f9d26" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>name</name></member>
      <member refid="class_ms_1_1_element_1a3b88a2b00074559aad9b8948eaf07a6f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>name2Element</name></member>
      <member refid="class_ms_1_1_score_element_1a971f91737e74571d6e4b6bb78f56e1dc" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>name2type</name></member>
      <member refid="class_ms_1_1_score_element_1ae41701f68025bc77c26f6db74b452465" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>name2type</name></member>
      <member refid="class_ms_1_1_segment_1a1c4c00c6b1052c6c122f5fc665ec8a20" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>next</name></member>
      <member refid="class_ms_1_1_segment_1ad0ee4fbcb35085bdefc7b2c69d8dcfbf" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>next</name></member>
      <member refid="class_ms_1_1_segment_1a8c27ddfb0004417dd89b655e3480a6a0" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>next1</name></member>
      <member refid="class_ms_1_1_segment_1a3f002e065d5ff6f750b947d13d7503bb" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>next1</name></member>
      <member refid="class_ms_1_1_segment_1aa53e40717084c46ea22310ff6404c224" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>next1enabled</name></member>
      <member refid="class_ms_1_1_segment_1a8080c698203ea7dd9f7f00b2e2d0bb00" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>next1MM</name></member>
      <member refid="class_ms_1_1_segment_1a139dbad8cb0264535f8ec38cf17f75cf" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>next1MM</name></member>
      <member refid="class_ms_1_1_segment_1aacaa89821976f55a33688d3a19e69565" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>next1MMenabled</name></member>
      <member refid="class_ms_1_1_segment_1a2e8c3d552efd3f052dab6cd23a68d36a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>nextActive</name></member>
      <member refid="class_ms_1_1_segment_1a9f5ab118a8d72224adf13df9918ccea1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>nextAnnotation</name></member>
      <member refid="class_ms_1_1_segment_1a9f84e65ea1cc200227a75b058ab8e8d8" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>nextChordRest</name></member>
      <member refid="class_ms_1_1_segment_1af72e054dc7896adb071659dea6eff6b1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>nextCR</name></member>
      <member refid="class_ms_1_1_segment_1a5e534221e4f5a67fe1f21397e9e32db9" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>nextElement</name></member>
      <member refid="class_ms_1_1_segment_1a81092ae7891eb2ac2d43d6fe86e1e749" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>nextElement</name></member>
      <member refid="class_ms_1_1_segment_1a9ace55e84ca6c74230c809d1a824f912" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>nextElementOfSegment</name></member>
      <member refid="class_ms_1_1_segment_1a560efa5ed72325089f62eb7f27d600e8" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>nextEnabled</name></member>
      <member refid="class_ms_1_1_element_1ab9a5b8bfe46bc3cf604635a2689bb343" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>nextGrip</name></member>
      <member refid="class_ms_1_1_element_1ad5e377ed9b055434956aa3ee92a3b3a9" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>nextSegmentElement</name></member>
      <member refid="class_ms_1_1_element_1a8da4cf37b6c3f27351f096ec5847d1b6" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>normalModeEditBehavior</name></member>
      <member refid="class_ms_1_1_segment_1aa425eaed4218824e6eab022852f06380" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>notChordRestType</name></member>
      <member refid="class_ms_1_1_element_1a2ba48a5bec00a30fe829a9e6e477d1d0" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>offset</name></member>
      <member refid="class_ms_1_1_element_1ad6648a1f597c54d30aa6418dcd4ff64c" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>offsetChanged</name></member>
      <member refid="class_ms_1_1_segment_1a295db77c0cf520508dfbcc4497e2f738" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>operator&lt;</name></member>
      <member refid="class_ms_1_1_element_1a77e9d09289e5df2742e8b80c18e6fe14" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>operator=</name></member>
      <member refid="class_ms_1_1_segment_1a6082182541496137b8aaac46b4806c06" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>operator&gt;</name></member>
      <member refid="class_ms_1_1_element_1a97c6426acf5bd7303aef532c1d95f105" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>pageBoundingRect</name></member>
      <member refid="class_ms_1_1_element_1a06cc027fe14db0cf896f02931356ae24" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>pagePos</name></member>
      <member refid="class_ms_1_1_element_1afbc508a91ce6aa696f2f6e33bd350bd8" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>pageX</name></member>
      <member refid="class_ms_1_1_element_1a52b30fdd589beba5b760a561a50ac601" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>parent</name></member>
      <member refid="class_ms_1_1_element_1a0049832d4191b3ce02446efa09127610" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>part</name></member>
      <member refid="class_ms_1_1_element_1a8ba22391443270db0f91a3164c457d1e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>placeAbove</name></member>
      <member refid="class_ms_1_1_element_1a50092b502c319cb696998f24fc038695" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>placeBelow</name></member>
      <member refid="class_ms_1_1_element_1a951493711a51487f7f3c1786703b1a20" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>placement</name></member>
      <member refid="class_ms_1_1_element_1a59da7ad9fd3194d87120ecca6e7ebc75" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>placeMultiple</name></member>
      <member refid="class_ms_1_1_element_1aa1bfaad0745fdce188743b73821e0692" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>point</name></member>
      <member refid="class_ms_1_1_element_1a19157e811d0d2a0e3c94dc844039ba2f" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>pos</name></member>
      <member refid="class_ms_1_1_segment_1acacbc2ea5286f526b5fc5b8ccc44de47" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prev</name></member>
      <member refid="class_ms_1_1_segment_1a129c317254495a5b2a2ce954d5cf839a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prev</name></member>
      <member refid="class_ms_1_1_segment_1a07a0b52e5f58941bd85ca307455e62c6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prev1</name></member>
      <member refid="class_ms_1_1_segment_1a77773b88b7154a03c1cd664dfecb8cf6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prev1</name></member>
      <member refid="class_ms_1_1_segment_1af359b40f5fd11ba0cb5ee367e6a9ce85" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prev1enabled</name></member>
      <member refid="class_ms_1_1_segment_1a166e457ef0cd1b1a946ed83591d420fd" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prev1MM</name></member>
      <member refid="class_ms_1_1_segment_1a9da5bed337b49f6603f31319a3a73619" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prev1MM</name></member>
      <member refid="class_ms_1_1_segment_1ad1502e1a87b4e49731223c075edece70" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prev1MMenabled</name></member>
      <member refid="class_ms_1_1_segment_1acc499b83bc3a2874a551ca4919f8867f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prevActive</name></member>
      <member refid="class_ms_1_1_segment_1aeb5eee4d40810e61acbd706f305b1aaf" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prevAnnotation</name></member>
      <member refid="class_ms_1_1_segment_1a17eb3c10f9d1ffde13d801a6eefbe863" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prevElement</name></member>
      <member refid="class_ms_1_1_segment_1ad48ce06a988e98b0da7d4cf1e6f56ded" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prevElement</name></member>
      <member refid="class_ms_1_1_segment_1ac1f098c4087582f1e615b03a3c86101f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prevElementOfSegment</name></member>
      <member refid="class_ms_1_1_segment_1ad97476625810d6e81e3617bf80c760bf" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>prevEnabled</name></member>
      <member refid="class_ms_1_1_element_1ade142ed940c21dfcd893bb8fd42c97ca" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>prevGrip</name></member>
      <member refid="class_ms_1_1_element_1a31599e271170912967669cfddd1e49b4" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>prevSegmentElement</name></member>
      <member refid="class_ms_1_1_segment_1a5a8d9501d46968fddbc05f290515de1e" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>propertyDefault</name></member>
      <member refid="class_ms_1_1_score_element_1aaae0b7999568ce64245a5cf995af62b5" prot="public" virt="non-virtual" ambiguityscope="Ms::ScoreElement::"><scope>Ms::Segment</scope><name>propertyDefault</name></member>
      <member refid="class_ms_1_1_element_1a7450fdfe3875f10243ae5a97883f9d34" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>propertyDelegate</name></member>
      <member refid="class_ms_1_1_score_element_1a9b9c00757c23cba103638b4ab63df03e" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>propertyFlags</name></member>
      <member refid="class_ms_1_1_score_element_1ab00670f7d8229c14090cc3d7376d2202" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>propertyFlagsList</name></member>
      <member refid="class_ms_1_1_element_1a44c16323c852e23c783b8d7362cc9c6a" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>propertyId</name></member>
      <member refid="class_ms_1_1_element_1a01a8b01010e449fb1530dd27805ed042" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>propertyUserValue</name></member>
      <member refid="class_ms_1_1_segment_1a9bfbc65005fbb71af6b6b432c85f7a74" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>read</name></member>
      <member refid="class_ms_1_1_score_element_1a92ef81d3a9835ec8e78a308229da35f8" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>readAddConnector</name></member>
      <member refid="class_ms_1_1_element_1a0d7df07df85c18fd01d52efed33a2034" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>readMimeData</name></member>
      <member refid="class_ms_1_1_element_1aabedff22ee4d865dea6442fabb6a53a2" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>readProperties</name></member>
      <member refid="class_ms_1_1_score_element_1a8b3be86196659c2e0fb6ed86256cb0fe" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>readProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a473e639853dd8adc607a5c2a63c6d4ad" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>readProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a053d7512b54eaa787bcef0eba427a76f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>readStyledProperty</name></member>
      <member refid="class_ms_1_1_element_1a4422ccd59c2a9759591e15e290d3afdb" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>readType</name></member>
      <member refid="class_ms_1_1_element_1affddbd300aaeca46a5dc8eaf9ef44849" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>rebaseMinDistance</name></member>
      <member refid="class_ms_1_1_element_1a0d9b98767134ff6a72d5ad910fd52e7a" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>rebaseOffset</name></member>
      <member refid="class_ms_1_1_segment_1a667234863eb2620d723edf19ad00d0e7" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>remove</name></member>
      <member refid="class_ms_1_1_segment_1a6cc607fbbb0bbd2fbaf44977a8654617" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>removeAnnotation</name></member>
      <member refid="class_ms_1_1_segment_1abd1fd5a7d7a5cff8929cb8cbc1301db8" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>removeElement</name></member>
      <member refid="class_ms_1_1_segment_1aa38dbd980653d24cd1d3343f66fdfb8e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>removeStaff</name></member>
      <member refid="class_ms_1_1_element_1aaa90bc751111ad8ec041e2004321fbfe" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>reset</name></member>
      <member refid="class_ms_1_1_score_element_1a8f3e233ff30279756578c751c0ea3e17" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>resetProperty</name></member>
      <member refid="class_ms_1_1_element_1a7d61fcd7dc55027f4f356101b2c0f3bf" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>roffset</name></member>
      <member refid="class_ms_1_1_element_1aa637afe72e7a1f186b6e9bcb2b26fa78" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>rpos</name></member>
      <member refid="class_ms_1_1_segment_1a8a396189ef9375898066fb2d30952d79" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>rtick</name></member>
      <member refid="class_ms_1_1_element_1aa521acf22e0820ab42a7ab43c08fa57f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>rxoffset</name></member>
      <member refid="class_ms_1_1_element_1a6a063f005375c9b61c53cf49ebc14623" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>rxpos</name></member>
      <member refid="class_ms_1_1_element_1a8f60347a3bda60cf2db952b9dc6332ab" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>ryoffset</name></member>
      <member refid="class_ms_1_1_element_1a1397cfb5140978e6cd9aa294ade7d738" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>rypos</name></member>
      <member refid="class_ms_1_1_segment_1a5ca5b0ff459c6022e9468fb8629c4df2" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>scanElements</name></member>
      <member refid="class_ms_1_1_score_element_1a70883d048b0884821ac779d9ab168151" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>score</name></member>
      <member refid="class_ms_1_1_score_element_1a3fed4ec5f58054eb578ff9c7bb80d72f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_score_element_1ac2b2cb70fe954ba2b1cce6d35743edf2" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_element_1a965327598f61fdc8b3b8f4160dfa13c8" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>screenReaderInfo</name></member>
      <member refid="class_ms_1_1_segment_1a3433e9b1c158570c08f989b544a05cc2" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>Segment</name></member>
      <member refid="class_ms_1_1_segment_1a9706d9837744739f8f523cbc3ddf7929" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>Segment</name></member>
      <member refid="class_ms_1_1_segment_1afdcd8458722693e1ce57e1a8fb4eeb00" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>Segment</name></member>
      <member refid="class_ms_1_1_segment_1accf66d981db70ac1bd843ca5e03330a1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>segmentType</name></member>
      <member refid="class_ms_1_1_segment_1a8056e876b2356e5b349ab779a747f98e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>segmentType</name></member>
      <member refid="class_ms_1_1_element_1a7b4ff51eff905fed21705445958253c1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>selectable</name></member>
      <member refid="class_ms_1_1_element_1ae4f2f3a774def87e608afd55ef29b3e9" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>selected</name></member>
      <member refid="class_ms_1_1_element_1a7b231391a59527cb00b7f08bb5279e58" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setAutoplace</name></member>
      <member refid="class_ms_1_1_element_1abe5c0aa8e74388b2b6b336dfec469a35" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setbbox</name></member>
      <member refid="class_ms_1_1_element_1a22907ac84ae65fb5b6c3bc2b14f3b23c" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setColor</name></member>
      <member refid="class_ms_1_1_element_1aad752b8ae0d976379ee918fd50f9bd0e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setComposition</name></member>
      <member refid="class_ms_1_1_segment_1a3d52cb81e00336d49938b6e43e96ead3" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setDotPosX</name></member>
      <member refid="class_ms_1_1_element_1a8ca2ec95d1247f2940b1285205b2f633" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setDropTarget</name></member>
      <member refid="class_ms_1_1_segment_1abd202529f56fe3135e6465c349b430fa" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setElement</name></member>
      <member refid="class_ms_1_1_segment_1a2f11fa5a47b88ccf882831a6a5950c8c" prot="private" virt="non-virtual"><scope>Ms::Segment</scope><name>setEmpty</name></member>
      <member refid="class_ms_1_1_element_1ab75c49bf26fcb549bd1959ffe7925d8b" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setEnabled</name></member>
      <member refid="class_ms_1_1_segment_1a72a1fb2ab890728fb72c91e7c3d3048d" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setExtraLeadingSpace</name></member>
      <member refid="class_ms_1_1_element_1afbd51224c47d00551983d1b25f3c6f39" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setFlag</name></member>
      <member refid="class_ms_1_1_element_1ac28da1fe20339f2277852976ac6d7d8f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setFlag</name></member>
      <member refid="class_ms_1_1_element_1a6f4204d12e78c77052520492ae4416cd" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setGenerated</name></member>
      <member refid="class_ms_1_1_element_1a5033ef29dffbf6e40958e4fdd2802b6d" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setHeader</name></member>
      <member refid="class_ms_1_1_element_1a48786d2a55a0857f1685299e97b85b60" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setHeight</name></member>
      <member refid="class_ms_1_1_score_element_1ae1e16c1a83100a1ea23b05bfb1642283" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setLinks</name></member>
      <member refid="class_ms_1_1_element_1a49df2a43ee4c87d33b78c60cce70ff4e" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setMag</name></member>
      <member refid="class_ms_1_1_element_1a7b5cd12e550c5be0c4399a55c93d1ea9" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setMinDistance</name></member>
      <member refid="class_ms_1_1_segment_1ae0860e587897eb3457dd78dd56d8cca2" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setNext</name></member>
      <member refid="class_ms_1_1_element_1a7bb9bbbf1c501bf50adfa4508da42056" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setOffset</name></member>
      <member refid="class_ms_1_1_element_1acdc3b830bf0d9bfe501b182b28200c98" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setOffset</name></member>
      <member refid="class_ms_1_1_element_1a432e2033ca1c24ef8179458d1e604509" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setOffsetChanged</name></member>
      <member refid="class_ms_1_1_element_1aa7757f6d62dc28447706ee8eb12da5ec" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setParent</name></member>
      <member refid="class_ms_1_1_element_1ae13af03f0efac5348d139609cbadc826" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setPlacement</name></member>
      <member refid="class_ms_1_1_element_1a2a2ce2358cc23529d8f038a940062e62" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_element_1ac7fcfee452c4de8e270aa6320365008c" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_segment_1adf1c821cc8f95e036b0ed25973542f29" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setPrev</name></member>
      <member refid="class_ms_1_1_segment_1a210480665bdc52b0e5975102fdb60eb5" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setProperty</name></member>
      <member refid="class_ms_1_1_score_element_1aceed92c262270a2a79d3f97d0f018a29" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setPropertyFlags</name></member>
      <member refid="class_ms_1_1_segment_1a458e64e2a7ec6846e1f085dc843fa416" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setRtick</name></member>
      <member refid="class_ms_1_1_segment_1a5482249b6b1460998636115bb416256a" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setScore</name></member>
      <member refid="class_ms_1_1_segment_1ab41fcb7024cea2f319fa34e0ca7a7489" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setSegmentType</name></member>
      <member refid="class_ms_1_1_element_1adfe1acfd98d816c02267b9d26a693618" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setSelectable</name></member>
      <member refid="class_ms_1_1_element_1aa7d9ce43d66fd04a403e2242051dd7a8" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setSelected</name></member>
      <member refid="class_ms_1_1_element_1ad76cff3c891435e058cd2ab572bcf9d3" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setSizeIsSpatiumDependent</name></member>
      <member refid="class_ms_1_1_segment_1a3cc5cb6dbcd884168c976ec987051222" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setStretch</name></member>
      <member refid="class_ms_1_1_element_1a2610a3ae6f4ce80c36a123fa7d1e33f2" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setSystemFlag</name></member>
      <member refid="class_ms_1_1_element_1a9b433e4368d19bc18b9d8cb4c41fe1d4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setTag</name></member>
      <member refid="class_ms_1_1_segment_1a65a42b0bfd39e1ff7c954155fb32e914" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setTicks</name></member>
      <member refid="class_ms_1_1_element_1a884bf81982c8c302cbdf79ea567c3ced" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setTrack</name></member>
      <member refid="class_ms_1_1_element_1a304d88a7891a731cbfb8e5b0c2e8a5fc" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setTrailer</name></member>
      <member refid="class_ms_1_1_element_1a41438f8c28ffb2eb06d55de8360c1969" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setVisible</name></member>
      <member refid="class_ms_1_1_element_1a03037db721d985f097d7ca610f402850" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setVoice</name></member>
      <member refid="class_ms_1_1_element_1ae3346b5a7ad5893674afc28c9b0877ec" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>setWidth</name></member>
      <member refid="class_ms_1_1_segment_1a44a5795b484762f44e405f5e74cb7802" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setWritten</name></member>
      <member refid="class_ms_1_1_segment_1a4c3a13cc57a6e854151ce75fe5fa7752" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setX</name></member>
      <member refid="class_ms_1_1_element_1a1a35bada3f70ea05096258aa18d74b3c" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>setZ</name></member>
      <member refid="class_ms_1_1_element_1ad46a1fa8985b3d3897101b295a7a5d3e" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>shape</name></member>
      <member refid="class_ms_1_1_segment_1adf9189b637f30e83f286a4626063c143" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>shapes</name></member>
      <member refid="class_ms_1_1_segment_1aafd99e408489e5b3b162c1a642d81ed4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>shapes</name></member>
      <member refid="class_ms_1_1_element_1a3e3e415df166153ec434b9a143ad7744" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>sizeIsSpatiumDependent</name></member>
      <member refid="class_ms_1_1_segment_1a2cbbfb84fd3b591abc886e21018c1c33" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>sortStaves</name></member>
      <member refid="class_ms_1_1_element_1a9f375d79304c4cec5b45ea883c9efc86" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>spatium</name></member>
      <member refid="class_ms_1_1_element_1a8198d208370c064154b2be113981cbda" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>spatiumChanged</name></member>
      <member refid="class_ms_1_1_segment_1a7e392d82964e59dd59bef7c1ae6ffd65" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>splitsTuplet</name></member>
      <member refid="class_ms_1_1_element_1a14581354d9bfc2c39c7dafbed79403da" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>staff</name></member>
      <member refid="class_ms_1_1_element_1a3c37abb86b5dfb5b16fe74155154bab8" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>staffIdx</name></member>
      <member refid="class_ms_1_1_segment_1afe26f7a1d64fa1a5628063f1596e090f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>staffShape</name></member>
      <member refid="class_ms_1_1_segment_1ac0b6d5ecfe455b95278c5ea02cc1cf50" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>staffShape</name></member>
      <member refid="class_ms_1_1_element_1a3c2f8d8c52d96d1812733ec1669b576c" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>staffType</name></member>
      <member refid="class_ms_1_1_element_1a7d1a4797b0aba5b63dbf254429d5fc5e" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>startDrag</name></member>
      <member refid="class_ms_1_1_element_1a44811717889176d96221850366e5f055" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>startEdit</name></member>
      <member refid="class_ms_1_1_element_1a0415a5b5710c311e92ba189e201c73c7" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>startEditDrag</name></member>
      <member refid="class_ms_1_1_segment_1a56b621a8aee981e1cca66f6248468046" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>stretch</name></member>
      <member refid="class_ms_1_1_score_element_1abd7730432b512afc15873362a5414bad" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>styleChanged</name></member>
      <member refid="class_ms_1_1_score_element_1a08e4c60af2466c57931724393f7bee4f" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>styledProperties</name></member>
      <member refid="class_ms_1_1_element_1a31f9e63002b9f16ad6b4f35ba7a85bf4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>styleP</name></member>
      <member refid="class_ms_1_1_score_element_1a8a3670f26efa9a07e14695cee4512dc4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>styleValue</name></member>
      <member refid="class_ms_1_1_element_1ad38a889b51fa8b8553a15ca29abbc874" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>subtype</name></member>
      <member refid="class_ms_1_1_segment_1a99b767a9af29a94f1fd8374643628196" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>subTypeName</name></member>
      <member refid="class_ms_1_1_segment_1ad90a3cfc9d476073302c95022fdde569" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>subTypeName</name></member>
      <member refid="class_ms_1_1_element_1a861aa05fa45296c04d4309143211a9e6" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>subtypeName</name></member>
      <member refid="class_ms_1_1_segment_1aee2da233c04193956cc5a2e20ce08f37" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>swapElements</name></member>
      <member refid="class_ms_1_1_element_1a1625813b59654991c24a9a10eb580f07" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symAdvance</name></member>
      <member refid="class_ms_1_1_element_1a70a8140969dcd988ed77e91c27b6a84f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symBbox</name></member>
      <member refid="class_ms_1_1_element_1adad5f2c7a943687f0b3de2e896942898" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symBbox</name></member>
      <member refid="class_ms_1_1_element_1a984c5f0381896ac71fcf054d056bbe66" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symCutOutNE</name></member>
      <member refid="class_ms_1_1_element_1a545d8382d25c1402b0e46974ce84d444" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symCutOutNW</name></member>
      <member refid="class_ms_1_1_element_1af0b900ab6bb2674c1dcad1c5100fb4ee" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symCutOutSE</name></member>
      <member refid="class_ms_1_1_element_1a0cb9e0cf90c74e5b718e10f8a9a796da" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symCutOutSW</name></member>
      <member refid="class_ms_1_1_element_1ab3254b043c87dd338bfa6630c93e8e26" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symHeight</name></member>
      <member refid="class_ms_1_1_element_1a95c4ffee60af75b49f6e1c644db44493" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symIsValid</name></member>
      <member refid="class_ms_1_1_element_1a7c49ac344dd76c56fd51dad4287b79d5" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symStemDownNW</name></member>
      <member refid="class_ms_1_1_element_1a2526cc958a514c74daebfcdcc2dae7dc" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symStemUpSE</name></member>
      <member refid="class_ms_1_1_element_1adc45b084165da6ceb3afa7913d6a3feb" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symWidth</name></member>
      <member refid="class_ms_1_1_element_1a175d0a2254d83ee5f486123cb3ea2612" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>symWidth</name></member>
      <member refid="class_ms_1_1_segment_1ac55f422eeb641115fd88da2c278a3514" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>system</name></member>
      <member refid="class_ms_1_1_element_1a77c37605cf48595a7e6dc079722839c4" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>systemFlag</name></member>
      <member refid="class_ms_1_1_element_1a31f5e22d38f84ff52c512857c52dd668" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>tag</name></member>
      <member refid="class_ms_1_1_segment_1a23cde3c97359266e2787b107aa0c8cdf" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>tick</name></member>
      <member refid="class_ms_1_1_segment_1ab9fe97d529862db451072e088903b746" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>ticks</name></member>
      <member refid="class_ms_1_1_element_1ab4986d1b4f0d45b8e84cf52c46885c36" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>track</name></member>
      <member refid="class_ms_1_1_element_1a868f0f5663dd1d7422c19700e070a4a6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>trailer</name></member>
      <member refid="class_ms_1_1_element_1ab28ffe83fb1064fb3c2a6fa648bca688" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>triggerLayout</name></member>
      <member refid="class_ms_1_1_element_1a5fb627b3ef6f80967a432f86ad028117" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>triggerLayoutAll</name></member>
      <member refid="class_ms_1_1_segment_1aafa5c086e47d01d8d9d9b5ccdd13861c" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>type</name></member>
      <member refid="class_ms_1_1_element_1ab3227faba09a745523ba6748d9f94ab5" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_element_1af0505b234ccb7520a7d93ddd09ca4e1f" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_element_1a4d0c98408c09304865fc3c9e011a9695" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a4d0c98408c09304865fc3c9e011a9695" prot="public" virt="non-virtual" ambiguityscope="Ms::ScoreElement::"><scope>Ms::Segment</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1ab31ad4878a7d6e5c5acbd88e3232f2fb" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>undoPushProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a2f2ea7d6e1179cbb00f95689125482d0" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>undoResetProperty</name></member>
      <member refid="class_ms_1_1_element_1aa9328fefa5648b5bc3f020b6cf481f38" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>undoSetColor</name></member>
      <member refid="class_ms_1_1_element_1a4033806e37a8a0bd95f75e06fb6d1286" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>undoSetVisible</name></member>
      <member refid="class_ms_1_1_score_element_1a994f2abd8df02a160c7055b0cae26c87" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>undoUnlink</name></member>
      <member refid="class_ms_1_1_score_element_1a1d76afaf3ee463445961c3d981901be1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>unlink</name></member>
      <member refid="class_ms_1_1_element_1a2cbf6c48adfc2d3856a7670ce1a199da" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>updateGrips</name></member>
      <member refid="class_ms_1_1_score_element_1acb1866df2e440923354fa5b1ee9d5f52" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>userName</name></member>
      <member refid="class_ms_1_1_element_1a9f91ce44289781c10fbaab9f5867d387" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>visible</name></member>
      <member refid="class_ms_1_1_element_1a7e7ba0487a1113884ed218ba74c6a7d6" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>voice</name></member>
      <member refid="class_ms_1_1_element_1ad1e0d3968ecafec4140aac087bd8fd99" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>vStaffIdx</name></member>
      <member refid="class_ms_1_1_element_1abd781d11186d1951028a0efaf6d5cf5a" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>width</name></member>
      <member refid="class_ms_1_1_segment_1a62adb026000a21b5f79f0d783930376d" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>write</name></member>
      <member refid="class_ms_1_1_element_1a6d2d848ec99034b85e1a4e3b33857840" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>writeProperties</name></member>
      <member refid="class_ms_1_1_score_element_1a4ae6e7e095b8f672951ffc30f980c45d" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>writeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a7a3de180bd5a72ab3e27b7fbf9213567" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>writeStyledProperties</name></member>
      <member refid="class_ms_1_1_segment_1a78e88ce4842fabf3a3852e87d40e4559" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>written</name></member>
      <member refid="class_ms_1_1_segment_1a27109a26a9b8f71b690db260f1ed7673" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>x</name></member>
      <member refid="class_ms_1_1_element_1a30c056051bbce9e867a512b8cbc1f912" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>y</name></member>
      <member refid="class_ms_1_1_element_1a0e947d90ca39376fd98b995d34811126" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>z</name></member>
      <member refid="class_ms_1_1_element_1a1a5eff5e9b3d54d8e8207a7c594a1fc9" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>~Element</name></member>
      <member refid="class_ms_1_1_score_element_1abc6cbffe99d185a7262f86be05cf6365" prot="public" virt="virtual"><scope>Ms::Segment</scope><name>~ScoreElement</name></member>
      <member refid="class_ms_1_1_segment_1af6fdeca3656fbd9040d46e4ad94a88f1" prot="public" virt="non-virtual"><scope>Ms::Segment</scope><name>~Segment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
