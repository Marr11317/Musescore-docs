<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_ms_1_1_measure" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Ms::Measure</compoundname>
    <basecompoundref refid="class_ms_1_1_measure_base" prot="public" virt="non-virtual">Ms::MeasureBase</basecompoundref>
    <includes refid="measure_8h" local="yes">measure.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_measure_1a4b25070833bb0a8a99b8ed614c166c87" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_ms_1_1_m_staff" kindref="compound">MStaff</ref> * &gt;</type>
        <definition>std::vector&lt;MStaff*&gt; Ms::Measure::_mstaves</definition>
        <argsstring></argsstring>
        <name>_mstaves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="66" column="20" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1ae7cf17c269e6e333a56a82f4517e0ef8" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_segment_list" kindref="compound">SegmentList</ref></type>
        <definition>SegmentList Ms::Measure::_segments</definition>
        <argsstring></argsstring>
        <name>_segments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="67" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1aafd045d80e501903ccdeea07d2885279" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure* Ms::Measure::_mmRest</definition>
        <argsstring></argsstring>
        <name>_mmRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="68" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1a794f9499fe0d9f3c533145618307f993" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal Ms::Measure::_userStretch</definition>
        <argsstring></argsstring>
        <name>_userStretch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="70" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1a6f1c0c0029479a5a494076207fbfa20d" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Measure::_timesig</definition>
        <argsstring></argsstring>
        <name>_timesig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="72" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1a871639fca06d8fec204f7025a815d40a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Measure::_mmRestCount</definition>
        <argsstring></argsstring>
        <name>_mmRestCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="74" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1affd86ecd5e41bee4ffe462cb0e956184" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Measure::_playbackCount</definition>
        <argsstring></argsstring>
        <name>_playbackCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="78" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1ae54dafadcfb1dc7f41e88a14752f4992" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Measure::_repeatCount</definition>
        <argsstring></argsstring>
        <name>_repeatCount</name>
        <briefdescription>
<para>end repeat marker und repeat count </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="81" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1a782eb3c10ff20ef8330a689d17beb9e0" prot="private" static="no" mutable="no">
        <type>MeasureNumberMode</type>
        <definition>MeasureNumberMode Ms::Measure::_noMode</definition>
        <argsstring></argsstring>
        <name>_noMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="83" column="25" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_measure_1a75299702df9e15b61498d6183edd0ef1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Measure::_breakMultiMeasureRest</definition>
        <argsstring></argsstring>
        <name>_breakMultiMeasureRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="84" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ms_1_1_measure_1a4a0bee090960e90e45c76a578115c7f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::push_back</definition>
        <argsstring>(Segment *e)</argsstring>
        <name>push_back</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="86" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a6887d7ab77b7e864637d43d39906718d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::push_front</definition>
        <argsstring>(Segment *e)</argsstring>
        <name>push_front</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="87" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a7fef565a68dbfc8b7118e3af202cacd1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::fillGap</definition>
        <argsstring>(const Fraction &amp;pos, const Fraction &amp;len, int track, const Fraction &amp;stretch)</argsstring>
        <name>fillGap</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>stretch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="89" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/check.cpp" bodystart="322" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ac829548f174316a6275ff01600254da8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::computeMinWidth</definition>
        <argsstring>(Segment *s, qreal x, bool isSystemHeader)</argsstring>
        <name>computeMinWidth</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSystemHeader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="90" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="4202" bodyend="4304"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1afc25a4695fa1502e8b4f79241f5fe563" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::readVoice</definition>
        <argsstring>(XmlReader &amp;e, int staffIdx, bool irregular)</argsstring>
        <name>readVoice</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>irregular</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="92" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2072" bodyend="2411"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_measure_1ad33228530386c218d91944ea77ef3719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Measure::Measure</definition>
        <argsstring>(Score *=0)</argsstring>
        <name>Measure</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <defname>s</defname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="95" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="197" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ad3f8454e27f876b92fffc321ad14afd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Measure::Measure</definition>
        <argsstring>(const Measure &amp;)</argsstring>
        <name>Measure</name>
        <param>
          <type>const <ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> &amp;</type>
          <defname>m</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="96" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="227" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a71f1ca1c1daed3580fa63b49af3585a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Measure::~Measure</definition>
        <argsstring>()</argsstring>
        <name>~Measure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="97" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="305" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a69ceb948917e7717ecd3d3780da3b45c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure* Ms::Measure::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="class_ms_1_1_measure_base_1a879ce4750d7d0567f7274f3fff7619c3">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="99" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ae41981bf29b8ff5cb871ff02bbc2a5df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_ms_1a2c92ce0204176ede1ab86e2f44ae6b9e" kindref="member">ElementType</ref></type>
        <definition>ElementType Ms::Measure::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="class_ms_1_1_measure_base_1ab5f6111d12a058461be1fe560c2c41b9">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="100" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4d429b75faea4736aa986b1453990ef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::setScore</definition>
        <argsstring>(Score *s) override</argsstring>
        <name>setScore</name>
        <reimplements refid="class_ms_1_1_measure_base_1a1689e6b22754c7f21c03cffc0875138e">setScore</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="101" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="278" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a6d55112bb257c5176e026e6ebc0709e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Measure::cloneMeasure</definition>
        <argsstring>(Score *, const Fraction &amp;tick, TieMap *)</argsstring>
        <name>cloneMeasure</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <defname>sc</defname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>tick</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_tie_map" kindref="compound">TieMap</ref> *</type>
          <defname>tieMap</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="102" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2915" bodyend="3018"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1af01d117ba83d46ce334966a3cbcead28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::read</definition>
        <argsstring>(XmlReader &amp;, int idx)</argsstring>
        <name>read</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="104" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1928" bodyend="2066"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ae90ce97cf72a49b2759c2e8c4b914b31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::read</definition>
        <argsstring>(XmlReader &amp;d)</argsstring>
        <name>read</name>
        <reimplements refid="class_ms_1_1_element_1a36da47af8aac2c422a2bc3eb91f8ac4f">read</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="105" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9c2149c8ec8d3c801a66b291c5e25cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::readAddConnector</definition>
        <argsstring>(ConnectorInfoReader *info, bool pasteMode) override</argsstring>
        <name>readAddConnector</name>
        <reimplements refid="class_ms_1_1_score_element_1a92ef81d3a9835ec8e78a308229da35f8">readAddConnector</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_connector_info_reader" kindref="compound">ConnectorInfoReader</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pasteMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="106" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2417" bodyend="2449"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a047b4c55b35fb49c5de3fbba6e976813" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::write</definition>
        <argsstring>(XmlWriter &amp;xml) const override</argsstring>
        <name>write</name>
        <reimplements refid="class_ms_1_1_measure_base_1af6b62ee81c234c69450036dc1c78f467">write</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="107" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a972233bd3791b04d14857f9fcce25346" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::write</definition>
        <argsstring>(XmlWriter &amp;, int, bool writeSystemElements, bool forceTimeSig) const</argsstring>
        <name>write</name>
        <reimplements refid="class_ms_1_1_measure_base_1adc34f93f24a935c975e1e082b32c67fb">write</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <defname>xml</defname>
        </param>
        <param>
          <type>int</type>
          <defname>staff</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSystemElements</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceTimeSig</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="108" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1858" bodyend="1922"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a58a0d5df7cc517f65e5f127efa94f722" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::writeBox</definition>
        <argsstring>(XmlWriter &amp;) const</argsstring>
        <name>writeBox</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="109" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4770735f3f9c4e80167be9d48e2855c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::readBox</definition>
        <argsstring>(XmlReader &amp;)</argsstring>
        <name>readBox</name>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="110" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a2c67ef4fc0d77fa272feef2e45ba3617" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isEditable</definition>
        <argsstring>() const override</argsstring>
        <name>isEditable</name>
        <reimplements refid="class_ms_1_1_element_1accef4917f0fce522b94b90a3ccd0f76b">isEditable</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="111" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a8f22e407bfbfaf695bf68ebf9fc4e8f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::checkMeasure</definition>
        <argsstring>(int idx)</argsstring>
        <name>checkMeasure</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="112" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/check.cpp" bodystart="349" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a817b1bd3c14e6d5e9ba961ccd092e45b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::add</definition>
        <argsstring>(Element *) override</argsstring>
        <name>add</name>
        <reimplements refid="class_ms_1_1_measure_base_1ae90f898c7019348602aa6f77154c443f">add</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>Add new <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> <emphasis>el</emphasis> to <ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="114" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="807" bodyend="913"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aeab577d3e439c3b0577ee8eb3866a1f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::remove</definition>
        <argsstring>(Element *) override</argsstring>
        <name>remove</name>
        <reimplements refid="class_ms_1_1_measure_base_1afe73bb904bd65e8241677f7f5d5976f4">remove</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>Remove <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> <emphasis>el</emphasis> from <ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="115" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="920" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ab4695ee08d2b769260f0589d94f48097" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::change</definition>
        <argsstring>(Element *o, Element *n) override</argsstring>
        <name>change</name>
        <reimplements refid="class_ms_1_1_element_1a6b065b12b8c1a8549b2a5f96394059af">change</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="116" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1015" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9d807a2ebc9889d854dfbd3d243a45eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::spatiumChanged</definition>
        <argsstring>(qreal oldValue, qreal newValue) override</argsstring>
        <name>spatiumChanged</name>
        <reimplements refid="class_ms_1_1_element_1a8198d208370c064154b2be113981cbda">spatiumChanged</reimplements>
        <param>
          <type>qreal</type>
          <declname>oldValue</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="117" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1032" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9c4de13b592b3e0cc6a2398641da99ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_system" kindref="compound">System</ref> *</type>
        <definition>System* Ms::Measure::system</definition>
        <argsstring>() const</argsstring>
        <name>system</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="119" column="14" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a42a584c417b6f27bea251229a78e4566" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::hasVoices</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>hasVoices</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="120" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="285" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ac1ee1ce30118d3a7aa965f297c76bd28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setHasVoices</definition>
        <argsstring>(int staffIdx, bool v)</argsstring>
        <name>setHasVoices</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="121" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="286" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ac872216bf9760613e1f059f8531be5ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_staff_lines" kindref="compound">StaffLines</ref> *</type>
        <definition>StaffLines * Ms::Measure::staffLines</definition>
        <argsstring>(int staffIdx)</argsstring>
        <name>staffLines</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="123" column="18" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="287" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a879b5d9349b7deb7f03df244ed55f6b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spacer" kindref="compound">Spacer</ref> *</type>
        <definition>Spacer * Ms::Measure::vspacerDown</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>vspacerDown</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="124" column="14" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="288" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a22789a30661e49d958abc30c0dce71ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_spacer" kindref="compound">Spacer</ref> *</type>
        <definition>Spacer * Ms::Measure::vspacerUp</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>vspacerUp</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="125" column="14" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9ef23d0042137cfc91aadab687a1c40c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setStaffVisible</definition>
        <argsstring>(int staffIdx, bool visible)</argsstring>
        <name>setStaffVisible</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="126" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="290" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ab1dbe71681084c01b1bcd68595d5ba18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setStaffStemless</definition>
        <argsstring>(int staffIdx, bool stemless)</argsstring>
        <name>setStaffStemless</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stemless</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="127" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="291" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a05f61e821fcc878e4442039f8170ac74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::corrupted</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>corrupted</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="128" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a08bbacc9d393f2e0d35f0adfd440a88d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setCorrupted</definition>
        <argsstring>(int staffIdx, bool val)</argsstring>
        <name>setCorrupted</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="129" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1abcbc1dd00451ef0580e2892425032fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setNoText</definition>
        <argsstring>(int staffIdx, MeasureNumber *)</argsstring>
        <name>setNoText</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_measure_number" kindref="compound">MeasureNumber</ref> *</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="130" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ae8a8d5cae3cb7386cd6012953ab92573" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure_number" kindref="compound">MeasureNumber</ref> *</type>
        <definition>MeasureNumber * Ms::Measure::noText</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>noText</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="131" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9e2273241416eec4c0b0b8c473d792d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::createStaves</definition>
        <argsstring>(int)</argsstring>
        <name>createStaves</name>
        <param>
          <type>int</type>
          <defname>staffIdx</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="133" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="261" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ab70e232004b65f2e432cd2ec0e5631dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>MeasureNumberMode</type>
        <definition>MeasureNumberMode Ms::Measure::measureNumberMode</definition>
        <argsstring>() const</argsstring>
        <name>measureNumberMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="135" column="25" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a70c51bea207bfd73e61cbe36b9add89e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setMeasureNumberMode</definition>
        <argsstring>(MeasureNumberMode v)</argsstring>
        <name>setMeasureNumberMode</name>
        <param>
          <type>MeasureNumberMode</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="136" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aca83bf67143934f224cd28aa7bdb4459" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Measure::timesig</definition>
        <argsstring>() const</argsstring>
        <name>timesig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="138" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ad506977829d7909fc0ad9b74e00bea33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setTimesig</definition>
        <argsstring>(const Fraction &amp;f)</argsstring>
        <name>setTimesig</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="139" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ad153317ff35f475504d7a67bd3559a3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Measure::stretchedLen</definition>
        <argsstring>(Staff *) const</argsstring>
        <name>stretchedLen</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <defname>staff</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="141" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2906" bodyend="2909"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aaf1d634e5b6782073f551ccf9e6b4481" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isIrregular</definition>
        <argsstring>() const</argsstring>
        <name>isIrregular</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="142" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a77d61671946e30745eb16eca7e8696c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Measure::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="144" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a3c5e55d2f2291d5ee433a093c0b1dd04" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Ms::Segment</ref> *</type>
        <definition>Ms::Segment* Ms::Measure::first</definition>
        <argsstring>() const</argsstring>
        <name>first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="145" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ac92ed73d1cf6ab2967b87c8273c0b317" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Measure::first</definition>
        <argsstring>(SegmentType t) const</argsstring>
        <name>first</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="146" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1af2c07666af51f029e0f6fa810caadcd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Measure::firstEnabled</definition>
        <argsstring>() const</argsstring>
        <name>firstEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="147" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a251d5169092a1437befbec204fa0efe9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Ms::Segment</ref> *</type>
        <definition>Ms::Segment* Ms::Measure::last</definition>
        <argsstring>() const</argsstring>
        <name>last</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="149" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a739b42bcabec5855e374b509f74ea815" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment_list" kindref="compound">SegmentList</ref> &amp;</type>
        <definition>SegmentList&amp; Ms::Measure::segments</definition>
        <argsstring>()</argsstring>
        <name>segments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="150" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1acbff3dcca0e52f0ce80519c3e71b6cfe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_segment_list" kindref="compound">SegmentList</ref> &amp;</type>
        <definition>const SegmentList&amp; Ms::Measure::segments</definition>
        <argsstring>() const</argsstring>
        <name>segments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="151" column="25" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1afda80245c06f8b4cbb80df38d7b8eec4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Measure::userStretch</definition>
        <argsstring>() const</argsstring>
        <name>userStretch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="153" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3201" bodyend="3204"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a922c3e99a4ff9f7a8953d720cddaf958" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setUserStretch</definition>
        <argsstring>(qreal v)</argsstring>
        <name>setUserStretch</name>
        <param>
          <type>qreal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="154" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a979df7753ae3d039720198643f865f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::stretchMeasure</definition>
        <argsstring>(qreal stretch)</argsstring>
        <name>stretchMeasure</name>
        <param>
          <type>qreal</type>
          <declname>stretch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="156" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3285" bodyend="3427"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9909fe4a0720b7800e1fedcda555444b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Measure::computeTicks</definition>
        <argsstring>()</argsstring>
        <name>computeTicks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="157" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3435" bodyend="3457"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aedba86af30a033adef26958d92990e67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::layout2</definition>
        <argsstring>()</argsstring>
        <name>layout2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="158" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="549" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a6b47e5546f64b548040f03aed658a179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::layoutMeasureNumber</definition>
        <argsstring>()</argsstring>
        <name>layoutMeasureNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="159" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="478" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aefcfedff89ec29c05617bab601d99e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
        <definition>Chord * Ms::Measure::findChord</definition>
        <argsstring>(Fraction tick, int track)</argsstring>
        <name>findChord</name>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
<para>Search for chord at position <emphasis>tick</emphasis> in <emphasis>track</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="161" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="674" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1abcc300aa27120a1c799aedfa211aec6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord_rest" kindref="compound">ChordRest</ref> *</type>
        <definition>ChordRest * Ms::Measure::findChordRest</definition>
        <argsstring>(Fraction tick, int track)</argsstring>
        <name>findChordRest</name>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <declname>tick</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
<para>Search for chord or rest at position <emphasis>tick</emphasis> at <emphasis>staff</emphasis> in <emphasis>voice</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="162" column="17" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="694" bodyend="707"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4b28a41711eb607b98dad9cb887aa991" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Measure::snap</definition>
        <argsstring>(const Fraction &amp;tick, const QPointF p) const</argsstring>
        <name>snap</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>const QPointF</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="163" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3024" bodyend="3040"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a283f044413870f312f9426d94b12c19c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
        <definition>Fraction Ms::Measure::snapNote</definition>
        <argsstring>(const Fraction &amp;tick, const QPointF p, int staff) const</argsstring>
        <name>snapNote</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>tick</declname>
        </param>
        <param>
          <type>const QPointF</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="164" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3046" bodyend="3062"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4a56d5857dc5c20ac50916bc41de85bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::insertStaff</definition>
        <argsstring>(Staff *, int staff)</argsstring>
        <name>insertStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <defname>staff</defname>
        </param>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="166" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1280" bodyend="1291"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1afc2cfccb91440ff0a05fba40148926eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::insertMStaff</definition>
        <argsstring>(MStaff *staff, int idx)</argsstring>
        <name>insertMStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_m_staff" kindref="compound">MStaff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="167" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1258" bodyend="1263"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ad8f3420c8336dc414b957c10b810e1ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::removeMStaff</definition>
        <argsstring>(MStaff *staff, int idx)</argsstring>
        <name>removeMStaff</name>
        <param>
          <type><ref refid="class_ms_1_1_m_staff" kindref="compound">MStaff</ref> *</type>
          <declname>staff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="168" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1269" bodyend="1274"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ae612bd158973276baba3df65f1e5d9d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::moveTicks</definition>
        <argsstring>(const Fraction &amp;diff) override</argsstring>
        <name>moveTicks</name>
        <reimplements refid="class_ms_1_1_measure_base_1abcd0e163de42bf3b2516c68233c30e99">moveTicks</reimplements>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="170" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1042" bodyend="1063"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1afb01f256d7010da687945637ae692326" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::cmdRemoveStaves</definition>
        <argsstring>(int s, int e)</argsstring>
        <name>cmdRemoveStaves</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="172" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1115" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a895e0b9f29745a00fce0d045a0c49c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::cmdAddStaves</definition>
        <argsstring>(int s, int e, bool createRest)</argsstring>
        <name>cmdAddStaves</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>createRest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="173" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1160" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1abc21efdbfd90e3732ea332c30273398d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::removeStaves</definition>
        <argsstring>(int s, int e)</argsstring>
        <name>removeStaves</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="174" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1069" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a08e3d561c52a0c1b3a4a6b5995267c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::insertStaves</definition>
        <argsstring>(int s, int e)</argsstring>
        <name>insertStaves</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="175" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1092" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a22f2fc82fa96fe4383b11c077f85d854" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Measure::tick2pos</definition>
        <argsstring>(Fraction) const</argsstring>
        <name>tick2pos</name>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <defname>tck</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="177" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="439" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a33665eb98a19a5561c6b72e4acaec230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Measure::tick2segment</definition>
        <argsstring>(const Fraction &amp;tick, SegmentType st=SegmentType::ChordRest)</argsstring>
        <name>tick2segment</name>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>tick</declname>
        </param>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>st</declname>
          <defval>SegmentType::ChordRest</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="178" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="713" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a99ffffdf436829bfd4583b59bd7f8dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::sortStaves</definition>
        <argsstring>(QList&lt; int &gt; &amp;dst)</argsstring>
        <name>sortStaves</name>
        <param>
          <type>QList&lt; int &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="180" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2619" bodyend="2639"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a5964d737ffa873b7772cbf81e0092987" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::acceptDrop</definition>
        <argsstring>(EditData &amp;) const override</argsstring>
        <name>acceptDrop</name>
        <reimplements refid="class_ms_1_1_element_1a35614445f0bc2212cbcc75c3f5810543">acceptDrop</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if an <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> of type <emphasis>type</emphasis> can be dropped on a <ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="182" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1315" bodyend="1376"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ab1083a3a6e0ac7cd35a27d9d71829560" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Measure::drop</definition>
        <argsstring>(EditData &amp;) override</argsstring>
        <name>drop</name>
        <reimplements refid="class_ms_1_1_element_1a0ca69a9fb48e7b9fb481aacaf3860032">drop</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <defname>data</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drop element. Handle a dropped element at position <emphasis>pos</emphasis> of given element <emphasis>type</emphasis> and <emphasis>subtype</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="183" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1385" bodyend="1665"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1adb00eda58072bd4fc267e0a581ed3216" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Measure::repeatCount</definition>
        <argsstring>() const</argsstring>
        <name>repeatCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="185" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4913911db820f64c25ad1ae7266b5a83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setRepeatCount</definition>
        <argsstring>(int val)</argsstring>
        <name>setRepeatCount</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="186" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="186" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a337f76e582585044598cfd507d6f0228" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Measure::findSegmentR</definition>
        <argsstring>(SegmentType st, const Fraction &amp;) const</argsstring>
        <name>findSegmentR</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="188" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="733" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a78e0b4b578eafff2f44d0753e4d32f0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Measure::undoGetSegmentR</definition>
        <argsstring>(SegmentType st, const Fraction &amp;f)</argsstring>
        <name>undoGetSegmentR</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="189" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="759" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aad5110345772e4588ae5c651c35d9387" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Measure::getSegmentR</definition>
        <argsstring>(SegmentType st, const Fraction &amp;f)</argsstring>
        <name>getSegmentR</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>f</declname>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a segment of type st at relative tick position t. If the segment does not exist, it is created. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="190" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="792" bodyend="800"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1abf1deb9dcefdb51509003440c4347b95" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment * Ms::Measure::findFirstR</definition>
        <argsstring>(SegmentType st, const Fraction &amp;rtick) const</argsstring>
        <name>findFirstR</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>rtick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="191" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="775" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a66a3e42855dec1d88936966d197a0ac0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Measure::findSegment</definition>
        <argsstring>(SegmentType st, const Fraction &amp;f) const</argsstring>
        <name>findSegment</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="194" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="194" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ab6c8d20b57a9c8e72e75684687932777" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Measure::undoGetSegment</definition>
        <argsstring>(SegmentType st, const Fraction &amp;f)</argsstring>
        <name>undoGetSegment</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="195" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aaf57616b83ee061e69f26e2b75fb2d87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
        <definition>Segment* Ms::Measure::getSegment</definition>
        <argsstring>(SegmentType st, const Fraction &amp;f)</argsstring>
        <name>getSegment</name>
        <param>
          <type><ref refid="namespace_ms_1a24593d5bc01ac95fdbec3d354d258894" kindref="member">SegmentType</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="196" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a772e278641842c27ed84b4234f339e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::connectTremolo</definition>
        <argsstring>()</argsstring>
        <name>connectTremolo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Connect two-notes tremolo and update duration types for the involved chords. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="198" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2556" bodyend="2594"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aa910bff7edd9435bd775b373f6010b34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Measure::createEndBarLines</definition>
        <argsstring>(bool)</argsstring>
        <name>createEndBarLines</name>
        <param>
          <type>bool</type>
          <defname>isLastMeasureInSystem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="200" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3576" bodyend="3728"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1afa5c4d44781f40f962d4818271f60249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::barLinesSetSpan</definition>
        <argsstring>(Segment *)</argsstring>
        <name>barLinesSetSpan</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <defname>seg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="201" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3543" bodyend="3568"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a494ef46ba1ca13806d6b7ea8868309e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setEndBarLineType</definition>
        <argsstring>(BarLineType val, int track, bool visible=true, QColor color=QColor())</argsstring>
        <name>setEndBarLineType</name>
        <param>
          <type>BarLineType</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>visible</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>QColor</type>
          <declname>color</declname>
          <defval>QColor()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="202" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3521" bodyend="3537"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9233f4c1eddd966b5be006bc7f2ba06c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_repeat_measure" kindref="compound">RepeatMeasure</ref> *</type>
        <definition>RepeatMeasure * Ms::Measure::cmdInsertRepeatMeasure</definition>
        <argsstring>(int staffIdx)</argsstring>
        <name>cmdInsertRepeatMeasure</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="204" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1671" bodyend="1703"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ad7a49f661029c21fc7a8fdc596b0e7b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::scanElements</definition>
        <argsstring>(void *data, void(*func)(void *, Element *), bool all=true) override</argsstring>
        <name>scanElements</name>
        <reimplements refid="class_ms_1_1_measure_base_1a60225d885a19cc554e0d1f74dd3085e7">scanElements</reimplements>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *, <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *)</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>all</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="206" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2525" bodyend="2548"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a87d09ddfc28cac3d0ebb184cfe2788cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::createVoice</definition>
        <argsstring>(int track)</argsstring>
        <name>createVoice</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="207" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2604" bodyend="2613"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1addc2f2f48a6fe5a8a3a6c2da234474bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::adjustToLen</definition>
        <argsstring>(Fraction, bool appendRestsIfNecessary=true)</argsstring>
        <name>adjustToLen</name>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <defname>nf</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>appendRestsIfNecessary</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="208" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1711" bodyend="1852"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4f56e739033bcbc53b8a20f03ad03938" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>AccidentalVal</type>
        <definition>AccidentalVal Ms::Measure::findAccidental</definition>
        <argsstring>(Note *) const</argsstring>
        <name>findAccidental</name>
        <param>
          <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
          <defname>note</defname>
        </param>
        <briefdescription>
<para>return current accidental value at note position </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="210" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="329" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a15f7fbbb7f21f0c936bb2e55c502c499" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>AccidentalVal</type>
        <definition>AccidentalVal Ms::Measure::findAccidental</definition>
        <argsstring>(Segment *s, int staffIdx, int line, bool &amp;error) const</argsstring>
        <name>findAccidental</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>line</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute accidental state at segment/staffIdx for relative staff line. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="211" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="391" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ab319c55877dbe3260530eebb9ae006c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::exchangeVoice</definition>
        <argsstring>(int voice1, int voice2, int staffIdx)</argsstring>
        <name>exchangeVoice</name>
        <param>
          <type>int</type>
          <declname>voice1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>voice2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="212" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2645" bodyend="2675"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aef2c1170f14dd5ba1a773c2d7e28d067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::checkMultiVoices</definition>
        <argsstring>(int staffIdx)</argsstring>
        <name>checkMultiVoices</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check for more than on voice in this measure and staff and set MStaff-&gt;hasVoices </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="213" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2683" bodyend="2714"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a0f8588760bcec4b2be52c042b26fec86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::hasVoice</definition>
        <argsstring>(int track) const</argsstring>
        <name>hasVoice</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="214" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2720" bodyend="2731"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aa8955b92304c0f9e719c99cd1302db78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isEmpty</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>isEmpty</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the measure is filled by a full-measure rest, or is full of rests on this staff, that may have fermatas on them. If staff is -1, then check for all staves. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="215" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2740" bodyend="2767"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ad2f9d925d748ce039a5ef8c336d0e8a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isFullMeasureRest</definition>
        <argsstring>() const</argsstring>
        <name>isFullMeasureRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="216" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2775" bodyend="2792"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a2f5cce1cae1aa068d45105b9bf78f75e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isRepeatMeasure</definition>
        <argsstring>(const Staff *staff) const</argsstring>
        <name>isRepeatMeasure</name>
        <param>
          <type>const <ref refid="class_ms_1_1_staff" kindref="compound">Staff</ref> *</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="217" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2798" bodyend="2814"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ae951dd61fdd2d1210b615e75c8d8c0fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::visible</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>visible</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="218" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2455" bodyend="2466"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a5e7d34f4cfd7e05b6d1b61b2f44a2e42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::stemless</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>stemless</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="219" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2472" bodyend="2476"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aaf2e3d06f88163f5bdfd0f68e11aa08e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isFinalMeasureOfSection</definition>
        <argsstring>() const</argsstring>
        <name>isFinalMeasureOfSection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="220" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2485" bodyend="2497"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ad768f9ac1e7fe4d60174c5625e14fd25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isAnacrusis</definition>
        <argsstring>() const</argsstring>
        <name>isAnacrusis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="221" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2503" bodyend="2507"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a10c82bce11282d22bec01e072891460f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isFirstInSystem</definition>
        <argsstring>() const</argsstring>
        <name>isFirstInSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="222" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2513" bodyend="2519"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1adcb12997b0fc5b963013139a4e1f3921" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::breakMultiMeasureRest</definition>
        <argsstring>() const</argsstring>
        <name>breakMultiMeasureRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="224" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a2326df9111e16c302d1e637c6c8ea167" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setBreakMultiMeasureRest</definition>
        <argsstring>(bool val)</argsstring>
        <name>setBreakMultiMeasureRest</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="225" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a3e481c6a09a16b60cde88b1e672684c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="227" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2820" bodyend="2847"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a0bacadec09269f14e4b58149a7fbf175" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isOnlyRests</definition>
        <argsstring>(int track) const</argsstring>
        <name>isOnlyRests</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="228" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2853" bodyend="2863"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ad6c117158b44ca9aeb05bc979e989436" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isOnlyDeletedRests</definition>
        <argsstring>(int track) const</argsstring>
        <name>isOnlyDeletedRests</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="229" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2869" bodyend="2879"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ac5856d6a60cde1a5041bbf921ceab378" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isOnlyDeletedRests</definition>
        <argsstring>(int track, const Fraction &amp;stick, const Fraction &amp;etick) const</argsstring>
        <name>isOnlyDeletedRests</name>
        <param>
          <type>int</type>
          <declname>track</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>stick</declname>
        </param>
        <param>
          <type>const <ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref> &amp;</type>
          <declname>etick</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="230" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="2885" bodyend="2900"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a56e234503204d1e2883f8cd5512caa80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Measure::playbackCount</definition>
        <argsstring>() const</argsstring>
        <name>playbackCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="232" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="232" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a15c2378b02793c2f8aab221559124fd3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setPlaybackCount</definition>
        <argsstring>(int val)</argsstring>
        <name>setPlaybackCount</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="233" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="233" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1af1e8fd79a9de3d2e12bbda91e1a82aff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QRectF</type>
        <definition>QRectF Ms::Measure::staffabbox</definition>
        <argsstring>(int staffIdx) const</argsstring>
        <name>staffabbox</name>
        <param>
          <type>int</type>
          <declname>staffIdx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="234" column="14" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="1297" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a7b480ee6b8a886f992c451071c18d243" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Measure::getProperty</definition>
        <argsstring>(Pid propertyId) const override</argsstring>
        <name>getProperty</name>
        <reimplements refid="class_ms_1_1_measure_base_1ad28e90512e43ecb8b5d1f48e425a575b">getProperty</reimplements>
        <param>
          <type>Pid</type>
          <declname>propertyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="236" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3068" bodyend="3086"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a8c45b32487eb8f5c4585bb7c12a848b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::setProperty</definition>
        <argsstring>(Pid propertyId, const QVariant &amp;) override</argsstring>
        <name>setProperty</name>
        <reimplements refid="class_ms_1_1_measure_base_1af9ede3d14a4842dbe4312d0e4f40638f">setProperty</reimplements>
        <param>
          <type>Pid</type>
          <declname>propertyId</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="237" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3092" bodyend="3118"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aba1be8fb011e8f82006930ad449fda67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Measure::propertyDefault</definition>
        <argsstring>(Pid) const override</argsstring>
        <name>propertyDefault</name>
        <reimplements refid="class_ms_1_1_measure_base_1a2f9ae1187f4e1d20a8cc065984d38b54">propertyDefault</reimplements>
        <param>
          <type>Pid</type>
          <defname>propertyId</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="238" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3124" bodyend="3146"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9491f66d4e4c82e05aaea063d3654ac8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::hasMMRest</definition>
        <argsstring>() const</argsstring>
        <name>hasMMRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="240" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ae92cfe704a9477074d0fbe1a3bb6ff61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::isMMRest</definition>
        <argsstring>() const</argsstring>
        <name>isMMRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="241" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9109c2c9621f0cc9ecd86afcae54afe8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure* Ms::Measure::mmRest</definition>
        <argsstring>() const</argsstring>
        <name>mmRest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="242" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a7dd90eaf72439bf012349d7e8f476425" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>const Measure * Ms::Measure::mmRest1</definition>
        <argsstring>() const</argsstring>
        <name>mmRest1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="243" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3182" bodyend="3195"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4f69d0d7b4406aeff800488d2dd06d97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setMMRest</definition>
        <argsstring>(Measure *m)</argsstring>
        <name>setMMRest</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="244" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4bc97255a366ad792cc65094767152c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Measure::mmRestCount</definition>
        <argsstring>() const</argsstring>
        <name>mmRestCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="245" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a405ecf7ac85a17e4285644b04a8085d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setMMRestCount</definition>
        <argsstring>(int n)</argsstring>
        <name>setMMRestCount</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="246" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a5228137f2805b40984b458c21f28b2a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Measure::mmRestFirst</definition>
        <argsstring>() const</argsstring>
        <name>mmRestFirst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="247" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3154" bodyend="3160"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a6ba907c7751b675b51ea2a192ace5699" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
        <definition>Measure * Ms::Measure::mmRestLast</definition>
        <argsstring>() const</argsstring>
        <name>mmRestLast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="248" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3168" bodyend="3174"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a8869603560feec9fc5043a5504dd2ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Measure::nextElementStaff</definition>
        <argsstring>(int staff)</argsstring>
        <name>nextElementStaff</name>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="250" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3210" bodyend="3238"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9f4f3f0ab29df1324b31196c56ff6ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Measure::prevElementStaff</definition>
        <argsstring>(int staff)</argsstring>
        <name>prevElementStaff</name>
        <param>
          <type>int</type>
          <declname>staff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="251" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3244" bodyend="3269"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a9b3cd3c2da92d5a0799962cf3c13b09d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::Measure::accessibleInfo</definition>
        <argsstring>() const override</argsstring>
        <name>accessibleInfo</name>
        <reimplements refid="class_ms_1_1_element_1a249d3763ecc760841d71c305004d4c93">accessibleInfo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="252" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3275" bodyend="3278"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ac7e0eb9cc9bfb9d619f2cb52ba6f2ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::addSystemHeader</definition>
        <argsstring>(bool firstSystem)</argsstring>
        <name>addSystemHeader</name>
        <param>
          <type>bool</type>
          <declname>firstSystem</declname>
          <defname>isFirstSystem</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add elements to make this measure suitable as the first measure of a system. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="254" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3787" bodyend="3970"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a260e48485af749a75d5e763700e13010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::addSystemTrailer</definition>
        <argsstring>(Measure *nm)</argsstring>
        <name>addSystemTrailer</name>
        <param>
          <type><ref refid="class_ms_1_1_measure" kindref="compound">Measure</ref> *</type>
          <declname>nm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="255" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3976" bodyend="4085"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a90caa02f9c7dfbb0b6f8e96134c29257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::removeSystemHeader</definition>
        <argsstring>()</argsstring>
        <name>removeSystemHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="256" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="4091" bodyend="4101"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a95d953121aa2ea9b6db91e2b147fed50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::removeSystemTrailer</definition>
        <argsstring>()</argsstring>
        <name>removeSystemTrailer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="257" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="4107" bodyend="4120"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a611694524ac414310b280c48d9870eb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_bar_line" kindref="compound">BarLine</ref> *</type>
        <definition>const BarLine * Ms::Measure::endBarLine</definition>
        <argsstring>() const</argsstring>
        <name>endBarLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="259" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3464" bodyend="3478"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a56ea1206c77157ef1f5ef91f062f3296" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>BarLineType</type>
        <definition>BarLineType Ms::Measure::endBarLineType</definition>
        <argsstring>() const</argsstring>
        <name>endBarLineType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="260" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3486" bodyend="3490"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ab2ed1822b680aff4926b625e1e1289ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Measure::endBarLineVisible</definition>
        <argsstring>() const</argsstring>
        <name>endBarLineVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="261" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3498" bodyend="3502"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aa7a17a610f625dc8042ea9e16be018ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::triggerLayout</definition>
        <argsstring>() const override</argsstring>
        <name>triggerLayout</name>
        <reimplements refid="class_ms_1_1_element_1ab28ffe83fb1064fb3c2a6fa648bca688">triggerLayout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="262" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3508" bodyend="3512"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1ae941c476b82dd103f64991ee3fff131f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Measure::basicStretch</definition>
        <argsstring>() const</argsstring>
        <name>basicStretch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="263" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3734" bodyend="3740"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1adb1f30fc6074d80e6c323f9b9655124b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Measure::basicWidth</definition>
        <argsstring>() const</argsstring>
        <name>basicWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="264" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3746" bodyend="3754"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aec5e17c92d990fc2b60e77225552fd1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Measure::layoutWeight</definition>
        <argsstring>(int maxMMRestLength=0) const</argsstring>
        <name>layoutWeight</name>
        <param>
          <type>int</type>
          <declname>maxMMRestLength</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="265" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="3760" bodyend="3777"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1aba9ac566a83090c50486bf155a795ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Measure::computeMinWidth</definition>
        <argsstring>()</argsstring>
        <name>computeMinWidth</name>
        <reimplements refid="class_ms_1_1_measure_base_1a4c0c387416b42decef16b9f25d2b935f">computeMinWidth</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="266" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="4306" bodyend="4354"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a8b08d9e9607782a9400c16140e243112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::checkHeader</definition>
        <argsstring>()</argsstring>
        <name>checkHeader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="267" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="4126" bodyend="4134"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a5c2da938ad615b8d3d2adccf77eb2059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::checkTrailer</definition>
        <argsstring>()</argsstring>
        <name>checkTrailer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="268" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="4140" bodyend="4148"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a22744d7e30b8487ed3880ad5dc2c2078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::setStretchedWidth</definition>
        <argsstring>(qreal)</argsstring>
        <name>setStretchedWidth</name>
        <param>
          <type>qreal</type>
          <defname>w</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="269" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="4154" bodyend="4171"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_measure_1a4a1ae88c341d451822e9c710fffdba10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Measure::layoutStaffLines</definition>
        <argsstring>()</argsstring>
        <name>layoutStaffLines</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="270" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.cpp" bodystart="251" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>one measure in a system </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Ms::MeasureBase</label>
        <link refid="class_ms_1_1_measure_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ms::Measure</label>
        <link refid="class_ms_1_1_measure"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
      </node>
      <node id="3">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QList&lt; ScoreElement * &gt;</label>
      </node>
      <node id="2">
        <label>Ms::MeasureBase</label>
        <link refid="class_ms_1_1_measure_base"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>_len</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>Ms::Measure</label>
        <link refid="class_ms_1_1_measure"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>Ms::Fraction</label>
        <link refid="class_ms_1_1_fraction"/>
      </node>
      <node id="4">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="5" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" line="65" column="33" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/measure.h" bodystart="65" bodyend="271"/>
    <listofallmembers>
      <member refid="class_ms_1_1_measure_1a75299702df9e15b61498d6183edd0ef1" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_breakMultiMeasureRest</name></member>
      <member refid="class_ms_1_1_element_1a85687d7e7b049c00327023c7306cec14" prot="protected" virt="non-virtual"><scope>Ms::Measure</scope><name>_color</name></member>
      <member refid="class_ms_1_1_score_element_1a648639a58d05aa85412217db5ad40b18" prot="protected" virt="non-virtual"><scope>Ms::Measure</scope><name>_elementStyle</name></member>
      <member refid="class_ms_1_1_measure_base_1a0acc22d02bfbfe8461aeba4d57ab0466" prot="protected" virt="non-virtual"><scope>Ms::Measure</scope><name>_len</name></member>
      <member refid="class_ms_1_1_score_element_1a405b151c60a010237414678a0e0952af" prot="protected" virt="non-virtual"><scope>Ms::Measure</scope><name>_links</name></member>
      <member refid="class_ms_1_1_measure_1aafd045d80e501903ccdeea07d2885279" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_mmRest</name></member>
      <member refid="class_ms_1_1_measure_1a871639fca06d8fec204f7025a815d40a" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_mmRestCount</name></member>
      <member refid="class_ms_1_1_measure_1a4b25070833bb0a8a99b8ed614c166c87" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_mstaves</name></member>
      <member refid="class_ms_1_1_element_1a24960cc1b17ecdef26c9e2e51f8778f4" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>_name</name></member>
      <member refid="class_ms_1_1_measure_1a782eb3c10ff20ef8330a689d17beb9e0" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_noMode</name></member>
      <member refid="class_ms_1_1_measure_1affd86ecd5e41bee4ffe462cb0e956184" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_playbackCount</name></member>
      <member refid="class_ms_1_1_score_element_1a6d4b99ddb9e217aaa9f9ae67a76861f3" prot="protected" virt="non-virtual"><scope>Ms::Measure</scope><name>_propertyFlagsList</name></member>
      <member refid="class_ms_1_1_measure_1ae54dafadcfb1dc7f41e88a14752f4992" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_repeatCount</name></member>
      <member refid="class_ms_1_1_measure_1ae7cf17c269e6e333a56a82f4517e0ef8" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_segments</name></member>
      <member refid="class_ms_1_1_measure_1a6f1c0c0029479a5a494076207fbfa20d" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_timesig</name></member>
      <member refid="class_ms_1_1_measure_1a794f9499fe0d9f3c533145618307f993" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>_userStretch</name></member>
      <member refid="class_ms_1_1_element_1a833151435bfcef81ea589f9e8fc3154b" prot="protected" virt="non-virtual"><scope>Ms::Measure</scope><name>_z</name></member>
      <member refid="class_ms_1_1_element_1ac64eee038c2d81d1ae934be877d8acc5" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>abbox</name></member>
      <member refid="class_ms_1_1_measure_1a5964d737ffa873b7772cbf81e0092987" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>acceptDrop</name></member>
      <member refid="class_ms_1_1_element_1ad28416b7cf27aad952ff9e872284ee54" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>accessibleExtraInfo</name></member>
      <member refid="class_ms_1_1_measure_1a9b3cd3c2da92d5a0799962cf3c13b09d" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>accessibleInfo</name></member>
      <member refid="class_ms_1_1_measure_1a817b1bd3c14e6d5e9ba961ccd092e45b" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>add</name></member>
      <member refid="class_ms_1_1_element_1aeda671935e53857c2dee17b03d68b276" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>addbbox</name></member>
      <member refid="class_ms_1_1_measure_1ac7e0eb9cc9bfb9d619f2cb52ba6f2ea8" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>addSystemHeader</name></member>
      <member refid="class_ms_1_1_measure_1a260e48485af749a75d5e763700e13010" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>addSystemTrailer</name></member>
      <member refid="class_ms_1_1_element_1a6ba0ad4dad0b5de65db725a10fc64278" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>addToSkyline</name></member>
      <member refid="class_ms_1_1_measure_1addc2f2f48a6fe5a8a3a6c2da234474bc" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>adjustToLen</name></member>
      <member refid="class_ms_1_1_element_1a36da6a07a74436d96c739f7134873eda" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>autoplace</name></member>
      <member refid="class_ms_1_1_element_1ab762a021459424295e46ef909a5ab34f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>autoplaceCalculateOffset</name></member>
      <member refid="class_ms_1_1_element_1a52c2885c7d4e815d5475b1253cc4142f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>autoplaceMeasureElement</name></member>
      <member refid="class_ms_1_1_element_1a59de63838f71ae75bfbbcfd7960b29b5" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>autoplaceMeasureElement</name></member>
      <member refid="class_ms_1_1_element_1ab5518cc652f95d5d64ddd2bd7bfc6f6b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>autoplaceSegmentElement</name></member>
      <member refid="class_ms_1_1_element_1a9446e28a4daa9ab0f785ce06ad0a14ab" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>autoplaceSegmentElement</name></member>
      <member refid="class_ms_1_1_measure_1afa5c4d44781f40f962d4818271f60249" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>barLinesSetSpan</name></member>
      <member refid="class_ms_1_1_element_1a977f5fd6785ea8b160d6b1943727ec9e" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>baseLine</name></member>
      <member refid="class_ms_1_1_measure_1ae941c476b82dd103f64991ee3fff131f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>basicStretch</name></member>
      <member refid="class_ms_1_1_measure_1adb1f30fc6074d80e6c323f9b9655124b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>basicWidth</name></member>
      <member refid="class_ms_1_1_element_1adc4d7b66745fbb0335dc73f0c3996994" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>bbox</name></member>
      <member refid="class_ms_1_1_element_1a2c5b74dd03d2d523e2318dbb3b15b13e" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>bbox</name></member>
      <member refid="class_ms_1_1_measure_1adcb12997b0fc5b963013139a4e1f3921" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>breakMultiMeasureRest</name></member>
      <member refid="class_ms_1_1_element_1a6ca9221d8858907d3063fa58255fb804" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>canvasBoundingRect</name></member>
      <member refid="class_ms_1_1_element_1aafc617f0cd5069a406a83da394b15e53" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>canvasPos</name></member>
      <member refid="class_ms_1_1_element_1a60903fed3fd306167c53d86ff3120b3c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>canvasX</name></member>
      <member refid="class_ms_1_1_measure_1ab4695ee08d2b769260f0589d94f48097" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>change</name></member>
      <member refid="class_ms_1_1_measure_1a8b08d9e9607782a9400c16140e243112" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>checkHeader</name></member>
      <member refid="class_ms_1_1_measure_1a8f22e407bfbfaf695bf68ebf9fc4e8f6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>checkMeasure</name></member>
      <member refid="class_ms_1_1_measure_1aef2c1170f14dd5ba1a773c2d7e28d067" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>checkMultiVoices</name></member>
      <member refid="class_ms_1_1_measure_1a5c2da938ad615b8d3d2adccf77eb2059" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>checkTrailer</name></member>
      <member refid="class_ms_1_1_measure_base_1a6ffcd00b3bb7c55cf1deca51648f788c" prot="protected" virt="non-virtual"><scope>Ms::Measure</scope><name>cleanupLayoutBreaks</name></member>
      <member refid="class_ms_1_1_measure_base_1a46fb74eb56c0c0b056e8f7a759675ece" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>clearElements</name></member>
      <member refid="class_ms_1_1_measure_1a69ceb948917e7717ecd3d3780da3b45c" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>clone</name></member>
      <member refid="class_ms_1_1_measure_1a6d55112bb257c5176e026e6ebc0709e2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>cloneMeasure</name></member>
      <member refid="class_ms_1_1_measure_1a895e0b9f29745a00fce0d045a0c49c28" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>cmdAddStaves</name></member>
      <member refid="class_ms_1_1_measure_1a9233f4c1eddd966b5be006bc7f2ba06c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>cmdInsertRepeatMeasure</name></member>
      <member refid="class_ms_1_1_measure_1afb01f256d7010da687945637ae692326" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>cmdRemoveStaves</name></member>
      <member refid="class_ms_1_1_element_1aaf1b495b1a35846de518c268fc856afd" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>color</name></member>
      <member refid="class_ms_1_1_element_1af14e8c60099db93425f71d649f064fa7" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>composition</name></member>
      <member refid="class_ms_1_1_measure_1ac829548f174316a6275ff01600254da8" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>computeMinWidth</name></member>
      <member refid="class_ms_1_1_measure_1aba9ac566a83090c50486bf155a795ea8" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>computeMinWidth</name></member>
      <member refid="class_ms_1_1_measure_1a9909fe4a0720b7800e1fedcda555444b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>computeTicks</name></member>
      <member refid="class_ms_1_1_element_1a688112ba0053649f6ec94ed4efa19584" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>concertPitch</name></member>
      <member refid="class_ms_1_1_measure_1a772e278641842c27ed84b4234f339e55" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>connectTremolo</name></member>
      <member refid="class_ms_1_1_element_1a50e66c130bd475554fef1131c68ee4bb" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>contains</name></member>
      <member refid="class_ms_1_1_measure_1a05f61e821fcc878e4442039f8170ac74" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>corrupted</name></member>
      <member refid="class_ms_1_1_element_1a0e94278fa705e7ee020dd9b652d1bced" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>create</name></member>
      <member refid="class_ms_1_1_measure_1aa910bff7edd9435bd775b373f6010b34" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>createEndBarLines</name></member>
      <member refid="class_ms_1_1_measure_1a9e2273241416eec4c0b0b8c473d792d3" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>createStaves</name></member>
      <member refid="class_ms_1_1_measure_1a87d09ddfc28cac3d0ebb184cfe2788cc" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>createVoice</name></member>
      <member refid="class_ms_1_1_element_1a9de808f86f2dac5c4f7c4f9adc4d1d69" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a530f7947bf997c03a649c563168dbf12" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a052b0228632c1fa016552be2d3da9c3a" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a3af6a0d223defe966a8d9c3f2b4d531a" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>custom</name></member>
      <member refid="class_ms_1_1_element_1a1a25d75c3a82ba05999a7443eb40b804" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>defaultGrip</name></member>
      <member refid="class_ms_1_1_element_1a29d9f58036c4aa2b86033515187bcf8f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>deleteLater</name></member>
      <member refid="class_ms_1_1_element_1ad4d4351606adf92e9628dd7a85825ecb" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>drag</name></member>
      <member refid="class_ms_1_1_element_1a0250d845ffb8a34508b753bf57a7d407" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>dragAnchor</name></member>
      <member refid="class_ms_1_1_element_1a0e093baaf71efa68b681c69e70a2cb71" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>draw</name></member>
      <member refid="class_ms_1_1_element_1aea1fcde23f210754997babe67e7c32aa" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>drawAt</name></member>
      <member refid="class_ms_1_1_element_1aeacd589786e73e54e81ba2cc9a812126" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>drawEditMode</name></member>
      <member refid="class_ms_1_1_element_1a19be3f786fea6071a0043666dfed093c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>drawSymbol</name></member>
      <member refid="class_ms_1_1_element_1ab46d5de09232cb2f8d3e52de5042eff1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>drawSymbol</name></member>
      <member refid="class_ms_1_1_element_1a99b748b700ce85d3507a51d5221191f4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>drawSymbols</name></member>
      <member refid="class_ms_1_1_element_1aae2c7e7cfc90cf5e4d34573599c4cfe9" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>drawSymbols</name></member>
      <member refid="class_ms_1_1_measure_1ab1083a3a6e0ac7cd35a27d9d71829560" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>drop</name></member>
      <member refid="class_ms_1_1_element_1ac8a8ef532022a6618fd7c2827ab9d9e1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>dropTarget</name></member>
      <member refid="class_ms_1_1_element_1a6392770f67e4c8dee01c324f63d5fcd7" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>dump</name></member>
      <member refid="class_ms_1_1_element_1a63a79b1d3f298a5f06fe0548fc4474fc" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>edit</name></member>
      <member refid="class_ms_1_1_element_1a81f2c9509ccf414e30594abf843cbde2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>EditBehavior</name></member>
      <member refid="class_ms_1_1_element_1a4de0afcde56da979d060edebd7bfd003" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>editCopy</name></member>
      <member refid="class_ms_1_1_element_1a4f5994e224c19a9f0ac2cdba056be706" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>editCut</name></member>
      <member refid="class_ms_1_1_element_1aebe5668ebea4eb253a203211eb6beb12" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>editDrag</name></member>
      <member refid="class_ms_1_1_measure_base_1ab0832f1270b77762f3c12758fe22c3c2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>el</name></member>
      <member refid="class_ms_1_1_measure_base_1a5ff4dfd4e22172c779b0eaeb8ba6b4ba" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>el</name></member>
      <member refid="class_ms_1_1_element_1a8797b5bb9ed7fd50b89c6ef6b7647d3a" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>Element</name></member>
      <member refid="class_ms_1_1_element_1acd09fb62181874c199be863980a23328" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>Element</name></member>
      <member refid="class_ms_1_1_measure_1a3e481c6a09a16b60cde88b1e672684c9" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>empty</name></member>
      <member refid="class_ms_1_1_element_1adbcd81f12f80859fdaf2ca1bd24d23d1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>enabled</name></member>
      <member refid="class_ms_1_1_measure_1a611694524ac414310b280c48d9870eb1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>endBarLine</name></member>
      <member refid="class_ms_1_1_measure_1a56ea1206c77157ef1f5ef91f062f3296" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>endBarLineType</name></member>
      <member refid="class_ms_1_1_measure_1ab2ed1822b680aff4926b625e1e1289ac" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>endBarLineVisible</name></member>
      <member refid="class_ms_1_1_element_1abf57779ffc58ab9be91ff9376bb4b8c3" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>endDrag</name></member>
      <member refid="class_ms_1_1_element_1a5981873b891a9c965c6fa1714243d7c9" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>endEdit</name></member>
      <member refid="class_ms_1_1_element_1a1e189146458d406cd3e7b9d15202a4a1" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>endEditDrag</name></member>
      <member refid="class_ms_1_1_measure_base_1a6e80c952d019b265c81945b98c91fed2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>endTick</name></member>
      <member refid="class_ms_1_1_measure_1ab319c55877dbe3260530eebb9ae006c4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>exchangeVoice</name></member>
      <member refid="class_ms_1_1_measure_1a7fef565a68dbfc8b7118e3af202cacd1" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>fillGap</name></member>
      <member refid="class_ms_1_1_measure_1a4f56e739033bcbc53b8a20f03ad03938" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findAccidental</name></member>
      <member refid="class_ms_1_1_measure_1a15f7fbbb7f21f0c936bb2e55c502c499" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findAccidental</name></member>
      <member refid="class_ms_1_1_measure_1aefcfedff89ec29c05617bab601d99e4d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findChord</name></member>
      <member refid="class_ms_1_1_measure_1abcc300aa27120a1c799aedfa211aec6d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findChordRest</name></member>
      <member refid="class_ms_1_1_measure_1abf1deb9dcefdb51509003440c4347b95" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findFirstR</name></member>
      <member refid="class_ms_1_1_element_1a055b451ded2882a908bf0afe180686e6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findMeasure</name></member>
      <member refid="class_ms_1_1_element_1a7fea3a47fdac9141e2fd743848be28e5" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findMeasure</name></member>
      <member refid="class_ms_1_1_element_1a68fbdd43b617c755a867ead5bf49d0bd" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findMeasureBase</name></member>
      <member refid="class_ms_1_1_element_1aa842ceef53b3036fa443670fdfd2dc84" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findMeasureBase</name></member>
      <member refid="class_ms_1_1_measure_1a66a3e42855dec1d88936966d197a0ac0" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findSegment</name></member>
      <member refid="class_ms_1_1_measure_1a337f76e582585044598cfd507d6f0228" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>findSegmentR</name></member>
      <member refid="class_ms_1_1_measure_1a3c5e55d2f2291d5ee433a093c0b1dd04" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>first</name></member>
      <member refid="class_ms_1_1_measure_1ac92ed73d1cf6ab2967b87c8273c0b317" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>first</name></member>
      <member refid="class_ms_1_1_measure_1af2c07666af51f029e0f6fa810caadcd6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>firstEnabled</name></member>
      <member refid="class_ms_1_1_element_1aedd1f66a4881665f277bc30fefe765b2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>flag</name></member>
      <member refid="class_ms_1_1_element_1a3679cdb6351e67e9f482fa9a7fb3d466" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>generated</name></member>
      <member refid="class_ms_1_1_measure_1a7b480ee6b8a886f992c451071c18d243" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>getProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a5dd171e2eca7de57f28a9bc4430bb12d" prot="protected" virt="virtual"><scope>Ms::Measure</scope><name>getPropertyFlagsIdx</name></member>
      <member refid="class_ms_1_1_score_element_1a36d66100b5c6df17eb37f276aaca0454" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>getPropertyStyle</name></member>
      <member refid="class_ms_1_1_measure_1aaf57616b83ee061e69f26e2b75fb2d87" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>getSegment</name></member>
      <member refid="class_ms_1_1_measure_1aad5110345772e4588ae5c651c35d9387" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>getSegmentR</name></member>
      <member refid="class_ms_1_1_element_1a03fc88ee19e2958f2443213af6d5e77d" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>gripAnchor</name></member>
      <member refid="class_ms_1_1_element_1ae6ac97922eb884d9f3af307ada91f74a" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>gripsCount</name></member>
      <member refid="class_ms_1_1_element_1ac4ac75b1d930639f3ed85d618ab38bdf" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>gripsPositions</name></member>
      <member refid="class_ms_1_1_measure_base_1aa6883298f77340342735e6e724021421" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>hasCourtesyKeySig</name></member>
      <member refid="class_ms_1_1_measure_1a9491f66d4e4c82e05aaea063d3654ac8" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>hasMMRest</name></member>
      <member refid="class_ms_1_1_measure_1a0f8588760bcec4b2be52c042b26fec86" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>hasVoice</name></member>
      <member refid="class_ms_1_1_measure_1a42a584c417b6f27bea251229a78e4566" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>hasVoices</name></member>
      <member refid="class_ms_1_1_element_1abb3880878a2f2826b253d5e0e14b32b6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>header</name></member>
      <member refid="class_ms_1_1_element_1a2a8ba8af6817e602c27c154e93542028" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>height</name></member>
      <member refid="class_ms_1_1_measure_base_1a5ed5fd23f98bb8a1bbd5941fb6b5568b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>index</name></member>
      <member refid="class_ms_1_1_score_element_1a8deeadfce551a58b1078f1af62c2075d" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>initElementStyle</name></member>
      <member refid="class_ms_1_1_element_1a0677d13d1c54b74e3b2154169facfc91" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>initialEditModeGrip</name></member>
      <member refid="class_ms_1_1_measure_1afc2cfccb91440ff0a05fba40148926eb" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>insertMStaff</name></member>
      <member refid="class_ms_1_1_measure_1a4a56d5857dc5c20ac50916bc41de85bf" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>insertStaff</name></member>
      <member refid="class_ms_1_1_measure_1a08e3d561c52a0c1b3a4a6b5995267c59" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>insertStaves</name></member>
      <member refid="class_ms_1_1_element_1a77459c7e2f1077ec3b68b11c26640685" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>intersects</name></member>
      <member refid="class_ms_1_1_element_1a5f1d010c61f361c3310fd22cd9f65d88" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>ipos</name></member>
      <member refid="class_ms_1_1_measure_base_1a01e69b6f8d32b6eb8f28bdf9ed370f56" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>irregular</name></member>
      <member refid="class_ms_1_1_measure_1ad768f9ac1e7fe4d60174c5625e14fd25" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isAnacrusis</name></member>
      <member refid="class_ms_1_1_score_element_1a997e1063786d8c705c74b3d66c54f269" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isBox</name></member>
      <member refid="class_ms_1_1_score_element_1ad05261e50a084a0c6c42fced1ca78d8f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isBSymbol</name></member>
      <member refid="class_ms_1_1_score_element_1accef1c91df491a43c54e70474deea60c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isChordRest</name></member>
      <member refid="class_ms_1_1_score_element_1a203290a59b13861b957d2943f65a4cf0" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isDurationElement</name></member>
      <member refid="class_ms_1_1_measure_1a2c67ef4fc0d77fa272feef2e45ba3617" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>isEditable</name></member>
      <member refid="class_ms_1_1_element_1a52a39d1aee1e730f3cd399a5714b66f0" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>isElement</name></member>
      <member refid="class_ms_1_1_measure_1aa8955b92304c0f9e719c99cd1302db78" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isEmpty</name></member>
      <member refid="class_ms_1_1_measure_1aaf2e3d06f88163f5bdfd0f68e11aa08e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isFinalMeasureOfSection</name></member>
      <member refid="class_ms_1_1_measure_1a10c82bce11282d22bec01e072891460f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isFirstInSystem</name></member>
      <member refid="class_ms_1_1_measure_1ad2f9d925d748ce039a5ef8c336d0e8a5" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isFullMeasureRest</name></member>
      <member refid="class_ms_1_1_measure_1aaf1d634e5b6782073f551ccf9e6b4481" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isIrregular</name></member>
      <member refid="class_ms_1_1_score_element_1a0d5f2d0a979bf52ab2436f6ceb6d9ef6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isLineSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a1d34473f54590e3d8c2a1bc78b560c21" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isLinked</name></member>
      <member refid="class_ms_1_1_score_element_1a06e5d7c169bf6eb01f5f723cbdae973f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isMeasureBase</name></member>
      <member refid="class_ms_1_1_measure_1ae92cfe704a9477074d0fbe1a3bb6ff61" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isMMRest</name></member>
      <member refid="class_ms_1_1_element_1aaad0ef7a078cd5d1659ff7ed9f65582c" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>isMovable</name></member>
      <member refid="class_ms_1_1_element_1a592da9bef8f5ea3c9840931e8db5f6f6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isNudged</name></member>
      <member refid="class_ms_1_1_measure_1ad6c117158b44ca9aeb05bc979e989436" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isOnlyDeletedRests</name></member>
      <member refid="class_ms_1_1_measure_1ac5856d6a60cde1a5041bbf921ceab378" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isOnlyDeletedRests</name></member>
      <member refid="class_ms_1_1_measure_1a0bacadec09269f14e4b58149a7fbf175" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isOnlyRests</name></member>
      <member refid="class_ms_1_1_element_1a8612168f4af9d7a976e1f8c8f6826143" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isPrintable</name></member>
      <member refid="class_ms_1_1_measure_1a2f5cce1cae1aa068d45105b9bf78f75e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isRepeatMeasure</name></member>
      <member refid="class_ms_1_1_score_element_1a4de90a044cdd2a7030d707f2b081c8a4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isSLine</name></member>
      <member refid="class_ms_1_1_score_element_1acf35020b5e670ac13791697e65b679d4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isSLineSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a372dfc0678c5194028e61b6a9a24ab62" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isSlurTieSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a98f8c58df0f5baafe63414bedf84514f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isSpanner</name></member>
      <member refid="class_ms_1_1_score_element_1a5aa58f96618edb0e3ff660e1c96c5d4e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isSpannerSegment</name></member>
      <member refid="class_ms_1_1_score_element_1ac009e016c7a3dc148b0aaad50c1c4547" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isStaffTextBase</name></member>
      <member refid="class_ms_1_1_score_element_1a4d0de3ac9401da46c32ed8becb9d496b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isStyled</name></member>
      <member refid="class_ms_1_1_score_element_1a979b6e1bc10cf790e755aa8641feb4cf" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isTextBase</name></member>
      <member refid="class_ms_1_1_score_element_1a7151838e2192a30624d6111dd4c87918" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isTextLineBase</name></member>
      <member refid="class_ms_1_1_score_element_1ab98a731c7adf65cebc23235f9fe150af" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isTextLineBaseSegment</name></member>
      <member refid="class_ms_1_1_element_1aa8c81e3444c2166a739fb31ca1bffe4e" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>isUserModified</name></member>
      <member refid="class_ms_1_1_score_element_1aac3320320d350a161ed3f9a601160451" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>isVBoxBase</name></member>
      <member refid="class_ms_1_1_element_1a07c3b2ed980bf10d79c377a68f7c500d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>itemDiscovered</name></member>
      <member refid="class_ms_1_1_measure_1a251d5169092a1437befbec204fa0efe9" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>last</name></member>
      <member refid="class_ms_1_1_measure_base_1a315fd9e36f1c61d488a1b1a753d9c31b" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>layout</name></member>
      <member refid="class_ms_1_1_measure_1aedba86af30a033adef26958d92990e67" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>layout2</name></member>
      <member refid="class_ms_1_1_measure_1a6b47e5546f64b548040f03aed658a179" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>layoutMeasureNumber</name></member>
      <member refid="class_ms_1_1_measure_1a4a1ae88c341d451822e9c710fffdba10" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>layoutStaffLines</name></member>
      <member refid="class_ms_1_1_measure_1aec5e17c92d990fc2b60e77225552fd1c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>layoutWeight</name></member>
      <member refid="class_ms_1_1_score_element_1ad9b69df1d2c04f2b298520bb649a8c55" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>lid</name></member>
      <member refid="class_ms_1_1_measure_base_1ad4153b0dbfe2fb2a229fd93a45c71f7b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>lineBreak</name></member>
      <member refid="class_ms_1_1_element_1ab6aade6de785c3ad52c1ed1dadcfcd9f" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>linkedClone</name></member>
      <member refid="class_ms_1_1_score_element_1a2f0ed55c566c19cb483d77250cb52450" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>linkList</name></member>
      <member refid="class_ms_1_1_score_element_1a3d5c97191484848b3f10e754246f8758" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>links</name></member>
      <member refid="class_ms_1_1_score_element_1a1dad93f0591eb31f69854e8f141b051e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>linkTo</name></member>
      <member refid="class_ms_1_1_element_1a904f7cbd2d6c478e10a6e7d7ae9f638d" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>localSpatiumChanged</name></member>
      <member refid="class_ms_1_1_element_1ad01cda9f6017d09c9fb9305de18e9310" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>mag</name></member>
      <member refid="class_ms_1_1_element_1a7d8e2560e3ab7d216656bf79ecff7ae8" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>magS</name></member>
      <member refid="class_ms_1_1_score_element_1ae4991aaf0d79271cc347530f3d07fcd6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>masterScore</name></member>
      <member refid="class_ms_1_1_measure_1ad33228530386c218d91944ea77ef3719" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>Measure</name></member>
      <member refid="class_ms_1_1_measure_1ad3f8454e27f876b92fffc321ad14afd1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>Measure</name></member>
      <member refid="class_ms_1_1_measure_base_1a78dc29ef290fd99d0a7d7388c73f4c12" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>MeasureBase</name></member>
      <member refid="class_ms_1_1_measure_base_1a3d29a63923378b5df71010127579b259" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>MeasureBase</name></member>
      <member refid="class_ms_1_1_measure_base_1a800e34f2f42f5f10def1eda13fb2cd9d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>measureIndex</name></member>
      <member refid="class_ms_1_1_measure_1ab70e232004b65f2e432cd2ec0e5631dd" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>measureNumberMode</name></member>
      <member refid="class_ms_1_1_element_1a90f21ba358732f3c471069758d84a76f" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>mimeData</name></member>
      <member refid="class_ms_1_1_element_1a00b370d217141ef8efe9d32b1f737ce8" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>minDistance</name></member>
      <member refid="class_ms_1_1_measure_1a9109c2c9621f0cc9ecd86afcae54afe8" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>mmRest</name></member>
      <member refid="class_ms_1_1_measure_1a7dd90eaf72439bf012349d7e8f476425" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>mmRest1</name></member>
      <member refid="class_ms_1_1_measure_1a4bc97255a366ad792cc65094767152c5" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>mmRestCount</name></member>
      <member refid="class_ms_1_1_measure_1a5228137f2805b40984b458c21f28b2a6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>mmRestFirst</name></member>
      <member refid="class_ms_1_1_measure_1a6ba907c7751b675b51ea2a192ace5699" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>mmRestLast</name></member>
      <member refid="class_ms_1_1_element_1a76367db103b54a315bfcfcbb9e58b3ab" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>mousePress</name></member>
      <member refid="class_ms_1_1_element_1acee1036e1efc8c4142fdf980d37b5745" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>move</name></member>
      <member refid="class_ms_1_1_measure_1ae612bd158973276baba3df65f1e5d9d4" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>moveTicks</name></member>
      <member refid="class_ms_1_1_score_element_1ad80dda73306d6b784b0cac4626f797d4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>name</name></member>
      <member refid="class_ms_1_1_score_element_1ab6ded8e7ff6dcb45db0036a57f9f9d26" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>name</name></member>
      <member refid="class_ms_1_1_element_1a3b88a2b00074559aad9b8948eaf07a6f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>name2Element</name></member>
      <member refid="class_ms_1_1_score_element_1a971f91737e74571d6e4b6bb78f56e1dc" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>name2type</name></member>
      <member refid="class_ms_1_1_score_element_1ae41701f68025bc77c26f6db74b452465" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>name2type</name></member>
      <member refid="class_ms_1_1_measure_base_1a2f11c692c3cd0e6698fe2f83b11d2746" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>next</name></member>
      <member refid="class_ms_1_1_element_1a81092ae7891eb2ac2d43d6fe86e1e749" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>nextElement</name></member>
      <member refid="class_ms_1_1_measure_1a8869603560feec9fc5043a5504dd2ebd" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>nextElementStaff</name></member>
      <member refid="class_ms_1_1_element_1ab9a5b8bfe46bc3cf604635a2689bb343" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>nextGrip</name></member>
      <member refid="class_ms_1_1_measure_base_1ada587f42a4bbfc3e8321e4ce22c9febc" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>nextMeasure</name></member>
      <member refid="class_ms_1_1_measure_base_1a5e411c5bec8ab7b9120cf7f2ace28a89" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>nextMeasureMM</name></member>
      <member refid="class_ms_1_1_measure_base_1aa0c12d8d594b556da286eabdf422312d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>nextMM</name></member>
      <member refid="class_ms_1_1_element_1ad5e377ed9b055434956aa3ee92a3b3a9" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>nextSegmentElement</name></member>
      <member refid="class_ms_1_1_measure_base_1ab0624346b77edaab4269b9eb2523a225" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>no</name></member>
      <member refid="class_ms_1_1_measure_base_1ac8216e757cdc34ebc9a840900e040edf" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>noBreak</name></member>
      <member refid="class_ms_1_1_measure_base_1a29b7c1273c42ffbceaed3be455a8eff1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>noOffset</name></member>
      <member refid="class_ms_1_1_element_1a8da4cf37b6c3f27351f096ec5847d1b6" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>normalModeEditBehavior</name></member>
      <member refid="class_ms_1_1_measure_1ae8a8d5cae3cb7386cd6012953ab92573" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>noText</name></member>
      <member refid="class_ms_1_1_element_1a2ba48a5bec00a30fe829a9e6e477d1d0" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>offset</name></member>
      <member refid="class_ms_1_1_element_1ad6648a1f597c54d30aa6418dcd4ff64c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>offsetChanged</name></member>
      <member refid="class_ms_1_1_element_1a77e9d09289e5df2742e8b80c18e6fe14" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>operator=</name></member>
      <member refid="class_ms_1_1_element_1a97c6426acf5bd7303aef532c1d95f105" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>pageBoundingRect</name></member>
      <member refid="class_ms_1_1_measure_base_1a6c58c83a689bd9d8caa462ab3559b176" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>pageBreak</name></member>
      <member refid="class_ms_1_1_element_1a06cc027fe14db0cf896f02931356ae24" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>pagePos</name></member>
      <member refid="class_ms_1_1_element_1afbc508a91ce6aa696f2f6e33bd350bd8" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>pageX</name></member>
      <member refid="class_ms_1_1_element_1a52b30fdd589beba5b760a561a50ac601" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>parent</name></member>
      <member refid="class_ms_1_1_element_1a0049832d4191b3ce02446efa09127610" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>part</name></member>
      <member refid="class_ms_1_1_measure_base_1ad0194f300147b15b038039e21ffb75b2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>pause</name></member>
      <member refid="class_ms_1_1_element_1a8ba22391443270db0f91a3164c457d1e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>placeAbove</name></member>
      <member refid="class_ms_1_1_element_1a50092b502c319cb696998f24fc038695" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>placeBelow</name></member>
      <member refid="class_ms_1_1_element_1a951493711a51487f7f3c1786703b1a20" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>placement</name></member>
      <member refid="class_ms_1_1_element_1a59da7ad9fd3194d87120ecca6e7ebc75" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>placeMultiple</name></member>
      <member refid="class_ms_1_1_measure_1a56e234503204d1e2883f8cd5512caa80" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>playbackCount</name></member>
      <member refid="class_ms_1_1_element_1aa1bfaad0745fdce188743b73821e0692" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>point</name></member>
      <member refid="class_ms_1_1_element_1a19157e811d0d2a0e3c94dc844039ba2f" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>pos</name></member>
      <member refid="class_ms_1_1_measure_base_1a362a1699d39b7f1684c13a1a8c75c376" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>prev</name></member>
      <member refid="class_ms_1_1_element_1ad48ce06a988e98b0da7d4cf1e6f56ded" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>prevElement</name></member>
      <member refid="class_ms_1_1_measure_1a9f4f3f0ab29df1324b31196c56ff6ab0" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>prevElementStaff</name></member>
      <member refid="class_ms_1_1_element_1ade142ed940c21dfcd893bb8fd42c97ca" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>prevGrip</name></member>
      <member refid="class_ms_1_1_measure_base_1a198572255879b31307ca02b7839c7356" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>prevMeasure</name></member>
      <member refid="class_ms_1_1_measure_base_1aea0559270e2119a753eb51f4b031098e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>prevMeasureMM</name></member>
      <member refid="class_ms_1_1_measure_base_1a50bc163c947b36f693d6db128f92288f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>prevMM</name></member>
      <member refid="class_ms_1_1_element_1a31599e271170912967669cfddd1e49b4" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>prevSegmentElement</name></member>
      <member refid="class_ms_1_1_measure_1aba1be8fb011e8f82006930ad449fda67" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>propertyDefault</name></member>
      <member refid="class_ms_1_1_score_element_1aaae0b7999568ce64245a5cf995af62b5" prot="public" virt="non-virtual" ambiguityscope="Ms::ScoreElement::"><scope>Ms::Measure</scope><name>propertyDefault</name></member>
      <member refid="class_ms_1_1_element_1a7450fdfe3875f10243ae5a97883f9d34" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>propertyDelegate</name></member>
      <member refid="class_ms_1_1_score_element_1a9b9c00757c23cba103638b4ab63df03e" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>propertyFlags</name></member>
      <member refid="class_ms_1_1_score_element_1ab00670f7d8229c14090cc3d7376d2202" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>propertyFlagsList</name></member>
      <member refid="class_ms_1_1_element_1a44c16323c852e23c783b8d7362cc9c6a" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>propertyId</name></member>
      <member refid="class_ms_1_1_element_1a01a8b01010e449fb1530dd27805ed042" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>propertyUserValue</name></member>
      <member refid="class_ms_1_1_measure_1a4a0bee090960e90e45c76a578115c7f5" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>push_back</name></member>
      <member refid="class_ms_1_1_measure_1a6887d7ab77b7e864637d43d39906718d" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>push_front</name></member>
      <member refid="class_ms_1_1_measure_1af01d117ba83d46ce334966a3cbcead28" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>read</name></member>
      <member refid="class_ms_1_1_measure_1ae90ce97cf72a49b2759c2e8c4b914b31" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>read</name></member>
      <member refid="class_ms_1_1_measure_1a9c2149c8ec8d3c801a66b291c5e25cde" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>readAddConnector</name></member>
      <member refid="class_ms_1_1_measure_1a4770735f3f9c4e80167be9d48e2855c1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>readBox</name></member>
      <member refid="class_ms_1_1_element_1a0d7df07df85c18fd01d52efed33a2034" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>readMimeData</name></member>
      <member refid="class_ms_1_1_measure_base_1a91e933c3e23dd23451f08520bd60d5c1" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>readProperties</name></member>
      <member refid="class_ms_1_1_score_element_1a8b3be86196659c2e0fb6ed86256cb0fe" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>readProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a473e639853dd8adc607a5c2a63c6d4ad" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>readProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a053d7512b54eaa787bcef0eba427a76f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>readStyledProperty</name></member>
      <member refid="class_ms_1_1_element_1a4422ccd59c2a9759591e15e290d3afdb" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>readType</name></member>
      <member refid="class_ms_1_1_measure_1afc25a4695fa1502e8b4f79241f5fe563" prot="private" virt="non-virtual"><scope>Ms::Measure</scope><name>readVoice</name></member>
      <member refid="class_ms_1_1_element_1affddbd300aaeca46a5dc8eaf9ef44849" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>rebaseMinDistance</name></member>
      <member refid="class_ms_1_1_element_1a0d9b98767134ff6a72d5ad910fd52e7a" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>rebaseOffset</name></member>
      <member refid="class_ms_1_1_measure_1aeab577d3e439c3b0577ee8eb3866a1f6" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>remove</name></member>
      <member refid="class_ms_1_1_measure_1ad8f3420c8336dc414b957c10b810e1ac" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>removeMStaff</name></member>
      <member refid="class_ms_1_1_measure_1abc21efdbfd90e3732ea332c30273398d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>removeStaves</name></member>
      <member refid="class_ms_1_1_measure_1a90caa02f9c7dfbb0b6f8e96134c29257" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>removeSystemHeader</name></member>
      <member refid="class_ms_1_1_measure_1a95d953121aa2ea9b6db91e2b147fed50" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>removeSystemTrailer</name></member>
      <member refid="class_ms_1_1_measure_1adb00eda58072bd4fc267e0a581ed3216" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>repeatCount</name></member>
      <member refid="class_ms_1_1_measure_base_1a2137ef7315aaed4adc68372946380d2c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>repeatEnd</name></member>
      <member refid="class_ms_1_1_measure_base_1abe92b766becf68d3614541d1fd1f1ae9" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>repeatJump</name></member>
      <member refid="class_ms_1_1_measure_base_1a5816bc4dfa1e8a4d155ff931ff3e7c8e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>repeatStart</name></member>
      <member refid="class_ms_1_1_element_1aaa90bc751111ad8ec041e2004321fbfe" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>reset</name></member>
      <member refid="class_ms_1_1_score_element_1a8f3e233ff30279756578c751c0ea3e17" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>resetProperty</name></member>
      <member refid="class_ms_1_1_element_1a7d61fcd7dc55027f4f356101b2c0f3bf" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>roffset</name></member>
      <member refid="class_ms_1_1_element_1aa637afe72e7a1f186b6e9bcb2b26fa78" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>rpos</name></member>
      <member refid="class_ms_1_1_element_1ad4608ce52672a6b42930af320d9de2ef" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>rtick</name></member>
      <member refid="class_ms_1_1_element_1aa521acf22e0820ab42a7ab43c08fa57f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>rxoffset</name></member>
      <member refid="class_ms_1_1_element_1a6a063f005375c9b61c53cf49ebc14623" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>rxpos</name></member>
      <member refid="class_ms_1_1_element_1a8f60347a3bda60cf2db952b9dc6332ab" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>ryoffset</name></member>
      <member refid="class_ms_1_1_element_1a1397cfb5140978e6cd9aa294ade7d738" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>rypos</name></member>
      <member refid="class_ms_1_1_measure_1ad7a49f661029c21fc7a8fdc596b0e7b3" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>scanElements</name></member>
      <member refid="class_ms_1_1_score_element_1a70883d048b0884821ac779d9ab168151" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>score</name></member>
      <member refid="class_ms_1_1_score_element_1a3fed4ec5f58054eb578ff9c7bb80d72f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_score_element_1ac2b2cb70fe954ba2b1cce6d35743edf2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_element_1a965327598f61fdc8b3b8f4160dfa13c8" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>screenReaderInfo</name></member>
      <member refid="class_ms_1_1_measure_base_1a56dcf6a02946fd9da8b5a255d7ea09d6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>sectionBreak</name></member>
      <member refid="class_ms_1_1_measure_base_1ab63433e71da0f897674777d96da8fa0d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>sectionBreakElement</name></member>
      <member refid="class_ms_1_1_measure_1a739b42bcabec5855e374b509f74ea815" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>segments</name></member>
      <member refid="class_ms_1_1_measure_1acbff3dcca0e52f0ce80519c3e71b6cfe" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>segments</name></member>
      <member refid="class_ms_1_1_element_1a7b4ff51eff905fed21705445958253c1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>selectable</name></member>
      <member refid="class_ms_1_1_element_1ae4f2f3a774def87e608afd55ef29b3e9" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>selected</name></member>
      <member refid="class_ms_1_1_element_1a7b231391a59527cb00b7f08bb5279e58" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setAutoplace</name></member>
      <member refid="class_ms_1_1_element_1abe5c0aa8e74388b2b6b336dfec469a35" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setbbox</name></member>
      <member refid="class_ms_1_1_measure_1a2326df9111e16c302d1e637c6c8ea167" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setBreakMultiMeasureRest</name></member>
      <member refid="class_ms_1_1_element_1a22907ac84ae65fb5b6c3bc2b14f3b23c" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setColor</name></member>
      <member refid="class_ms_1_1_element_1aad752b8ae0d976379ee918fd50f9bd0e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setComposition</name></member>
      <member refid="class_ms_1_1_measure_1a08bbacc9d393f2e0d35f0adfd440a88d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setCorrupted</name></member>
      <member refid="class_ms_1_1_element_1a8ca2ec95d1247f2940b1285205b2f633" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setDropTarget</name></member>
      <member refid="class_ms_1_1_element_1ab75c49bf26fcb549bd1959ffe7925d8b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setEnabled</name></member>
      <member refid="class_ms_1_1_measure_1a494ef46ba1ca13806d6b7ea8868309e1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setEndBarLineType</name></member>
      <member refid="class_ms_1_1_element_1afbd51224c47d00551983d1b25f3c6f39" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setFlag</name></member>
      <member refid="class_ms_1_1_element_1ac28da1fe20339f2277852976ac6d7d8f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setFlag</name></member>
      <member refid="class_ms_1_1_element_1a6f4204d12e78c77052520492ae4416cd" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setGenerated</name></member>
      <member refid="class_ms_1_1_measure_base_1a11523dcf5e769ae1b378d3cc94680420" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setHasCourtesyKeySig</name></member>
      <member refid="class_ms_1_1_measure_1ac1ee1ce30118d3a7aa965f297c76bd28" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setHasVoices</name></member>
      <member refid="class_ms_1_1_element_1a5033ef29dffbf6e40958e4fdd2802b6d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setHeader</name></member>
      <member refid="class_ms_1_1_element_1a48786d2a55a0857f1685299e97b85b60" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setHeight</name></member>
      <member refid="class_ms_1_1_measure_base_1a2ff29f9d1dab0b207e22a8e204015bee" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setIrregular</name></member>
      <member refid="class_ms_1_1_measure_base_1a87f96d1fa43004af6444997951f70a6e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setLineBreak</name></member>
      <member refid="class_ms_1_1_score_element_1ae1e16c1a83100a1ea23b05bfb1642283" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setLinks</name></member>
      <member refid="class_ms_1_1_element_1a49df2a43ee4c87d33b78c60cce70ff4e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setMag</name></member>
      <member refid="class_ms_1_1_measure_1a70c51bea207bfd73e61cbe36b9add89e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setMeasureNumberMode</name></member>
      <member refid="class_ms_1_1_element_1a7b5cd12e550c5be0c4399a55c93d1ea9" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setMinDistance</name></member>
      <member refid="class_ms_1_1_measure_1a4f69d0d7b4406aeff800488d2dd06d97" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setMMRest</name></member>
      <member refid="class_ms_1_1_measure_1a405ecf7ac85a17e4285644b04a8085d0" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setMMRestCount</name></member>
      <member refid="class_ms_1_1_measure_base_1a4c552b7fbbd974800106c2e1edfe8517" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setNext</name></member>
      <member refid="class_ms_1_1_measure_base_1a2aaffc490540f2744696b3ffda1fd66a" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setNo</name></member>
      <member refid="class_ms_1_1_measure_base_1aa0889f79c9c86287199541a1d8a2fdab" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setNoBreak</name></member>
      <member refid="class_ms_1_1_measure_base_1affd71484a05df1341cda8beb0b49186c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setNoOffset</name></member>
      <member refid="class_ms_1_1_measure_1abcbc1dd00451ef0580e2892425032fee" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setNoText</name></member>
      <member refid="class_ms_1_1_element_1a7bb9bbbf1c501bf50adfa4508da42056" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setOffset</name></member>
      <member refid="class_ms_1_1_element_1acdc3b830bf0d9bfe501b182b28200c98" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setOffset</name></member>
      <member refid="class_ms_1_1_element_1a432e2033ca1c24ef8179458d1e604509" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setOffsetChanged</name></member>
      <member refid="class_ms_1_1_measure_base_1aab85a5d7b01dd5f816168d3e8a6e4dad" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setPageBreak</name></member>
      <member refid="class_ms_1_1_element_1aa7757f6d62dc28447706ee8eb12da5ec" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setParent</name></member>
      <member refid="class_ms_1_1_element_1ae13af03f0efac5348d139609cbadc826" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setPlacement</name></member>
      <member refid="class_ms_1_1_measure_1a15c2378b02793c2f8aab221559124fd3" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setPlaybackCount</name></member>
      <member refid="class_ms_1_1_element_1a2a2ce2358cc23529d8f038a940062e62" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_element_1ac7fcfee452c4de8e270aa6320365008c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_measure_base_1a5a6ecdc9edbbef845313a1048311dc40" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setPrev</name></member>
      <member refid="class_ms_1_1_measure_1a8c45b32487eb8f5c4585bb7c12a848b8" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setProperty</name></member>
      <member refid="class_ms_1_1_score_element_1aceed92c262270a2a79d3f97d0f018a29" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setPropertyFlags</name></member>
      <member refid="class_ms_1_1_measure_1a4913911db820f64c25ad1ae7266b5a83" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setRepeatCount</name></member>
      <member refid="class_ms_1_1_measure_base_1a2abd8e864fcfe4f972fc807ddd9f0dcc" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setRepeatEnd</name></member>
      <member refid="class_ms_1_1_measure_base_1af2558fe9064f9bdbc207169d4b0b6048" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setRepeatJump</name></member>
      <member refid="class_ms_1_1_measure_base_1a697017a2b8bc5e08c40c79579c4f9826" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setRepeatStart</name></member>
      <member refid="class_ms_1_1_measure_1a4d429b75faea4736aa986b1453990ef6" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setScore</name></member>
      <member refid="class_ms_1_1_measure_base_1a0cf3aae4535ef71cc3ac6aca5bc4777d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setSectionBreak</name></member>
      <member refid="class_ms_1_1_element_1adfe1acfd98d816c02267b9d26a693618" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setSelectable</name></member>
      <member refid="class_ms_1_1_element_1aa7d9ce43d66fd04a403e2242051dd7a8" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setSelected</name></member>
      <member refid="class_ms_1_1_element_1ad76cff3c891435e058cd2ab572bcf9d3" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setSizeIsSpatiumDependent</name></member>
      <member refid="class_ms_1_1_measure_1ab1dbe71681084c01b1bcd68595d5ba18" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setStaffStemless</name></member>
      <member refid="class_ms_1_1_measure_1a9ef23d0042137cfc91aadab687a1c40c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setStaffVisible</name></member>
      <member refid="class_ms_1_1_measure_1a22744d7e30b8487ed3880ad5dc2c2078" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setStretchedWidth</name></member>
      <member refid="class_ms_1_1_measure_base_1a650e991868e0532ab8f5cfa4e8c7d86e" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setSystem</name></member>
      <member refid="class_ms_1_1_element_1a2610a3ae6f4ce80c36a123fa7d1e33f2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setSystemFlag</name></member>
      <member refid="class_ms_1_1_element_1a9b433e4368d19bc18b9d8cb4c41fe1d4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setTag</name></member>
      <member refid="class_ms_1_1_measure_base_1abbb8a43c3c9cdb1a3cce412bfe4409ef" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setTick</name></member>
      <member refid="class_ms_1_1_measure_base_1adb1ce7a9970f4e47d69a6344eb51aa61" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setTicks</name></member>
      <member refid="class_ms_1_1_measure_1ad506977829d7909fc0ad9b74e00bea33" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setTimesig</name></member>
      <member refid="class_ms_1_1_element_1a884bf81982c8c302cbdf79ea567c3ced" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setTrack</name></member>
      <member refid="class_ms_1_1_element_1a304d88a7891a731cbfb8e5b0c2e8a5fc" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setTrailer</name></member>
      <member refid="class_ms_1_1_measure_1a922c3e99a4ff9f7a8953d720cddaf958" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setUserStretch</name></member>
      <member refid="class_ms_1_1_element_1a41438f8c28ffb2eb06d55de8360c1969" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setVisible</name></member>
      <member refid="class_ms_1_1_element_1a03037db721d985f097d7ca610f402850" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setVoice</name></member>
      <member refid="class_ms_1_1_element_1ae3346b5a7ad5893674afc28c9b0877ec" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>setWidth</name></member>
      <member refid="class_ms_1_1_element_1a1a35bada3f70ea05096258aa18d74b3c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>setZ</name></member>
      <member refid="class_ms_1_1_element_1ad46a1fa8985b3d3897101b295a7a5d3e" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>shape</name></member>
      <member refid="class_ms_1_1_measure_1a77d61671946e30745eb16eca7e8696c2" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>size</name></member>
      <member refid="class_ms_1_1_element_1a3e3e415df166153ec434b9a143ad7744" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>sizeIsSpatiumDependent</name></member>
      <member refid="class_ms_1_1_measure_1a4b28a41711eb607b98dad9cb887aa991" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>snap</name></member>
      <member refid="class_ms_1_1_measure_1a283f044413870f312f9426d94b12c19c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>snapNote</name></member>
      <member refid="class_ms_1_1_measure_1a99ffffdf436829bfd4583b59bd7f8dd6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>sortStaves</name></member>
      <member refid="class_ms_1_1_element_1a9f375d79304c4cec5b45ea883c9efc86" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>spatium</name></member>
      <member refid="class_ms_1_1_measure_1a9d807a2ebc9889d854dfbd3d243a45eb" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>spatiumChanged</name></member>
      <member refid="class_ms_1_1_element_1a14581354d9bfc2c39c7dafbed79403da" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>staff</name></member>
      <member refid="class_ms_1_1_measure_1af1e8fd79a9de3d2e12bbda91e1a82aff" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>staffabbox</name></member>
      <member refid="class_ms_1_1_element_1a3c37abb86b5dfb5b16fe74155154bab8" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>staffIdx</name></member>
      <member refid="class_ms_1_1_measure_1ac872216bf9760613e1f059f8531be5ad" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>staffLines</name></member>
      <member refid="class_ms_1_1_element_1a3c2f8d8c52d96d1812733ec1669b576c" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>staffType</name></member>
      <member refid="class_ms_1_1_element_1a7d1a4797b0aba5b63dbf254429d5fc5e" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>startDrag</name></member>
      <member refid="class_ms_1_1_element_1a44811717889176d96221850366e5f055" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>startEdit</name></member>
      <member refid="class_ms_1_1_element_1a0415a5b5710c311e92ba189e201c73c7" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>startEditDrag</name></member>
      <member refid="class_ms_1_1_measure_1a5e7d34f4cfd7e05b6d1b61b2f44a2e42" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>stemless</name></member>
      <member refid="class_ms_1_1_measure_1ad153317ff35f475504d7a67bd3559a3f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>stretchedLen</name></member>
      <member refid="class_ms_1_1_measure_1a979df7753ae3d039720198643f865f56" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>stretchMeasure</name></member>
      <member refid="class_ms_1_1_score_element_1abd7730432b512afc15873362a5414bad" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>styleChanged</name></member>
      <member refid="class_ms_1_1_score_element_1a08e4c60af2466c57931724393f7bee4f" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>styledProperties</name></member>
      <member refid="class_ms_1_1_element_1a31f9e63002b9f16ad6b4f35ba7a85bf4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>styleP</name></member>
      <member refid="class_ms_1_1_score_element_1a8a3670f26efa9a07e14695cee4512dc4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>styleValue</name></member>
      <member refid="class_ms_1_1_element_1ad38a889b51fa8b8553a15ca29abbc874" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>subtype</name></member>
      <member refid="class_ms_1_1_element_1a861aa05fa45296c04d4309143211a9e6" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>subtypeName</name></member>
      <member refid="class_ms_1_1_element_1a1625813b59654991c24a9a10eb580f07" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symAdvance</name></member>
      <member refid="class_ms_1_1_element_1a70a8140969dcd988ed77e91c27b6a84f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symBbox</name></member>
      <member refid="class_ms_1_1_element_1adad5f2c7a943687f0b3de2e896942898" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symBbox</name></member>
      <member refid="class_ms_1_1_element_1a984c5f0381896ac71fcf054d056bbe66" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symCutOutNE</name></member>
      <member refid="class_ms_1_1_element_1a545d8382d25c1402b0e46974ce84d444" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symCutOutNW</name></member>
      <member refid="class_ms_1_1_element_1af0b900ab6bb2674c1dcad1c5100fb4ee" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symCutOutSE</name></member>
      <member refid="class_ms_1_1_element_1a0cb9e0cf90c74e5b718e10f8a9a796da" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symCutOutSW</name></member>
      <member refid="class_ms_1_1_element_1ab3254b043c87dd338bfa6630c93e8e26" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symHeight</name></member>
      <member refid="class_ms_1_1_element_1a95c4ffee60af75b49f6e1c644db44493" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symIsValid</name></member>
      <member refid="class_ms_1_1_element_1a7c49ac344dd76c56fd51dad4287b79d5" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symStemDownNW</name></member>
      <member refid="class_ms_1_1_element_1a2526cc958a514c74daebfcdcc2dae7dc" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symStemUpSE</name></member>
      <member refid="class_ms_1_1_element_1adc45b084165da6ceb3afa7913d6a3feb" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symWidth</name></member>
      <member refid="class_ms_1_1_element_1a175d0a2254d83ee5f486123cb3ea2612" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>symWidth</name></member>
      <member refid="class_ms_1_1_measure_1a9c4de13b592b3e0cc6a2398641da99ed" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>system</name></member>
      <member refid="class_ms_1_1_element_1a77c37605cf48595a7e6dc079722839c4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>systemFlag</name></member>
      <member refid="class_ms_1_1_element_1a31f5e22d38f84ff52c512857c52dd668" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>tag</name></member>
      <member refid="class_ms_1_1_measure_base_1ae4c2254a3440f2fb993cee717412fec5" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>takeElements</name></member>
      <member refid="class_ms_1_1_measure_base_1aa5fa2830a6264cda65a4fab178b669fe" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>tick</name></member>
      <member refid="class_ms_1_1_measure_1a22f2fc82fa96fe4383b11c077f85d854" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>tick2pos</name></member>
      <member refid="class_ms_1_1_measure_1a33665eb98a19a5561c6b72e4acaec230" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>tick2segment</name></member>
      <member refid="class_ms_1_1_measure_base_1a6cab2bc583be79fa27b83390dd48bc7f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>ticks</name></member>
      <member refid="class_ms_1_1_measure_1aca83bf67143934f224cd28aa7bdb4459" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>timesig</name></member>
      <member refid="class_ms_1_1_element_1ab4986d1b4f0d45b8e84cf52c46885c36" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>track</name></member>
      <member refid="class_ms_1_1_element_1a868f0f5663dd1d7422c19700e070a4a6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>trailer</name></member>
      <member refid="class_ms_1_1_measure_1aa7a17a610f625dc8042ea9e16be018ed" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>triggerLayout</name></member>
      <member refid="class_ms_1_1_element_1a5fb627b3ef6f80967a432f86ad028117" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>triggerLayoutAll</name></member>
      <member refid="class_ms_1_1_measure_1ae41981bf29b8ff5cb871ff02bbc2a5df" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>type</name></member>
      <member refid="class_ms_1_1_element_1ab3227faba09a745523ba6748d9f94ab5" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_element_1af0505b234ccb7520a7d93ddd09ca4e1f" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_element_1a4d0c98408c09304865fc3c9e011a9695" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a4d0c98408c09304865fc3c9e011a9695" prot="public" virt="non-virtual" ambiguityscope="Ms::ScoreElement::"><scope>Ms::Measure</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_measure_1ab6c8d20b57a9c8e72e75684687932777" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoGetSegment</name></member>
      <member refid="class_ms_1_1_measure_1a78e0b4b578eafff2f44d0753e4d32f0b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoGetSegmentR</name></member>
      <member refid="class_ms_1_1_score_element_1ab31ad4878a7d6e5c5acbd88e3232f2fb" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoPushProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a2f2ea7d6e1179cbb00f95689125482d0" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoResetProperty</name></member>
      <member refid="class_ms_1_1_measure_base_1a8b631dda96b341c3212ef8200ad10288" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoSetBreak</name></member>
      <member refid="class_ms_1_1_element_1aa9328fefa5648b5bc3f020b6cf481f38" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoSetColor</name></member>
      <member refid="class_ms_1_1_measure_base_1a1ee0fe79be0935b6137e13172427679b" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoSetLineBreak</name></member>
      <member refid="class_ms_1_1_measure_base_1a578dfa21aa8c0b779a161b150b3e7e33" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoSetNoBreak</name></member>
      <member refid="class_ms_1_1_measure_base_1a23c20cdb53c0282ff7f92f1f0ed53cdb" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoSetPageBreak</name></member>
      <member refid="class_ms_1_1_measure_base_1a19a7663d2d327655b46fde35769784ab" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoSetSectionBreak</name></member>
      <member refid="class_ms_1_1_element_1a4033806e37a8a0bd95f75e06fb6d1286" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>undoSetVisible</name></member>
      <member refid="class_ms_1_1_score_element_1a994f2abd8df02a160c7055b0cae26c87" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>undoUnlink</name></member>
      <member refid="class_ms_1_1_score_element_1a1d76afaf3ee463445961c3d981901be1" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>unlink</name></member>
      <member refid="class_ms_1_1_element_1a2cbf6c48adfc2d3856a7670ce1a199da" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>updateGrips</name></member>
      <member refid="class_ms_1_1_score_element_1acb1866df2e440923354fa5b1ee9d5f52" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>userName</name></member>
      <member refid="class_ms_1_1_measure_1afda80245c06f8b4cbb80df38d7b8eec4" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>userStretch</name></member>
      <member refid="class_ms_1_1_measure_1ae951dd61fdd2d1210b615e75c8d8c0fd" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>visible</name></member>
      <member refid="class_ms_1_1_element_1a9f91ce44289781c10fbaab9f5867d387" prot="public" virt="non-virtual" ambiguityscope="Ms::MeasureBase::"><scope>Ms::Measure</scope><name>visible</name></member>
      <member refid="class_ms_1_1_element_1a7e7ba0487a1113884ed218ba74c6a7d6" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>voice</name></member>
      <member refid="class_ms_1_1_measure_1a879b5d9349b7deb7f03df244ed55f6b8" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>vspacerDown</name></member>
      <member refid="class_ms_1_1_measure_1a22789a30661e49d958abc30c0dce71ee" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>vspacerUp</name></member>
      <member refid="class_ms_1_1_element_1ad1e0d3968ecafec4140aac087bd8fd99" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>vStaffIdx</name></member>
      <member refid="class_ms_1_1_element_1abd781d11186d1951028a0efaf6d5cf5a" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>width</name></member>
      <member refid="class_ms_1_1_measure_1a047b4c55b35fb49c5de3fbba6e976813" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>write</name></member>
      <member refid="class_ms_1_1_measure_1a972233bd3791b04d14857f9fcce25346" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>write</name></member>
      <member refid="class_ms_1_1_measure_1a58a0d5df7cc517f65e5f127efa94f722" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>writeBox</name></member>
      <member refid="class_ms_1_1_measure_base_1a1f6496f9e9631851af40be8ed190573b" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>writeProperties</name></member>
      <member refid="class_ms_1_1_score_element_1a4ae6e7e095b8f672951ffc30f980c45d" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>writeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a7a3de180bd5a72ab3e27b7fbf9213567" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>writeStyledProperties</name></member>
      <member refid="class_ms_1_1_element_1a6f850cd0581c46bee4661210b7a7777c" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>x</name></member>
      <member refid="class_ms_1_1_element_1a30c056051bbce9e867a512b8cbc1f912" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>y</name></member>
      <member refid="class_ms_1_1_element_1a0e947d90ca39376fd98b995d34811126" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>z</name></member>
      <member refid="class_ms_1_1_element_1a1a5eff5e9b3d54d8e8207a7c594a1fc9" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>~Element</name></member>
      <member refid="class_ms_1_1_measure_1a71f1ca1c1daed3580fa63b49af3585a9" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>~Measure</name></member>
      <member refid="class_ms_1_1_measure_base_1ac857ddf3ff5fe52fb534d20a9f8a6bbd" prot="public" virt="non-virtual"><scope>Ms::Measure</scope><name>~MeasureBase</name></member>
      <member refid="class_ms_1_1_score_element_1abc6cbffe99d185a7262f86be05cf6365" prot="public" virt="virtual"><scope>Ms::Measure</scope><name>~ScoreElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
