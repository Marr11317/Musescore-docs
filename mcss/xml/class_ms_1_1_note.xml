<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_ms_1_1_note" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Ms::Note</compoundname>
    <basecompoundref refid="class_ms_1_1_element" prot="public" virt="non-virtual">Ms::Element</basecompoundref>
    <includes refid="note_8h" local="yes">note.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_ms_1_1_note_1a8485856ee1248554f7223cbac4397048" prot="public" static="no" strong="yes">
        <type>char</type>
        <name>ValueType</name>
        <enumvalue id="class_ms_1_1_note_1a8485856ee1248554f7223cbac4397048ab4b459397c3a9f0c69473dba1c10d70a" prot="public">
          <name>OFFSET_VAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_ms_1_1_note_1a8485856ee1248554f7223cbac4397048a8b2bfc9bb5e4e0d5d8d3ce4b361f7b0d" prot="public">
          <name>USER_VAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="215" column="27" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="215" bodyend="215"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ms_1_1_note_1a82f89769c154f7c0402f4d4c9b269d1e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::_ghost</definition>
        <argsstring></argsstring>
        <name>_ghost</name>
        <initializer>{ false }</initializer>
        <briefdescription>
<para>ghost note (guitar: death note) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="219" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a838190bc6bf3491829701b5bdb7f0088" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::_hidden</definition>
        <argsstring></argsstring>
        <name>_hidden</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>marks this note as the hidden one if there are overlapping notes; hidden notes are not played and heads + accidentals are not shown </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="220" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a17fc157c47cfe59de8d7f1e97f329a07" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::_dotsHidden</definition>
        <argsstring></argsstring>
        <name>_dotsHidden</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dots of hidden notes are hidden too except if only one note is dotted </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="223" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a7d8cb073406dbebf247cfb719d894ad5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::_fretConflict</definition>
        <argsstring></argsstring>
        <name>_fretConflict</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>used by TAB staves to mark a fretting conflict: two or more notes on the same string </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="225" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a188a78184a7958bbd3fb65deb54f62d4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::dragMode</definition>
        <argsstring></argsstring>
        <name>dragMode</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="227" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1aef7648ca764fb321324ad95ccc16ad5a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::_mirror</definition>
        <argsstring></argsstring>
        <name>_mirror</name>
        <initializer>{ false }</initializer>
        <briefdescription>
<para>True if note is mirrored at stem. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="228" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a4a2597033cecac77f32e7ca8921a19a5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::_small</definition>
        <argsstring></argsstring>
        <name>_small</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="229" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1ad9437fea23d3c6711ceaa85bdf3f823a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::_play</definition>
        <argsstring></argsstring>
        <name>_play</name>
        <initializer>{ true  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="230" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a4f8593e1c659928ef4f274ec327b78ef" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool Ms::Note::_mark</definition>
        <argsstring></argsstring>
        <name>_mark</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="231" column="20" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a04bba74ed82341263118eef81023c267" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Ms::Note::_fixed</definition>
        <argsstring></argsstring>
        <name>_fixed</name>
        <initializer>{ false }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="232" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1ac1d1c05d4511c61a3f172f44d928e4bf" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_m_score_1ac1a0c95bfede9e37dd3fd910905092b8" kindref="member">MScore::DirectionH</ref></type>
        <definition>MScore::DirectionH Ms::Note::_userMirror</definition>
        <argsstring></argsstring>
        <name>_userMirror</name>
        <initializer>{ <ref refid="class_ms_1_1_m_score_1ac1a0c95bfede9e37dd3fd910905092b8ae1f2d5134ed2543d38a0de9751cf75d9" kindref="member">MScore::DirectionH::AUTO</ref> }</initializer>
        <briefdescription>
<para>user override of mirror </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="234" column="26" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a9bd59650e101cb8ad4249d2841322386" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_ms_1a4ddd02afd2f797a6a269ddce7466a4d6" kindref="member">Direction</ref></type>
        <definition>Direction Ms::Note::_userDotPosition</definition>
        <argsstring></argsstring>
        <name>_userDotPosition</name>
        <initializer>{ <ref refid="namespace_ms_1a4ddd02afd2f797a6a269ddce7466a4d6ae1f2d5134ed2543d38a0de9751cf75d9" kindref="member">Direction::AUTO</ref> }</initializer>
        <briefdescription>
<para>user override of dot position </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="235" column="17" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1abb107077f537236863845be58c215c26" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_note_head_1a1d3e8faf3d3bc1d89d9d3485acde69d1" kindref="member">NoteHead::Group</ref></type>
        <definition>NoteHead::Group Ms::Note::_headGroup</definition>
        <argsstring></argsstring>
        <name>_headGroup</name>
        <initializer>{ <ref refid="class_ms_1_1_note_head_1a1d3e8faf3d3bc1d89d9d3485acde69d1a6a94b8d56da1b6f881b076e10170e9a2" kindref="member">NoteHead::Group::HEAD_NORMAL</ref> }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="237" column="23" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a195f2d7fa451c942ae263ac99d480bc6" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_note_head_1a31c343e7e7f09fee0246ef6a1d7a4e87" kindref="member">NoteHead::Type</ref></type>
        <definition>NoteHead::Type Ms::Note::_headType</definition>
        <argsstring></argsstring>
        <name>_headType</name>
        <initializer>{ <ref refid="class_ms_1_1_note_head_1a31c343e7e7f09fee0246ef6a1d7a4e87a45b570219d7d4c6d4c05af96807c8d7a" kindref="member">NoteHead::Type::HEAD_AUTO</ref>    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="238" column="23" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a00cdcb93f6008ce07eb6f6e1dc99dd1c" prot="private" static="no" mutable="no">
        <type>ValueType</type>
        <definition>ValueType Ms::Note::_veloType</definition>
        <argsstring></argsstring>
        <name>_veloType</name>
        <initializer>{ ValueType::OFFSET_VAL }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="240" column="17" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a70060efe52a1a865f771b212438012e3" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Ms::Note::_offTimeType</definition>
        <argsstring></argsstring>
        <name>_offTimeType</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="242" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a4f9662c3267871ef634350f227113366" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char Ms::Note::_onTimeType</definition>
        <argsstring></argsstring>
        <name>_onTimeType</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="243" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1acb2e0ed7f471e1243485bb66a9596e5a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Note::_subchannel</definition>
        <argsstring></argsstring>
        <name>_subchannel</name>
        <initializer>{ 0  }</initializer>
        <briefdescription>
<para>articulation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="245" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1ab406438ffdcc3ad93a3128accffb7204" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Note::_line</definition>
        <argsstring></argsstring>
        <name>_line</name>
        <initializer>{ INVALID_LINE  }</initializer>
        <briefdescription>
<para>y-Position; 0 - top line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="246" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1ada115f349c9b2a257d3e2b2a12c728b1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Note::_fret</definition>
        <argsstring></argsstring>
        <name>_fret</name>
        <initializer>{ -1 }</initializer>
        <briefdescription>
<para>for tablature view </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="247" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a887285eff6aeb02a39c9c94adf65e27f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Note::_string</definition>
        <argsstring></argsstring>
        <name>_string</name>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="248" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a3f76ec52c413e52e650d7c2b9c669903" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int Ms::Note::_tpc[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_tpc</name>
        <initializer>{ Tpc::TPC_INVALID, Tpc::TPC_INVALID }</initializer>
        <briefdescription>
<para>tonal pitch class (concert/transposing) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="249" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a7ef842fb7bb6b58a00f840e9c05d6232" prot="private" static="no" mutable="yes">
        <type>int</type>
        <definition>int Ms::Note::_pitch</definition>
        <argsstring></argsstring>
        <name>_pitch</name>
        <initializer>{ 0  }</initializer>
        <briefdescription>
<para><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> pitch as midi value (0 - 127). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="250" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a7c7786e2364892ac38620ca2475a71f9" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Note::_veloOffset</definition>
        <argsstring></argsstring>
        <name>_veloOffset</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
<para>velocity user offset in percent, or absolute velocity for this note </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="252" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a26a2d926c5c73a76d137c3dee4c7918c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Ms::Note::_fixedLine</definition>
        <argsstring></argsstring>
        <name>_fixedLine</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="253" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1ae9b4f2292c0d4618bff0cf433da7fabc" prot="private" static="no" mutable="no">
        <type>qreal</type>
        <definition>qreal Ms::Note::_tuning</definition>
        <argsstring></argsstring>
        <name>_tuning</name>
        <initializer>{ 0.0 }</initializer>
        <briefdescription>
<para>pitch offset in cent, playable only by internal synthesizer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="254" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a597602b9ffd059e6b7c2fbc1fcfd7797" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_accidental" kindref="compound">Accidental</ref> *</type>
        <definition>Accidental* Ms::Note::_accidental</definition>
        <argsstring></argsstring>
        <name>_accidental</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="256" column="18" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a627c405c1785b66c46fe7d6cf9c0b3c2" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_tie" kindref="compound">Tie</ref> *</type>
        <definition>Tie* Ms::Note::_tieFor</definition>
        <argsstring></argsstring>
        <name>_tieFor</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="258" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a6e9ea12265eedeabeaeb5f90fedaa54b" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_tie" kindref="compound">Tie</ref> *</type>
        <definition>Tie* Ms::Note::_tieBack</definition>
        <argsstring></argsstring>
        <name>_tieBack</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="259" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1ac44ce739c66738ccf39400b3bcec1779" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_element_list" kindref="compound">ElementList</ref></type>
        <definition>ElementList Ms::Note::_el</definition>
        <argsstring></argsstring>
        <name>_el</name>
        <briefdescription>
<para>fingering, other text, symbols or images </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="261" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a2bf149d5bc5af363e906b153f0c03427" prot="private" static="no" mutable="no">
        <type>QVector&lt; <ref refid="class_ms_1_1_note_dot" kindref="compound">NoteDot</ref> * &gt;</type>
        <definition>QVector&lt;NoteDot*&gt; Ms::Note::_dots</definition>
        <argsstring></argsstring>
        <name>_dots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="262" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a03df1d32ad63e5253451e83c0c442211" prot="private" static="no" mutable="no">
        <type><ref refid="class_ms_1_1_note_event_list" kindref="compound">NoteEventList</ref></type>
        <definition>NoteEventList Ms::Note::_playEvents</definition>
        <argsstring></argsstring>
        <name>_playEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="263" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a108c5485b9fe6d8fa7f82d0f714acf8d" prot="private" static="no" mutable="no">
        <type>QVector&lt; <ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> * &gt;</type>
        <definition>QVector&lt;Spanner*&gt; Ms::Note::_spannerFor</definition>
        <argsstring></argsstring>
        <name>_spannerFor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="264" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a14c6af19f806b818197a070ccfb19749" prot="private" static="no" mutable="no">
        <type>QVector&lt; <ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> * &gt;</type>
        <definition>QVector&lt;Spanner*&gt; Ms::Note::_spannerBack</definition>
        <argsstring></argsstring>
        <name>_spannerBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="265" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a615250548dae7ba405d28e9f4cceb854" prot="private" static="no" mutable="no">
        <type>SymId</type>
        <definition>SymId Ms::Note::_cachedNoteheadSym</definition>
        <argsstring></argsstring>
        <name>_cachedNoteheadSym</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="267" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a08704b5cf213dac48dcb931eb977a921" prot="private" static="no" mutable="no">
        <type>SymId</type>
        <definition>SymId Ms::Note::_cachedSymNull</definition>
        <argsstring></argsstring>
        <name>_cachedSymNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="268" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ms_1_1_note_1a8e4480ba16d14c2db128abfb26f4c803" prot="private" static="no" mutable="no">
        <type>QString</type>
        <definition>QString Ms::Note::_fretString</definition>
        <argsstring></argsstring>
        <name>_fretString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="270" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ms_1_1_note_1af8b520d09a5ffaf46b74040a61eb4546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Note::Q_ENUM</definition>
        <argsstring>(ValueType)</argsstring>
        <name>Q_ENUM</name>
        <param>
          <type>ValueType</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="216" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1acacaa498757f9823da9fe48345270314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Note::Note</definition>
        <argsstring>(Score *s=0)</argsstring>
        <name>Note</name>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>s</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="290" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="548" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ae5a10dad9d3449ec193563d6d407113b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Note::Note</definition>
        <argsstring>(const Note &amp;, bool link=false)</argsstring>
        <name>Note</name>
        <param>
          <type>const <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> &amp;</type>
          <defname>n</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>link</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="291" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="564" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1af17bbe53051ee6b779cc58072e0eaf05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Ms::Note::~Note</definition>
        <argsstring>()</argsstring>
        <name>~Note</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="292" column="7" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="556" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a1795a2af91473808e29b1e088ba4f696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> &amp;</type>
        <definition>Note&amp; Ms::Note::operator=</definition>
        <argsstring>(const Note &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="294" column="12"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7dbb682074b354079e26bdebd317a498" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>virtual Note* Ms::Note::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="class_ms_1_1_element_1adcd981af2ae9890f31c993050d5f0f25">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="295" column="20" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a88e44f20b100767dc6c10f5d7c5ca5a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_ms_1a2c92ce0204176ede1ab86e2f44ae6b9e" kindref="member">ElementType</ref></type>
        <definition>ElementType Ms::Note::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <reimplements refid="class_ms_1_1_score_element_1a3dbb763c3cd4ec05d202d03115abe1d5">type</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="296" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aabfa9ef9e94c538ca446d0f9a3742009" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::undoUnlink</definition>
        <argsstring>() override</argsstring>
        <name>undoUnlink</name>
        <reimplements refid="class_ms_1_1_score_element_1a994f2abd8df02a160c7055b0cae26c87">undoUnlink</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="298" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3379" bodyend="3384"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a034175a24b61e44fd6109b6572bc4237" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::mag</definition>
        <argsstring>() const override</argsstring>
        <name>mag</name>
        <reimplements refid="class_ms_1_1_element_1ad01cda9f6017d09c9fb9305de18e9310">mag</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="300" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2219" bodyend="2225"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4d6e2aef9a0ba5beadef86d36f15367d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::layout</definition>
        <argsstring>() override</argsstring>
        <name>layout</name>
        <reimplements refid="class_ms_1_1_element_1a3ae68f5da280c53fd1d329f20601818b">layout</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="302" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1909" bodyend="1946"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4f229d667261862d0b69981712fee621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::layout2</definition>
        <argsstring>()</argsstring>
        <name>layout2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="303" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1953" bodyend="2020"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ada3eb3d3cc46317caff364457c5a81fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setCachedNoteheadSym</definition>
        <argsstring>(SymId i)</argsstring>
        <name>setCachedNoteheadSym</name>
        <param>
          <type>SymId</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="305" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="305" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a98c9b971a778805acb01a61cb0e1c9d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::scanElements</definition>
        <argsstring>(void *data, void(*func)(void *, Element *), bool all=true) override</argsstring>
        <name>scanElements</name>
        <reimplements refid="class_ms_1_1_element_1ab4cacda18439ce6c8c615e253c762f12">scanElements</reimplements>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(void *, <ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *)</type>
          <declname>func</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>all</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="306" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2153" bodyend="2174"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a2a2dbb3c57df09b6f783254bbab05ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::setTrack</definition>
        <argsstring>(int val) override</argsstring>
        <name>setTrack</name>
        <reimplements refid="class_ms_1_1_element_1a884bf81982c8c302cbdf79ea567c3ced">setTrack</reimplements>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="307" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2180" bodyend="2202"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ab2e6541958f8118eaff62baa58ec3307" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::playTicks</definition>
        <argsstring>() const</argsstring>
        <name>playTicks</name>
        <briefdescription>
<para>Return total tick len of tied notes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="309" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="958" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a43dfad32ea3c1f8e2b56e810cd7bfa6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::headWidth</definition>
        <argsstring>() const</argsstring>
        <name>headWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="311" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="869" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aebe714f6dc759dbf09ffcda4491952fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::headHeight</definition>
        <argsstring>() const</argsstring>
        <name>headHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="312" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="919" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ae52149fb44e9cda4d8d8dd2844a47b48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::tabHeadWidth</definition>
        <argsstring>(const StaffType *tab=0) const</argsstring>
        <name>tabHeadWidth</name>
        <param>
          <type>const <ref refid="class_ms_1_1_staff_type" kindref="compound">StaffType</ref> *</type>
          <declname>tab</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="313" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="898" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a503a96f8bfef51762a39c60fdc3303ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::tabHeadHeight</definition>
        <argsstring>(const StaffType *tab=0) const</argsstring>
        <name>tabHeadHeight</name>
        <param>
          <type>const <ref refid="class_ms_1_1_staff_type" kindref="compound">StaffType</ref> *</type>
          <declname>tab</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="314" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="928" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4ca22e086275dc1906b1476acb032cc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF Ms::Note::stemDownNW</definition>
        <argsstring>() const</argsstring>
        <name>stemDownNW</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="315" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="939" bodyend="942"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a1c9ea06bca227155fbfb20e72a1ff4a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF Ms::Note::stemUpSE</definition>
        <argsstring>() const</argsstring>
        <name>stemUpSE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="316" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="948" bodyend="951"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa038eaaa0da98e2d9f88b8c9267d0d24" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::bboxXShift</definition>
        <argsstring>() const</argsstring>
        <name>bboxXShift</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="317" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="879" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ac66fa59296b4aafe704d271383c67b50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::noteheadCenterX</definition>
        <argsstring>() const</argsstring>
        <name>noteheadCenterX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="318" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="890" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ad55c1e54b156996f2b1d211c31eb7df9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::bboxRightPos</definition>
        <argsstring>() const</argsstring>
        <name>bboxRightPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="319" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="846" bodyend="850"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aaa31b11917139c63c6dc4a46f939b95f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::headBodyWidth</definition>
        <argsstring>() const</argsstring>
        <name>headBodyWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="320" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="857" bodyend="860"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa3ab372fd5e04a1563fe8c7581c5aae7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note_head_1a1d3e8faf3d3bc1d89d9d3485acde69d1" kindref="member">NoteHead::Group</ref></type>
        <definition>NoteHead::Group Ms::Note::headGroup</definition>
        <argsstring>() const</argsstring>
        <name>headGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="322" column="23" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="322" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a313b101f15dd05bb416d8e29070b4add" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note_head_1a31c343e7e7f09fee0246ef6a1d7a4e87" kindref="member">NoteHead::Type</ref></type>
        <definition>NoteHead::Type Ms::Note::headType</definition>
        <argsstring>() const</argsstring>
        <name>headType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="323" column="22" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="323" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ad0e73a30df1e32e9dcdc0b36580e853c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setHeadGroup</definition>
        <argsstring>(NoteHead::Group val)</argsstring>
        <name>setHeadGroup</name>
        <param>
          <type><ref refid="class_ms_1_1_note_head_1a1d3e8faf3d3bc1d89d9d3485acde69d1" kindref="member">NoteHead::Group</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="324" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2259" bodyend="2263"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1add88c356d97cc3a42374c29ddb8ada28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setHeadType</definition>
        <argsstring>(NoteHead::Type t)</argsstring>
        <name>setHeadType</name>
        <param>
          <type><ref refid="class_ms_1_1_note_head_1a31c343e7e7f09fee0246ef6a1d7a4e87" kindref="member">NoteHead::Type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="325" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2849" bodyend="2852"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a82c66f056118ad9b0be128ba1c5a6035" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>int Ms::Note::subtype</definition>
        <argsstring>() const override</argsstring>
        <name>subtype</name>
        <reimplements refid="class_ms_1_1_element_1ad38a889b51fa8b8553a15ca29abbc874">subtype</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="327" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="327" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a171271218a44ccc6979fa222604c2cba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::Note::subtypeName</definition>
        <argsstring>() const override</argsstring>
        <name>subtypeName</name>
        <reimplements refid="class_ms_1_1_element_1a861aa05fa45296c04d4309143211a9e6">subtypeName</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="328" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3010" bodyend="3013"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ac88696674088bba6493e11f97d09800d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setPitch</definition>
        <argsstring>(int val)</argsstring>
        <name>setPitch</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="330" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="640" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a873e34c368a60fd0028f1df9cd41c717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setPitch</definition>
        <argsstring>(int pitch, int tpc1, int tpc2)</argsstring>
        <name>setPitch</name>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tpc1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>tpc2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="331" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="649" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1adb609dbbd1f11ba96c09c01d49fa63bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::pitch</definition>
        <argsstring>() const</argsstring>
        <name>pitch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="332" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="332" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a647e0387202ca0459a9f823dccd62719" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::ottaveCapoFret</definition>
        <argsstring>() const</argsstring>
        <name>ottaveCapoFret</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="333" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2270" bodyend="2278"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4931518c8ec3e9bf6c4a7269f3d3295d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::ppitch</definition>
        <argsstring>() const</argsstring>
        <name>ppitch</name>
        <briefdescription>
<para>playback pitch </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="334" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2285" bodyend="2300"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6ac5fa5a532c5ddfa50868d2598b58e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::epitch</definition>
        <argsstring>() const</argsstring>
        <name>epitch</name>
        <briefdescription>
<para>effective pitch </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="335" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2309" bodyend="2312"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ad184301be62cb66c879ec8668d0a9e6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>qreal</type>
        <definition>qreal Ms::Note::tuning</definition>
        <argsstring>() const</argsstring>
        <name>tuning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="336" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1af258c04ff707ec835352f589c9b86dfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setTuning</definition>
        <argsstring>(qreal v)</argsstring>
        <name>setTuning</name>
        <param>
          <type>qreal</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="337" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="337" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a04a48f307d8a7658a43b7d32a8bdfea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::undoSetTpc</definition>
        <argsstring>(int v)</argsstring>
        <name>undoSetTpc</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="338" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="740" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6616f92479ba74efcf6f2675337e4d28" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::transposition</definition>
        <argsstring>() const</argsstring>
        <name>transposition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="339" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1480" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4f70ed1ad94787f19a5b90c38df3564e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::fixed</definition>
        <argsstring>() const</argsstring>
        <name>fixed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="340" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="340" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a87ee6c8a91225dac38f6918ec0ba47ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setFixed</definition>
        <argsstring>(bool v)</argsstring>
        <name>setFixed</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="341" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="341" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a1846d10eadec6926a9ac6511c3ceda39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::fixedLine</definition>
        <argsstring>() const</argsstring>
        <name>fixedLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="342" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="342" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a9c27680c448f335ff2068ee415da09cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setFixedLine</definition>
        <argsstring>(int v)</argsstring>
        <name>setFixedLine</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="343" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1af813072eba46ad48757444a574d0a01f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::tpc</definition>
        <argsstring>() const</argsstring>
        <name>tpc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="345" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="756" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a253ddb42a9f2f5c0c05787b81910abe7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::tpc1</definition>
        <argsstring>() const</argsstring>
        <name>tpc1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="346" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="346" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ab9c2a85410e0eda228b182a1a455bfe9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::tpc2</definition>
        <argsstring>() const</argsstring>
        <name>tpc2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="347" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="347" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ac9e13d0d98a6a9acaa0186483ca93b3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Note::tpcUserName</definition>
        <argsstring>(bool explicitAccidental=false) const</argsstring>
        <name>tpcUserName</name>
        <param>
          <type>bool</type>
          <declname>explicitAccidental</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="348" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="765" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a8fd1eb2a642f8fef03f86210a4978ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setTpc</definition>
        <argsstring>(int v)</argsstring>
        <name>setTpc</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="350" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="728" bodyend="733"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7b1cb6772bc40d4e6c6d005a8a514f77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setTpc1</definition>
        <argsstring>(int v)</argsstring>
        <name>setTpc1</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="351" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="351" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6be8a4d3de7151fa3c6ee5420bc15731" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setTpc2</definition>
        <argsstring>(int v)</argsstring>
        <name>setTpc2</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="352" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="352" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ada8ff30ba7ff1ba04e00fb2f8b971048" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setTpcFromPitch</definition>
        <argsstring>()</argsstring>
        <name>setTpcFromPitch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="353" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="702" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a40ede174072aaa879eb707e6c014550b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::tpc1default</definition>
        <argsstring>(int pitch) const</argsstring>
        <name>tpc1default</name>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="354" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="662" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ab8c8466304bdd7179ac41f03784332c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::tpc2default</definition>
        <argsstring>(int pitch) const</argsstring>
        <name>tpc2default</name>
        <param>
          <type>int</type>
          <declname>pitch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="355" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="683" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a5546123c8824914f864f02ae364d7bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::transposeTpc</definition>
        <argsstring>(int tpc)</argsstring>
        <name>transposeTpc</name>
        <param>
          <type>int</type>
          <declname>tpc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="356" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="779" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a39025226e9614de8073a91e82dcbb8ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_accidental" kindref="compound">Accidental</ref> *</type>
        <definition>Accidental* Ms::Note::accidental</definition>
        <argsstring>() const</argsstring>
        <name>accidental</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="358" column="18" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="358" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a94a1df4d90e182eeb81cc704f32b6eb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setAccidental</definition>
        <argsstring>(Accidental *a)</argsstring>
        <name>setAccidental</name>
        <param>
          <type><ref refid="class_ms_1_1_accidental" kindref="compound">Accidental</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="359" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="359" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7edd98335208a0995062f183ccdf27a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_ms_1a5bbe555ac1f35336598cd0f82a8075d4" kindref="member">AccidentalType</ref></type>
        <definition>AccidentalType Ms::Note::accidentalType</definition>
        <argsstring>() const</argsstring>
        <name>accidentalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="361" column="22" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3322" bodyend="3325"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aca3299f0339ff9ffdfea8045569fc16b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setAccidentalType</definition>
        <argsstring>(AccidentalType type)</argsstring>
        <name>setAccidentalType</name>
        <param>
          <type><ref refid="namespace_ms_1a5bbe555ac1f35336598cd0f82a8075d4" kindref="member">AccidentalType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="362" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3331" bodyend="3335"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ac65a5e366eda7035626fb167e4a22ff7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::line</definition>
        <argsstring>() const</argsstring>
        <name>line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="364" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2240" bodyend="2243"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6912d3da9c05f0b7b356f9fbff5008df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setLine</definition>
        <argsstring>(int n)</argsstring>
        <name>setLine</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="365" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="365" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4fc3ac51c0e748364e264b60c422ded3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::physicalLine</definition>
        <argsstring>() const</argsstring>
        <name>physicalLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="366" column="11"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ab039a328a1e0be6fce9d9ae2d87a1663" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::fret</definition>
        <argsstring>() const</argsstring>
        <name>fret</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="368" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="368" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a274b9ec8b9be38c1aad55d8f506ab35b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setFret</definition>
        <argsstring>(int val)</argsstring>
        <name>setFret</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="369" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="369" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa5068302dd057f7cd18cdf561b75d18f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::string</definition>
        <argsstring>() const</argsstring>
        <name>string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="370" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="370" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aeaddfd87a09000f6eb25dc1133ba8472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setString</definition>
        <argsstring>(int val)</argsstring>
        <name>setString</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="371" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2249" bodyend="2253"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a5fef47281b49dd98305c30134df717e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::ghost</definition>
        <argsstring>() const</argsstring>
        <name>ghost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="372" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="372" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ab203ac79f25f02449fd99d0a995f7e93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setGhost</definition>
        <argsstring>(bool val)</argsstring>
        <name>setGhost</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="373" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="373" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a22a34a31db73a7057530e42cfe9da0d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::fretConflict</definition>
        <argsstring>() const</argsstring>
        <name>fretConflict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="374" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="374" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a85f7480cd12c34659da2e462bef52ec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setFretConflict</definition>
        <argsstring>(bool val)</argsstring>
        <name>setFretConflict</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="375" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="375" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a62c2aead455c3d63ec9466b945c6fb5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::add</definition>
        <argsstring>(Element *) override</argsstring>
        <name>add</name>
        <reimplements refid="class_ms_1_1_element_1a6466e3a3ada3e0e7add1d1977bbfda96">add</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="377" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1006" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a31dc7f8793a43c1d1e3d0a06521f5c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::remove</definition>
        <argsstring>(Element *) override</argsstring>
        <name>remove</name>
        <reimplements refid="class_ms_1_1_element_1acca1fd58c4df74da5cefc31787a2c715">remove</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="378" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1049" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a015e1e0a27a32eef6070e3fc45a682fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::mirror</definition>
        <argsstring>() const</argsstring>
        <name>mirror</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="380" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="380" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a0fd80339f7fe2ce2a9dedae21188821d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setMirror</definition>
        <argsstring>(bool val)</argsstring>
        <name>setMirror</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="381" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="381" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a488c3e17de900353472040373d0e7f83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::small</definition>
        <argsstring>() const</argsstring>
        <name>small</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="383" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="383" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1abc716b0cb1c5af9ae71447f41ecb2f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setSmall</definition>
        <argsstring>(bool val)</argsstring>
        <name>setSmall</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="384" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2231" bodyend="2234"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa03c04b98ca671fbac3c7235c8e63d06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::play</definition>
        <argsstring>() const</argsstring>
        <name>play</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="386" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="386" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a554a25e62121fcd063e32bbb8e50124d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setPlay</definition>
        <argsstring>(bool val)</argsstring>
        <name>setPlay</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="387" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="387" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a48317b9139affa970569ed1fcb3add46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_tie" kindref="compound">Ms::Tie</ref> *</type>
        <definition>Ms::Tie* Ms::Note::tieFor</definition>
        <argsstring>() const</argsstring>
        <name>tieFor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="389" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="389" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a84d9574652805d8c7600ad6968ff8e40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_tie" kindref="compound">Ms::Tie</ref> *</type>
        <definition>Ms::Tie* Ms::Note::tieBack</definition>
        <argsstring>() const</argsstring>
        <name>tieBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="390" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="390" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a05ce3788d478c430ece124313a63af1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setTieFor</definition>
        <argsstring>(Tie *t)</argsstring>
        <name>setTieFor</name>
        <param>
          <type><ref refid="class_ms_1_1_tie" kindref="compound">Tie</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="391" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="391" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a9bdc2e024e29b58a2a25678a957782d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setTieBack</definition>
        <argsstring>(Tie *t)</argsstring>
        <name>setTieBack</name>
        <param>
          <type><ref refid="class_ms_1_1_tie" kindref="compound">Tie</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="392" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="392" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a9fcfa1264a1fdcda670283e4ce5d3684" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note * Ms::Note::firstTiedNote</definition>
        <argsstring>() const</argsstring>
        <name>firstTiedNote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="393" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3236" bodyend="3248"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a3b880abc62dd56f7b6ee5dfb196af73b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>const Note * Ms::Note::lastTiedNote</definition>
        <argsstring>() const</argsstring>
        <name>lastTiedNote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="394" column="18" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3214" bodyend="3228"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1abf18b583e65f7c2b0f4fd9dc2acd34e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note" kindref="compound">Note</ref> *</type>
        <definition>Note* Ms::Note::lastTiedNote</definition>
        <argsstring>()</argsstring>
        <name>lastTiedNote</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="395" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="395" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a9a43b3386cfcf71a997b2d5f30e90b7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::unisonIndex</definition>
        <argsstring>() const</argsstring>
        <name>unisonIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="396" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3274" bodyend="3286"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ab44f03e5f7f0e72cccf3be5d218de402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::disconnectTiedNotes</definition>
        <argsstring>()</argsstring>
        <name>disconnectTiedNotes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="397" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3292" bodyend="3300"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ae98ee8a14611a1e180507a38bdb6cf7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::connectTiedNotes</definition>
        <argsstring>()</argsstring>
        <name>connectTiedNotes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="398" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3306" bodyend="3316"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ac1fe59b8f92c11fc6b662855fc8d9316" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
        <definition>Chord* Ms::Note::chord</definition>
        <argsstring>() const</argsstring>
        <name>chord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="400" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="400" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4c0e30bba76a1838189fa6ab117122ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setChord</definition>
        <argsstring>(Chord *a)</argsstring>
        <name>setChord</name>
        <param>
          <type><ref refid="class_ms_1_1_chord" kindref="compound">Chord</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="401" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="401" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6747aad598d4bffa3e99e6a2fd105be6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::draw</definition>
        <argsstring>(QPainter *) const override</argsstring>
        <name>draw</name>
        <reimplements refid="class_ms_1_1_element_1a0e093baaf71efa68b681c69e70a2cb71">draw</reimplements>
        <param>
          <type>QPainter *</type>
          <defname>painter</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="402" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1106" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a34fcc408905091e3b2cb6d74720585a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::read</definition>
        <argsstring>(XmlReader &amp;) override</argsstring>
        <name>read</name>
        <reimplements refid="class_ms_1_1_element_1a36da47af8aac2c422a2bc3eb91f8ac4f">read</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="404" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1230" bodyend="1304"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a2c2428a09b9f1ef9d9f4fcea27629990" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::Note::readProperties</definition>
        <argsstring>(XmlReader &amp;) override</argsstring>
        <name>readProperties</name>
        <reimplements refid="class_ms_1_1_element_1aabedff22ee4d865dea6442fabb6a53a2">readProperties</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_reader" kindref="compound">XmlReader</ref> &amp;</type>
          <defname>e</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="405" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1310" bodyend="1417"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1abadcf3844d0f3c131aab2465d62857f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::readAddConnector</definition>
        <argsstring>(ConnectorInfoReader *info, bool pasteMode) override</argsstring>
        <name>readAddConnector</name>
        <reimplements refid="class_ms_1_1_score_element_1a92ef81d3a9835ec8e78a308229da35f8">readAddConnector</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_connector_info_reader" kindref="compound">ConnectorInfoReader</ref> *</type>
          <declname>info</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>pasteMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="406" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1423" bodyend="1474"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a53925c055ba0b5cf446b142cbea77995" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::write</definition>
        <argsstring>(XmlWriter &amp;) const override</argsstring>
        <name>write</name>
        <reimplements refid="class_ms_1_1_element_1a7298ea80b152246289da660cca217ad1">write</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_xml_writer" kindref="compound">XmlWriter</ref> &amp;</type>
          <defname>xml</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="407" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1184" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1abaffbc8698b96263bb1d9b3f4b69c63e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::Note::acceptDrop</definition>
        <argsstring>(EditData &amp;) const override</argsstring>
        <name>acceptDrop</name>
        <reimplements refid="class_ms_1_1_element_1a35614445f0bc2212cbcc75c3f5810543">acceptDrop</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if this element accepts a drop at canvas relative <emphasis>pos</emphasis> of given element <emphasis>type</emphasis> and <emphasis>subtype</emphasis>.</para>
<para>Reimplemented by elements that accept drops. Used to change cursor shape while dragging to indicate drop targets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="409" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1533" bodyend="1597"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a2a3d7532f4f1e494c854a30933b223a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Note::drop</definition>
        <argsstring>(EditData &amp;) override</argsstring>
        <name>drop</name>
        <reimplements refid="class_ms_1_1_element_1a0ca69a9fb48e7b9fb481aacaf3860032">drop</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handle a dropped element at canvas relative <emphasis>pos</emphasis> of given element <emphasis>type</emphasis> and <emphasis>subtype</emphasis>. Returns dropped element if any. The ownership of element in DropData is transferred to the called element (if not used, element has to be deleted). The returned element will be selected if not in note edit mode.</para>
<para>Reimplemented by elements that accept drops. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="410" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1603" bodyend="1817"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a185ab0f428111692b22a601be4026991" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::hidden</definition>
        <argsstring>() const</argsstring>
        <name>hidden</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="412" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="412" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a180de4d0e2a4b8dda03c5ed38c12f4fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setHidden</definition>
        <argsstring>(bool val)</argsstring>
        <name>setHidden</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="413" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="413" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1af0075d4ea77f911abe041be7e7d0762a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::dotsHidden</definition>
        <argsstring>() const</argsstring>
        <name>dotsHidden</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="414" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="414" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aac8969ffb365d143f0b60b4a222303f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setDotsHidden</definition>
        <argsstring>(bool val)</argsstring>
        <name>setDotsHidden</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="415" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="415" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a81e05b2d7fcba75ead327cac571a2cae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_ms_1a7358b681a67b5524ff31ae9ec8e72322" kindref="member">NoteType</ref></type>
        <definition>NoteType Ms::Note::noteType</definition>
        <argsstring>() const</argsstring>
        <name>noteType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="417" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2120" bodyend="2123"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a1a69d75873b1f26d2604cc047fb4855b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString Ms::Note::noteTypeUserName</definition>
        <argsstring>() const</argsstring>
        <name>noteTypeUserName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="418" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2129" bodyend="2147"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6003ba6106243f773ea7ae88abe5dc14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element_list" kindref="compound">ElementList</ref> &amp;</type>
        <definition>ElementList&amp; Ms::Note::el</definition>
        <argsstring>()</argsstring>
        <name>el</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="420" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="420" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a5eb28a79064821baa52310b385df316b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_element_list" kindref="compound">ElementList</ref> &amp;</type>
        <definition>const ElementList&amp; Ms::Note::el</definition>
        <argsstring>() const</argsstring>
        <name>el</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="421" column="25" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="421" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa8e988107ffd64c0e8b232cac1f42b1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::subchannel</definition>
        <argsstring>() const</argsstring>
        <name>subchannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="423" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="423" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa3b47f29f88ee94fb7f3e2a19d10de85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setSubchannel</definition>
        <argsstring>(int val)</argsstring>
        <name>setSubchannel</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="424" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="424" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ab0ce88117199ff8fea149d99b515c2e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_m_score_1ac1a0c95bfede9e37dd3fd910905092b8" kindref="member">MScore::DirectionH</ref></type>
        <definition>MScore::DirectionH Ms::Note::userMirror</definition>
        <argsstring>() const</argsstring>
        <name>userMirror</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="426" column="26" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="426" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a934b214a5a619e1a2a35d2540aa35e82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setUserMirror</definition>
        <argsstring>(MScore::DirectionH d)</argsstring>
        <name>setUserMirror</name>
        <param>
          <type><ref refid="class_ms_1_1_m_score_1ac1a0c95bfede9e37dd3fd910905092b8" kindref="member">MScore::DirectionH</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="427" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="427" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ad9eec4888c9aa3acb109163a2b1819a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_ms_1a4ddd02afd2f797a6a269ddce7466a4d6" kindref="member">Direction</ref></type>
        <definition>Direction Ms::Note::userDotPosition</definition>
        <argsstring>() const</argsstring>
        <name>userDotPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="429" column="17" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="429" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1afaf580b66a43a434bc70fcad9546e7cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setUserDotPosition</definition>
        <argsstring>(Direction d)</argsstring>
        <name>setUserDotPosition</name>
        <param>
          <type><ref refid="namespace_ms_1a4ddd02afd2f797a6a269ddce7466a4d6" kindref="member">Direction</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="430" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a256b98dd7bc0bb70cd07038f95a918a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::dotIsUp</definition>
        <argsstring>() const</argsstring>
        <name>dotIsUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="431" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2026" bodyend="2034"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a519f62ae4063f2a55e74967a74eb8859" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::reset</definition>
        <argsstring>() override</argsstring>
        <name>reset</name>
        <reimplements refid="class_ms_1_1_element_1aaa90bc751111ad8ec041e2004321fbfe">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="433" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2208" bodyend="2213"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a35a050f6696d45ea0139ebb782f913b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType</type>
        <definition>ValueType Ms::Note::veloType</definition>
        <argsstring>() const</argsstring>
        <name>veloType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="435" column="17" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="435" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ac07831538c8525825635e07bd69bfe28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setVeloType</definition>
        <argsstring>(ValueType v)</argsstring>
        <name>setVeloType</name>
        <param>
          <type>ValueType</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="436" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="436" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aec8b51971a64bc6de5794e133e72c219" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::veloOffset</definition>
        <argsstring>() const</argsstring>
        <name>veloOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="437" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="437" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a23bd44a49d6ec5ef2f7be99a9dfa8bcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setVeloOffset</definition>
        <argsstring>(int v)</argsstring>
        <name>setVeloOffset</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="438" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="438" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6f58e66a31fa80f8cfd8d11cd9aebba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setOnTimeOffset</definition>
        <argsstring>(int v)</argsstring>
        <name>setOnTimeOffset</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="440" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2858" bodyend="2862"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a589e03cd1337c1e59e5a237df70e203a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setOffTimeOffset</definition>
        <argsstring>(int v)</argsstring>
        <name>setOffTimeOffset</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="441" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2868" bodyend="2872"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1afede42365ed2f8a3586db49d9bab5ee3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::customizeVelocity</definition>
        <argsstring>(int velo) const</argsstring>
        <name>customizeVelocity</name>
        <param>
          <type>int</type>
          <declname>velo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="443" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2322" bodyend="2329"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1afb3876cd44a8beb14ac32a895c885428" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note_dot" kindref="compound">NoteDot</ref> *</type>
        <definition>NoteDot* Ms::Note::dot</definition>
        <argsstring>(int n)</argsstring>
        <name>dot</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="444" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="444" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a48f11d8f23219b2595615d501b630bc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QVector&lt; <ref refid="class_ms_1_1_note_dot" kindref="compound">NoteDot</ref> * &gt; &amp;</type>
        <definition>const QVector&lt;NoteDot*&gt;&amp; Ms::Note::dots</definition>
        <argsstring>() const</argsstring>
        <name>dots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="445" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="445" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a87e3d4c6937d4c67bf3df703a07ddb7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>QVector&lt; <ref refid="class_ms_1_1_note_dot" kindref="compound">NoteDot</ref> * &gt; &amp;</type>
        <definition>QVector&lt;NoteDot*&gt;&amp; Ms::Note::dots</definition>
        <argsstring>()</argsstring>
        <name>dots</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="446" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="446" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1abb36d80d537ebc0ff5247c022901dd2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::qmlDotsCount</definition>
        <argsstring>()</argsstring>
        <name>qmlDotsCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="448" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3001" bodyend="3004"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a59e4af122333f6e794ba9a30340a3584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::updateAccidental</definition>
        <argsstring>(AccidentalState *)</argsstring>
        <name>updateAccidental</name>
        <param>
          <type><ref refid="class_ms_1_1_accidental_state" kindref="compound">AccidentalState</ref> *</type>
          <defname>as</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="449" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2041" bodyend="2114"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ae437265e0c8f4a19d786ee2f66ad3723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::updateLine</definition>
        <argsstring>()</argsstring>
        <name>updateLine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="450" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2580" bodyend="2584"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa3894dd233a29852af0a8f8acce3e8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setNval</definition>
        <argsstring>(const NoteVal &amp;, Fraction={ -1, 1})</argsstring>
        <name>setNval</name>
        <param>
          <type>const <ref refid="struct_ms_1_1_note_val" kindref="compound">NoteVal</ref> &amp;</type>
          <defname>nval</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_fraction" kindref="compound">Fraction</ref></type>
          <defname>tick</defname>
          <defval>{ -1, 1}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="451" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2591" bodyend="2619"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4bcf5d2a9e8fc31a5b4c4fffbab51924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note_event_list" kindref="compound">NoteEventList</ref> &amp;</type>
        <definition>NoteEventList&amp; Ms::Note::playEvents</definition>
        <argsstring>()</argsstring>
        <name>playEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="452" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="452" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7f9817aa0fa956d8b132072a358bdadd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_ms_1_1_note_event_list" kindref="compound">NoteEventList</ref> &amp;</type>
        <definition>const NoteEventList&amp; Ms::Note::playEvents</definition>
        <argsstring>() const</argsstring>
        <name>playEvents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="453" column="27" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="453" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1af368bb4900698d8e393dfec1abc7d6e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_ms_1_1_note_event" kindref="compound">NoteEvent</ref> *</type>
        <definition>NoteEvent* Ms::Note::noteEvent</definition>
        <argsstring>(int idx)</argsstring>
        <name>noteEvent</name>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="454" column="17" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="454" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7d3c4850c5f7957394cce53085f83c67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setPlayEvents</definition>
        <argsstring>(const NoteEventList &amp;l)</argsstring>
        <name>setPlayEvents</name>
        <param>
          <type>const <ref refid="class_ms_1_1_note_event_list" kindref="compound">NoteEventList</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="455" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="455" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ad85cf645f375f12d682c28243dedf029" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QVector&lt; <ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> * &gt; &amp;</type>
        <definition>const QVector&lt;Spanner*&gt;&amp; Ms::Note::spannerFor</definition>
        <argsstring>() const</argsstring>
        <name>spannerFor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="457" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="457" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7e2a07630dad78f0911a16be88e16729" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const QVector&lt; <ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> * &gt; &amp;</type>
        <definition>const QVector&lt;Spanner*&gt;&amp; Ms::Note::spannerBack</definition>
        <argsstring>() const</argsstring>
        <name>spannerBack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="458" column="21" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="458" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a867b372fb90830b22bfe0d26d0675138" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::addSpannerBack</definition>
        <argsstring>(Spanner *e)</argsstring>
        <name>addSpannerBack</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="460" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="460" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a97575ef0255cb4b9cde48b6c8730a00f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::removeSpannerBack</definition>
        <argsstring>(Spanner *e)</argsstring>
        <name>removeSpannerBack</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="461" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="461" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a8aabb10d91e08035ebe0f9cbc6d55729" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::addSpannerFor</definition>
        <argsstring>(Spanner *e)</argsstring>
        <name>addSpannerFor</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="462" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="462" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a8079a2be644aa231ba874647bbd871fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::removeSpannerFor</definition>
        <argsstring>(Spanner *e)</argsstring>
        <name>removeSpannerFor</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="463" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="463" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a989f08021238763c558e87e9f7478c67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::transposeDiatonic</definition>
        <argsstring>(int interval, bool keepAlterations, bool useDoubleAccidentals)</argsstring>
        <name>transposeDiatonic</name>
        <param>
          <type>int</type>
          <declname>interval</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepAlterations</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>useDoubleAccidentals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="465" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/transpose.cpp" bodystart="603" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a8d71debd58b03b41e029d3fcc2e6b738" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::localSpatiumChanged</definition>
        <argsstring>(qreal oldValue, qreal newValue) override</argsstring>
        <name>localSpatiumChanged</name>
        <reimplements refid="class_ms_1_1_element_1a904f7cbd2d6c478e10a6e7d7ae9f638d">localSpatiumChanged</reimplements>
        <param>
          <type>qreal</type>
          <declname>oldValue</declname>
        </param>
        <param>
          <type>qreal</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="467" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2625" bodyend="2636"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a5ef1020e6b5b1c13b00650bb61b3353a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Note::getProperty</definition>
        <argsstring>(Pid propertyId) const override</argsstring>
        <name>getProperty</name>
        <reimplements refid="class_ms_1_1_element_1aceaefa5b47ba457d6f2e69c0ce573105">getProperty</reimplements>
        <param>
          <type>Pid</type>
          <declname>propertyId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="468" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2642" bodyend="2685"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a0adf97c9436679e94904fca3747f457a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Ms::Note::setProperty</definition>
        <argsstring>(Pid propertyId, const QVariant &amp;) override</argsstring>
        <name>setProperty</name>
        <reimplements refid="class_ms_1_1_element_1af276960f1e28fd18438752eb19895ace">setProperty</reimplements>
        <param>
          <type>Pid</type>
          <declname>propertyId</declname>
        </param>
        <param>
          <type>const QVariant &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="469" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2691" bodyend="2768"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a1ac8f50276ebf2cf823f1613672f38a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::undoChangeDotsVisible</definition>
        <argsstring>(bool v)</argsstring>
        <name>undoChangeDotsVisible</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="470" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2774" bodyend="2778"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7ead9c27b80ad9efe77e4c1b6f4f74ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QVariant</type>
        <definition>QVariant Ms::Note::propertyDefault</definition>
        <argsstring>(Pid) const override</argsstring>
        <name>propertyDefault</name>
        <reimplements refid="class_ms_1_1_element_1a3662edfaf353472183a54466eb5749ae">propertyDefault</reimplements>
        <param>
          <type>Pid</type>
          <defname>propertyId</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="471" column="16" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2784" bodyend="2822"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7e3548fe47c8fcd99784d93f527e7449" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::Note::propertyUserValue</definition>
        <argsstring>(Pid) const override</argsstring>
        <name>propertyUserValue</name>
        <reimplements refid="class_ms_1_1_element_1a01a8b01010e449fb1530dd27805ed042">propertyUserValue</reimplements>
        <param>
          <type>Pid</type>
          <defname>pid</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="472" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2828" bodyend="2843"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1af4d2a7dbde350f65fb2c4722e45f3c65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::mark</definition>
        <argsstring>() const</argsstring>
        <name>mark</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="474" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="474" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a828f3bc7dec6aa94dbb302d4fd5f94b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setMark</definition>
        <argsstring>(bool v) const</argsstring>
        <name>setMark</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="475" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="475" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a2e8e367c5cd6bc24fd8e81ba7fc0db04" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::setScore</definition>
        <argsstring>(Score *s) override</argsstring>
        <name>setScore</name>
        <reimplements refid="class_ms_1_1_score_element_1a6a1e59c49777e28459d2270981fc97df">setScore</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_score" kindref="compound">Score</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="476" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2878" bodyend="2889"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aad21335a2a9a90b9d623bbf3d55f747a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setDotY</definition>
        <argsstring>(Direction)</argsstring>
        <name>setDotY</name>
        <param>
          <type><ref refid="namespace_ms_1a4ddd02afd2f797a6a269ddce7466a4d6" kindref="member">Direction</ref></type>
          <defname>pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="477" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1839" bodyend="1903"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a7f20131afc3681704bdb4d74217a27a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::addParentheses</definition>
        <argsstring>()</argsstring>
        <name>addParentheses</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="479" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1823" bodyend="1833"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ac79b136dce8b0d5507183a5b1e4ab24a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_ms_1_1_note_val" kindref="compound">NoteVal</ref></type>
        <definition>NoteVal Ms::Note::noteVal</definition>
        <argsstring>() const</argsstring>
        <name>noteVal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="483" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2984" bodyend="2994"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a06be5bd1b14beb2b0f254c868a454426" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Note::nextInEl</definition>
        <argsstring>(Element *e)</argsstring>
        <name>nextInEl</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="485" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3020" bodyend="3028"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa31925d7ae878f41f0dfb2e30eedc272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Note::prevInEl</definition>
        <argsstring>(Element *e)</argsstring>
        <name>prevInEl</name>
        <param>
          <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="486" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3035" bodyend="3043"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a88cbb62e6321704dd1fa30418a80c6f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Note::nextElement</definition>
        <argsstring>() override</argsstring>
        <name>nextElement</name>
        <reimplements refid="class_ms_1_1_element_1a81092ae7891eb2ac2d43d6fe86e1e749">nextElement</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="487" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3054" bodyend="3120"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a2858b4669f72ef90bda741577512630d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Note::prevElement</definition>
        <argsstring>() override</argsstring>
        <name>prevElement</name>
        <reimplements refid="class_ms_1_1_element_1ad48ce06a988e98b0da7d4cf1e6f56ded">prevElement</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="488" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3126" bodyend="3157"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a80ed0f7976fe33bbb8c4ccef2a28226d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Note::lastElementBeforeSegment</definition>
        <argsstring>()</argsstring>
        <name>lastElementBeforeSegment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="489" column="23" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3163" bodyend="3176"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6a719883605e3aeb917d1abadad69be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Note::nextSegmentElement</definition>
        <argsstring>() override</argsstring>
        <name>nextSegmentElement</name>
        <reimplements refid="class_ms_1_1_element_1ad5e377ed9b055434956aa3ee92a3b3a9">nextSegmentElement</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="490" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3182" bodyend="3192"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aa0206318ceb66ea623b67e06d0490313" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_element" kindref="compound">Element</ref> *</type>
        <definition>Element * Ms::Note::prevSegmentElement</definition>
        <argsstring>() override</argsstring>
        <name>prevSegmentElement</name>
        <reimplements refid="class_ms_1_1_element_1a31599e271170912967669cfddd1e49b4">prevSegmentElement</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="491" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3198" bodyend="3208"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a56844d01515ba2fb1653905f67c4409d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::Note::accessibleInfo</definition>
        <argsstring>() const override</argsstring>
        <name>accessibleInfo</name>
        <reimplements refid="class_ms_1_1_element_1a249d3763ecc760841d71c305004d4c93">accessibleInfo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="493" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2895" bodyend="2910"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a46131100645d38530a6184cd57f50533" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::Note::screenReaderInfo</definition>
        <argsstring>() const override</argsstring>
        <name>screenReaderInfo</name>
        <reimplements refid="class_ms_1_1_element_1a965327598f61fdc8b3b8f4160dfa13c8">screenReaderInfo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="494" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2916" bodyend="2933"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a9f44b542af9798643b1a1384e8a95d49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString Ms::Note::accessibleExtraInfo</definition>
        <argsstring>() const override</argsstring>
        <name>accessibleExtraInfo</name>
        <reimplements refid="class_ms_1_1_element_1ad28416b7cf27aad952ff9e872284ee54">accessibleExtraInfo</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="495" column="15" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2939" bodyend="2978"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a5b077f0c68de7584562198eb28e926b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_ms_1_1_shape" kindref="compound">Shape</ref></type>
        <definition>Shape Ms::Note::shape</definition>
        <argsstring>() const override</argsstring>
        <name>shape</name>
        <reimplements refid="class_ms_1_1_element_1ad46a1fa8985b3d3897101b295a7a5d3e">shape</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="497" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3341" bodyend="3373"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1aebcc3e7025d9c2e4e562d09ed47ca9f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_ms_1_1_note" kindref="compound">Note</ref> * &gt;</type>
        <definition>std::vector&lt; Note * &gt; Ms::Note::tiedNotes</definition>
        <argsstring>() const</argsstring>
        <name>tiedNotes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="498" column="19" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="3254" bodyend="3268"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a6b44e75ac319c432033770dd49758c53" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setOffTimeType</definition>
        <argsstring>(int v)</argsstring>
        <name>setOffTimeType</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="500" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="500" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a043785eb081da4bc4a7c10bce41b6dad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::setOnTimeType</definition>
        <argsstring>(int v)</argsstring>
        <name>setOnTimeType</name>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="501" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="501" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a96a70c6acc6727cfb5898df5c0d70299" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::offTimeType</definition>
        <argsstring>() const</argsstring>
        <name>offTimeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="502" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="502" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ab8887dc08a845b1423315cbcd54c86f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::onTimeType</definition>
        <argsstring>() const</argsstring>
        <name>onTimeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="503" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="503" bodyend="503"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ms_1_1_note_1a8711aee69fd66d84c136af3dc2ce65a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::startDrag</definition>
        <argsstring>(EditData &amp;) override</argsstring>
        <name>startDrag</name>
        <reimplements refid="class_ms_1_1_element_1a7d1a4797b0aba5b63dbf254429d5fc5e">startDrag</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <defname>ed</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="272" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2335" bodyend="2348"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a607835b743c8d7de75daa7278047931d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>QRectF</type>
        <definition>QRectF Ms::Note::drag</definition>
        <argsstring>(EditData &amp;ed) override</argsstring>
        <name>drag</name>
        <reimplements refid="class_ms_1_1_element_1ad4d4351606adf92e9628dd7a85825ecb">drag</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <defname>ed</defname>
        </param>
        <briefdescription>
<para>Return update <ref refid="class_ms_1_1_rect" kindref="compound">Rect</ref> relative to canvas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="273" column="14" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2354" bodyend="2374"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1acd9bd3482e49ef6518644146d4dbfda8" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::endDrag</definition>
        <argsstring>(EditData &amp;) override</argsstring>
        <name>endDrag</name>
        <reimplements refid="class_ms_1_1_element_1abf57779ffc58ab9be91ff9376bb4b8c3">endDrag</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <defname>ed</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="274" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2380" bodyend="2392"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a571d2f7a27afdbdab1c57d485065e543" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Ms::Note::editDrag</definition>
        <argsstring>(EditData &amp;editData) override</argsstring>
        <name>editDrag</name>
        <reimplements refid="class_ms_1_1_element_1aebe5668ebea4eb253a203211eb6beb12">editDrag</reimplements>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <declname>editData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="275" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2398" bodyend="2412"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a66f3fbc1730daf42898712e32bffb4b3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::verticalDrag</definition>
        <argsstring>(EditData &amp;ed)</argsstring>
        <name>verticalDrag</name>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <declname>ed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="277" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2418" bodyend="2467"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a37ff6a3975ac4045d7656effc15a332a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::horizontalDrag</definition>
        <argsstring>(EditData &amp;ed)</argsstring>
        <name>horizontalDrag</name>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <declname>ed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="278" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2506" bodyend="2532"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a0cfa0c78da5a844a9b5d71d9e8a837df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::addSpanner</definition>
        <argsstring>(Spanner *)</argsstring>
        <name>addSpanner</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <defname>l</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="280" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="969" bodyend="979"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ae650f7395c0fbbca340293e2b7ddfa96" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::removeSpanner</definition>
        <argsstring>(Spanner *)</argsstring>
        <name>removeSpanner</name>
        <param>
          <type><ref refid="class_ms_1_1_spanner" kindref="compound">Spanner</ref> *</type>
          <defname>l</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="281" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="985" bodyend="1000"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a8567ebf27f8b6f0a8add75ea8721014f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Ms::Note::concertPitchIdx</definition>
        <argsstring>() const</argsstring>
        <name>concertPitchIdx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="282" column="11" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="631" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a3badb8b278cbde49d5dab0fc62362f82" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::updateRelLine</definition>
        <argsstring>(int relLine, bool undoable)</argsstring>
        <name>updateRelLine</name>
        <param>
          <type>int</type>
          <declname>relLine</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>undoable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="283" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2540" bodyend="2574"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a0982bf4d8dbfb0e7c078bf7ae73e5955" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Ms::Note::isNoteName</definition>
        <argsstring>() const</argsstring>
        <name>isNoteName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="284" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="1092" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a4d3ebffc692e780226d816e6ce212582" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SymId</type>
        <definition>SymId Ms::Note::noteHead</definition>
        <argsstring>() const</argsstring>
        <name>noteHead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="285" column="13" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="797" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1ad773e3ee2589d5e8742f431ded6ed4fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Ms::Note::normalizeLeftDragDelta</definition>
        <argsstring>(Segment *seg, EditData &amp;ed, NoteEditData *ned)</argsstring>
        <name>normalizeLeftDragDelta</name>
        <param>
          <type><ref refid="class_ms_1_1_segment" kindref="compound">Segment</ref> *</type>
          <declname>seg</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_edit_data" kindref="compound">EditData</ref> &amp;</type>
          <declname>ed</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_note_edit_data" kindref="compound">NoteEditData</ref> *</type>
          <declname>ned</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="287" column="12" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="2473" bodyend="2500"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ms_1_1_note_1ac618e1fc375ebd6c5abcb15d4d97468a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SymId</type>
        <definition>SymId Ms::Note::noteHead</definition>
        <argsstring>(int direction, NoteHead::Group, NoteHead::Type, int tpc, Key key, NoteHeadScheme scheme)</argsstring>
        <name>noteHead</name>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_note_head_1a1d3e8faf3d3bc1d89d9d3485acde69d1" kindref="member">NoteHead::Group</ref></type>
          <defname>group</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_note_head_1a31c343e7e7f09fee0246ef6a1d7a4e87" kindref="member">NoteHead::Type</ref></type>
          <defname>t</defname>
        </param>
        <param>
          <type>int</type>
          <declname>tpc</declname>
        </param>
        <param>
          <type>Key</type>
          <declname>key</declname>
        </param>
        <param>
          <type>NoteHeadScheme</type>
          <declname>scheme</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="481" column="20" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="372" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="class_ms_1_1_note_1a2d5aa211d9b5f1c88c782c19f47eb2d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SymId</type>
        <definition>SymId Ms::Note::noteHead</definition>
        <argsstring>(int direction, NoteHead::Group, NoteHead::Type)</argsstring>
        <name>noteHead</name>
        <param>
          <type>int</type>
          <declname>direction</declname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_note_head_1a1d3e8faf3d3bc1d89d9d3485acde69d1" kindref="member">NoteHead::Group</ref></type>
          <defname>group</defname>
        </param>
        <param>
          <type><ref refid="class_ms_1_1_note_head_1a31c343e7e7f09fee0246ef6a1d7a4e87" kindref="member">NoteHead::Type</ref></type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="482" column="20" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.cpp" bodystart="367" bodyend="370"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Graphic representation of a note. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
      </node>
      <node id="2">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ms::Note</label>
        <link refid="class_ms_1_1_note"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>QList&lt; ScoreElement * &gt;</label>
      </node>
      <node id="3">
        <label>Ms::ScoreElement</label>
        <link refid="class_ms_1_1_score_element"/>
        <childnode refid="4" relation="usage">
          <edgelabel>_links</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>Ms::LinkedElements</label>
        <link refid="class_ms_1_1_linked_elements"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Ms::Element</label>
        <link refid="class_ms_1_1_element"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Ms::Note</label>
        <link refid="class_ms_1_1_note"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" line="212" column="26" bodyfile="C:/Users/main/Documents/GitHub/MuseScore/libmscore/note.h" bodystart="212" bodyend="504"/>
    <listofallmembers>
      <member refid="class_ms_1_1_note_1a597602b9ffd059e6b7c2fbc1fcfd7797" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_accidental</name></member>
      <member refid="class_ms_1_1_note_1a615250548dae7ba405d28e9f4cceb854" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_cachedNoteheadSym</name></member>
      <member refid="class_ms_1_1_note_1a08704b5cf213dac48dcb931eb977a921" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_cachedSymNull</name></member>
      <member refid="class_ms_1_1_element_1a85687d7e7b049c00327023c7306cec14" prot="protected" virt="non-virtual"><scope>Ms::Note</scope><name>_color</name></member>
      <member refid="class_ms_1_1_note_1a2bf149d5bc5af363e906b153f0c03427" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_dots</name></member>
      <member refid="class_ms_1_1_note_1a17fc157c47cfe59de8d7f1e97f329a07" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_dotsHidden</name></member>
      <member refid="class_ms_1_1_note_1ac44ce739c66738ccf39400b3bcec1779" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_el</name></member>
      <member refid="class_ms_1_1_score_element_1a648639a58d05aa85412217db5ad40b18" prot="protected" virt="non-virtual"><scope>Ms::Note</scope><name>_elementStyle</name></member>
      <member refid="class_ms_1_1_note_1a04bba74ed82341263118eef81023c267" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_fixed</name></member>
      <member refid="class_ms_1_1_note_1a26a2d926c5c73a76d137c3dee4c7918c" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_fixedLine</name></member>
      <member refid="class_ms_1_1_note_1ada115f349c9b2a257d3e2b2a12c728b1" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_fret</name></member>
      <member refid="class_ms_1_1_note_1a7d8cb073406dbebf247cfb719d894ad5" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_fretConflict</name></member>
      <member refid="class_ms_1_1_note_1a8e4480ba16d14c2db128abfb26f4c803" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_fretString</name></member>
      <member refid="class_ms_1_1_note_1a82f89769c154f7c0402f4d4c9b269d1e" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_ghost</name></member>
      <member refid="class_ms_1_1_note_1abb107077f537236863845be58c215c26" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_headGroup</name></member>
      <member refid="class_ms_1_1_note_1a195f2d7fa451c942ae263ac99d480bc6" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_headType</name></member>
      <member refid="class_ms_1_1_note_1a838190bc6bf3491829701b5bdb7f0088" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_hidden</name></member>
      <member refid="class_ms_1_1_note_1ab406438ffdcc3ad93a3128accffb7204" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_line</name></member>
      <member refid="class_ms_1_1_score_element_1a405b151c60a010237414678a0e0952af" prot="protected" virt="non-virtual"><scope>Ms::Note</scope><name>_links</name></member>
      <member refid="class_ms_1_1_note_1a4f8593e1c659928ef4f274ec327b78ef" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_mark</name></member>
      <member refid="class_ms_1_1_note_1aef7648ca764fb321324ad95ccc16ad5a" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_mirror</name></member>
      <member refid="class_ms_1_1_element_1a24960cc1b17ecdef26c9e2e51f8778f4" prot="public" virt="virtual"><scope>Ms::Note</scope><name>_name</name></member>
      <member refid="class_ms_1_1_note_1a70060efe52a1a865f771b212438012e3" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_offTimeType</name></member>
      <member refid="class_ms_1_1_note_1a4f9662c3267871ef634350f227113366" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_onTimeType</name></member>
      <member refid="class_ms_1_1_note_1a7ef842fb7bb6b58a00f840e9c05d6232" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_pitch</name></member>
      <member refid="class_ms_1_1_note_1ad9437fea23d3c6711ceaa85bdf3f823a" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_play</name></member>
      <member refid="class_ms_1_1_note_1a03df1d32ad63e5253451e83c0c442211" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_playEvents</name></member>
      <member refid="class_ms_1_1_score_element_1a6d4b99ddb9e217aaa9f9ae67a76861f3" prot="protected" virt="non-virtual"><scope>Ms::Note</scope><name>_propertyFlagsList</name></member>
      <member refid="class_ms_1_1_note_1a4a2597033cecac77f32e7ca8921a19a5" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_small</name></member>
      <member refid="class_ms_1_1_note_1a14c6af19f806b818197a070ccfb19749" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_spannerBack</name></member>
      <member refid="class_ms_1_1_note_1a108c5485b9fe6d8fa7f82d0f714acf8d" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_spannerFor</name></member>
      <member refid="class_ms_1_1_note_1a887285eff6aeb02a39c9c94adf65e27f" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_string</name></member>
      <member refid="class_ms_1_1_note_1acb2e0ed7f471e1243485bb66a9596e5a" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_subchannel</name></member>
      <member refid="class_ms_1_1_note_1a6e9ea12265eedeabeaeb5f90fedaa54b" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_tieBack</name></member>
      <member refid="class_ms_1_1_note_1a627c405c1785b66c46fe7d6cf9c0b3c2" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_tieFor</name></member>
      <member refid="class_ms_1_1_note_1a3f76ec52c413e52e650d7c2b9c669903" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_tpc</name></member>
      <member refid="class_ms_1_1_note_1ae9b4f2292c0d4618bff0cf433da7fabc" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_tuning</name></member>
      <member refid="class_ms_1_1_note_1a9bd59650e101cb8ad4249d2841322386" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_userDotPosition</name></member>
      <member refid="class_ms_1_1_note_1ac1d1c05d4511c61a3f172f44d928e4bf" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_userMirror</name></member>
      <member refid="class_ms_1_1_note_1a7c7786e2364892ac38620ca2475a71f9" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_veloOffset</name></member>
      <member refid="class_ms_1_1_note_1a00cdcb93f6008ce07eb6f6e1dc99dd1c" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>_veloType</name></member>
      <member refid="class_ms_1_1_element_1a833151435bfcef81ea589f9e8fc3154b" prot="protected" virt="non-virtual"><scope>Ms::Note</scope><name>_z</name></member>
      <member refid="class_ms_1_1_element_1ac64eee038c2d81d1ae934be877d8acc5" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>abbox</name></member>
      <member refid="class_ms_1_1_note_1abaffbc8698b96263bb1d9b3f4b69c63e" prot="public" virt="virtual"><scope>Ms::Note</scope><name>acceptDrop</name></member>
      <member refid="class_ms_1_1_note_1a9f44b542af9798643b1a1384e8a95d49" prot="public" virt="virtual"><scope>Ms::Note</scope><name>accessibleExtraInfo</name></member>
      <member refid="class_ms_1_1_note_1a56844d01515ba2fb1653905f67c4409d" prot="public" virt="virtual"><scope>Ms::Note</scope><name>accessibleInfo</name></member>
      <member refid="class_ms_1_1_note_1a39025226e9614de8073a91e82dcbb8ee" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>accidental</name></member>
      <member refid="class_ms_1_1_note_1a7edd98335208a0995062f183ccdf27a1" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>accidentalType</name></member>
      <member refid="class_ms_1_1_note_1a62c2aead455c3d63ec9466b945c6fb5a" prot="public" virt="virtual"><scope>Ms::Note</scope><name>add</name></member>
      <member refid="class_ms_1_1_element_1aeda671935e53857c2dee17b03d68b276" prot="public" virt="virtual"><scope>Ms::Note</scope><name>addbbox</name></member>
      <member refid="class_ms_1_1_note_1a7f20131afc3681704bdb4d74217a27a6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>addParentheses</name></member>
      <member refid="class_ms_1_1_note_1a0cfa0c78da5a844a9b5d71d9e8a837df" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>addSpanner</name></member>
      <member refid="class_ms_1_1_note_1a867b372fb90830b22bfe0d26d0675138" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>addSpannerBack</name></member>
      <member refid="class_ms_1_1_note_1a8aabb10d91e08035ebe0f9cbc6d55729" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>addSpannerFor</name></member>
      <member refid="class_ms_1_1_element_1a6ba0ad4dad0b5de65db725a10fc64278" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>addToSkyline</name></member>
      <member refid="class_ms_1_1_element_1a36da6a07a74436d96c739f7134873eda" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>autoplace</name></member>
      <member refid="class_ms_1_1_element_1ab762a021459424295e46ef909a5ab34f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>autoplaceCalculateOffset</name></member>
      <member refid="class_ms_1_1_element_1a52c2885c7d4e815d5475b1253cc4142f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>autoplaceMeasureElement</name></member>
      <member refid="class_ms_1_1_element_1a59de63838f71ae75bfbbcfd7960b29b5" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>autoplaceMeasureElement</name></member>
      <member refid="class_ms_1_1_element_1ab5518cc652f95d5d64ddd2bd7bfc6f6b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>autoplaceSegmentElement</name></member>
      <member refid="class_ms_1_1_element_1a9446e28a4daa9ab0f785ce06ad0a14ab" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>autoplaceSegmentElement</name></member>
      <member refid="class_ms_1_1_element_1a977f5fd6785ea8b160d6b1943727ec9e" prot="public" virt="virtual"><scope>Ms::Note</scope><name>baseLine</name></member>
      <member refid="class_ms_1_1_element_1adc4d7b66745fbb0335dc73f0c3996994" prot="public" virt="virtual"><scope>Ms::Note</scope><name>bbox</name></member>
      <member refid="class_ms_1_1_element_1a2c5b74dd03d2d523e2318dbb3b15b13e" prot="public" virt="virtual"><scope>Ms::Note</scope><name>bbox</name></member>
      <member refid="class_ms_1_1_note_1ad55c1e54b156996f2b1d211c31eb7df9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>bboxRightPos</name></member>
      <member refid="class_ms_1_1_note_1aa038eaaa0da98e2d9f88b8c9267d0d24" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>bboxXShift</name></member>
      <member refid="class_ms_1_1_element_1a6ca9221d8858907d3063fa58255fb804" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>canvasBoundingRect</name></member>
      <member refid="class_ms_1_1_element_1aafc617f0cd5069a406a83da394b15e53" prot="public" virt="virtual"><scope>Ms::Note</scope><name>canvasPos</name></member>
      <member refid="class_ms_1_1_element_1a60903fed3fd306167c53d86ff3120b3c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>canvasX</name></member>
      <member refid="class_ms_1_1_element_1a6b065b12b8c1a8549b2a5f96394059af" prot="public" virt="virtual"><scope>Ms::Note</scope><name>change</name></member>
      <member refid="class_ms_1_1_note_1ac1fe59b8f92c11fc6b662855fc8d9316" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>chord</name></member>
      <member refid="class_ms_1_1_note_1a7dbb682074b354079e26bdebd317a498" prot="public" virt="virtual"><scope>Ms::Note</scope><name>clone</name></member>
      <member refid="class_ms_1_1_element_1aaf1b495b1a35846de518c268fc856afd" prot="public" virt="virtual"><scope>Ms::Note</scope><name>color</name></member>
      <member refid="class_ms_1_1_element_1af14e8c60099db93425f71d649f064fa7" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>composition</name></member>
      <member refid="class_ms_1_1_element_1a688112ba0053649f6ec94ed4efa19584" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>concertPitch</name></member>
      <member refid="class_ms_1_1_note_1a8567ebf27f8b6f0a8add75ea8721014f" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>concertPitchIdx</name></member>
      <member refid="class_ms_1_1_note_1ae98ee8a14611a1e180507a38bdb6cf7e" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>connectTiedNotes</name></member>
      <member refid="class_ms_1_1_element_1a50e66c130bd475554fef1131c68ee4bb" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>contains</name></member>
      <member refid="class_ms_1_1_element_1a0e94278fa705e7ee020dd9b652d1bced" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>create</name></member>
      <member refid="class_ms_1_1_element_1a9de808f86f2dac5c4f7c4f9adc4d1d69" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a530f7947bf997c03a649c563168dbf12" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a052b0228632c1fa016552be2d3da9c3a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>curColor</name></member>
      <member refid="class_ms_1_1_element_1a3af6a0d223defe966a8d9c3f2b4d531a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>custom</name></member>
      <member refid="class_ms_1_1_note_1afede42365ed2f8a3586db49d9bab5ee3" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>customizeVelocity</name></member>
      <member refid="class_ms_1_1_element_1a1a25d75c3a82ba05999a7443eb40b804" prot="public" virt="virtual"><scope>Ms::Note</scope><name>defaultGrip</name></member>
      <member refid="class_ms_1_1_element_1a29d9f58036c4aa2b86033515187bcf8f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>deleteLater</name></member>
      <member refid="class_ms_1_1_note_1ab44f03e5f7f0e72cccf3be5d218de402" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>disconnectTiedNotes</name></member>
      <member refid="class_ms_1_1_note_1afb3876cd44a8beb14ac32a895c885428" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>dot</name></member>
      <member refid="class_ms_1_1_note_1a256b98dd7bc0bb70cd07038f95a918a5" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>dotIsUp</name></member>
      <member refid="class_ms_1_1_note_1a48f11d8f23219b2595615d501b630bc1" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>dots</name></member>
      <member refid="class_ms_1_1_note_1a87e3d4c6937d4c67bf3df703a07ddb7c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>dots</name></member>
      <member refid="class_ms_1_1_note_1af0075d4ea77f911abe041be7e7d0762a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>dotsHidden</name></member>
      <member refid="class_ms_1_1_note_1a607835b743c8d7de75daa7278047931d" prot="private" virt="virtual"><scope>Ms::Note</scope><name>drag</name></member>
      <member refid="class_ms_1_1_element_1a0250d845ffb8a34508b753bf57a7d407" prot="public" virt="virtual"><scope>Ms::Note</scope><name>dragAnchor</name></member>
      <member refid="class_ms_1_1_note_1a188a78184a7958bbd3fb65deb54f62d4" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>dragMode</name></member>
      <member refid="class_ms_1_1_note_1a6747aad598d4bffa3e99e6a2fd105be6" prot="public" virt="virtual"><scope>Ms::Note</scope><name>draw</name></member>
      <member refid="class_ms_1_1_element_1aea1fcde23f210754997babe67e7c32aa" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>drawAt</name></member>
      <member refid="class_ms_1_1_element_1aeacd589786e73e54e81ba2cc9a812126" prot="public" virt="virtual"><scope>Ms::Note</scope><name>drawEditMode</name></member>
      <member refid="class_ms_1_1_element_1a19be3f786fea6071a0043666dfed093c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>drawSymbol</name></member>
      <member refid="class_ms_1_1_element_1ab46d5de09232cb2f8d3e52de5042eff1" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>drawSymbol</name></member>
      <member refid="class_ms_1_1_element_1a99b748b700ce85d3507a51d5221191f4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>drawSymbols</name></member>
      <member refid="class_ms_1_1_element_1aae2c7e7cfc90cf5e4d34573599c4cfe9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>drawSymbols</name></member>
      <member refid="class_ms_1_1_note_1a2a3d7532f4f1e494c854a30933b223a5" prot="public" virt="virtual"><scope>Ms::Note</scope><name>drop</name></member>
      <member refid="class_ms_1_1_element_1ac8a8ef532022a6618fd7c2827ab9d9e1" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>dropTarget</name></member>
      <member refid="class_ms_1_1_element_1a6392770f67e4c8dee01c324f63d5fcd7" prot="public" virt="virtual"><scope>Ms::Note</scope><name>dump</name></member>
      <member refid="class_ms_1_1_element_1a63a79b1d3f298a5f06fe0548fc4474fc" prot="public" virt="virtual"><scope>Ms::Note</scope><name>edit</name></member>
      <member refid="class_ms_1_1_element_1a81f2c9509ccf414e30594abf843cbde2" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>EditBehavior</name></member>
      <member refid="class_ms_1_1_element_1a4de0afcde56da979d060edebd7bfd003" prot="public" virt="virtual"><scope>Ms::Note</scope><name>editCopy</name></member>
      <member refid="class_ms_1_1_element_1a4f5994e224c19a9f0ac2cdba056be706" prot="public" virt="virtual"><scope>Ms::Note</scope><name>editCut</name></member>
      <member refid="class_ms_1_1_note_1a571d2f7a27afdbdab1c57d485065e543" prot="private" virt="virtual"><scope>Ms::Note</scope><name>editDrag</name></member>
      <member refid="class_ms_1_1_note_1a6003ba6106243f773ea7ae88abe5dc14" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>el</name></member>
      <member refid="class_ms_1_1_note_1a5eb28a79064821baa52310b385df316b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>el</name></member>
      <member refid="class_ms_1_1_element_1a8797b5bb9ed7fd50b89c6ef6b7647d3a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>Element</name></member>
      <member refid="class_ms_1_1_element_1acd09fb62181874c199be863980a23328" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>Element</name></member>
      <member refid="class_ms_1_1_element_1adbcd81f12f80859fdaf2ca1bd24d23d1" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>enabled</name></member>
      <member refid="class_ms_1_1_note_1acd9bd3482e49ef6518644146d4dbfda8" prot="private" virt="virtual"><scope>Ms::Note</scope><name>endDrag</name></member>
      <member refid="class_ms_1_1_element_1a5981873b891a9c965c6fa1714243d7c9" prot="public" virt="virtual"><scope>Ms::Note</scope><name>endEdit</name></member>
      <member refid="class_ms_1_1_element_1a1e189146458d406cd3e7b9d15202a4a1" prot="public" virt="virtual"><scope>Ms::Note</scope><name>endEditDrag</name></member>
      <member refid="class_ms_1_1_note_1a6ac5fa5a532c5ddfa50868d2598b58e9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>epitch</name></member>
      <member refid="class_ms_1_1_element_1a055b451ded2882a908bf0afe180686e6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>findMeasure</name></member>
      <member refid="class_ms_1_1_element_1a7fea3a47fdac9141e2fd743848be28e5" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>findMeasure</name></member>
      <member refid="class_ms_1_1_element_1a68fbdd43b617c755a867ead5bf49d0bd" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>findMeasureBase</name></member>
      <member refid="class_ms_1_1_element_1aa842ceef53b3036fa443670fdfd2dc84" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>findMeasureBase</name></member>
      <member refid="class_ms_1_1_note_1a9fcfa1264a1fdcda670283e4ce5d3684" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>firstTiedNote</name></member>
      <member refid="class_ms_1_1_note_1a4f70ed1ad94787f19a5b90c38df3564e" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>fixed</name></member>
      <member refid="class_ms_1_1_note_1a1846d10eadec6926a9ac6511c3ceda39" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>fixedLine</name></member>
      <member refid="class_ms_1_1_element_1aedd1f66a4881665f277bc30fefe765b2" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>flag</name></member>
      <member refid="class_ms_1_1_note_1ab039a328a1e0be6fce9d9ae2d87a1663" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>fret</name></member>
      <member refid="class_ms_1_1_note_1a22a34a31db73a7057530e42cfe9da0d6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>fretConflict</name></member>
      <member refid="class_ms_1_1_element_1a3679cdb6351e67e9f482fa9a7fb3d466" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>generated</name></member>
      <member refid="class_ms_1_1_note_1a5ef1020e6b5b1c13b00650bb61b3353a" prot="public" virt="virtual"><scope>Ms::Note</scope><name>getProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a5dd171e2eca7de57f28a9bc4430bb12d" prot="protected" virt="virtual"><scope>Ms::Note</scope><name>getPropertyFlagsIdx</name></member>
      <member refid="class_ms_1_1_score_element_1a36d66100b5c6df17eb37f276aaca0454" prot="public" virt="virtual"><scope>Ms::Note</scope><name>getPropertyStyle</name></member>
      <member refid="class_ms_1_1_note_1a5fef47281b49dd98305c30134df717e2" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>ghost</name></member>
      <member refid="class_ms_1_1_element_1a03fc88ee19e2958f2443213af6d5e77d" prot="public" virt="virtual"><scope>Ms::Note</scope><name>gripAnchor</name></member>
      <member refid="class_ms_1_1_element_1ae6ac97922eb884d9f3af307ada91f74a" prot="public" virt="virtual"><scope>Ms::Note</scope><name>gripsCount</name></member>
      <member refid="class_ms_1_1_element_1ac4ac75b1d930639f3ed85d618ab38bdf" prot="public" virt="virtual"><scope>Ms::Note</scope><name>gripsPositions</name></member>
      <member refid="class_ms_1_1_note_1aaa31b11917139c63c6dc4a46f939b95f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>headBodyWidth</name></member>
      <member refid="class_ms_1_1_element_1abb3880878a2f2826b253d5e0e14b32b6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>header</name></member>
      <member refid="class_ms_1_1_note_1aa3ab372fd5e04a1563fe8c7581c5aae7" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>headGroup</name></member>
      <member refid="class_ms_1_1_note_1aebe714f6dc759dbf09ffcda4491952fd" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>headHeight</name></member>
      <member refid="class_ms_1_1_note_1a313b101f15dd05bb416d8e29070b4add" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>headType</name></member>
      <member refid="class_ms_1_1_note_1a43dfad32ea3c1f8e2b56e810cd7bfa6e" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>headWidth</name></member>
      <member refid="class_ms_1_1_element_1a2a8ba8af6817e602c27c154e93542028" prot="public" virt="virtual"><scope>Ms::Note</scope><name>height</name></member>
      <member refid="class_ms_1_1_note_1a185ab0f428111692b22a601be4026991" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>hidden</name></member>
      <member refid="class_ms_1_1_note_1a37ff6a3975ac4045d7656effc15a332a" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>horizontalDrag</name></member>
      <member refid="class_ms_1_1_score_element_1a8deeadfce551a58b1078f1af62c2075d" prot="public" virt="virtual"><scope>Ms::Note</scope><name>initElementStyle</name></member>
      <member refid="class_ms_1_1_element_1a0677d13d1c54b74e3b2154169facfc91" prot="public" virt="virtual"><scope>Ms::Note</scope><name>initialEditModeGrip</name></member>
      <member refid="class_ms_1_1_element_1a77459c7e2f1077ec3b68b11c26640685" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>intersects</name></member>
      <member refid="class_ms_1_1_element_1a5f1d010c61f361c3310fd22cd9f65d88" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>ipos</name></member>
      <member refid="class_ms_1_1_score_element_1a997e1063786d8c705c74b3d66c54f269" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isBox</name></member>
      <member refid="class_ms_1_1_score_element_1ad05261e50a084a0c6c42fced1ca78d8f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isBSymbol</name></member>
      <member refid="class_ms_1_1_score_element_1accef1c91df491a43c54e70474deea60c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isChordRest</name></member>
      <member refid="class_ms_1_1_score_element_1a203290a59b13861b957d2943f65a4cf0" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isDurationElement</name></member>
      <member refid="class_ms_1_1_element_1accef4917f0fce522b94b90a3ccd0f76b" prot="public" virt="virtual"><scope>Ms::Note</scope><name>isEditable</name></member>
      <member refid="class_ms_1_1_element_1a52a39d1aee1e730f3cd399a5714b66f0" prot="public" virt="virtual"><scope>Ms::Note</scope><name>isElement</name></member>
      <member refid="class_ms_1_1_score_element_1a0d5f2d0a979bf52ab2436f6ceb6d9ef6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isLineSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a1d34473f54590e3d8c2a1bc78b560c21" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isLinked</name></member>
      <member refid="class_ms_1_1_score_element_1a06e5d7c169bf6eb01f5f723cbdae973f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isMeasureBase</name></member>
      <member refid="class_ms_1_1_element_1aaad0ef7a078cd5d1659ff7ed9f65582c" prot="public" virt="virtual"><scope>Ms::Note</scope><name>isMovable</name></member>
      <member refid="class_ms_1_1_note_1a0982bf4d8dbfb0e7c078bf7ae73e5955" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>isNoteName</name></member>
      <member refid="class_ms_1_1_element_1a592da9bef8f5ea3c9840931e8db5f6f6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isNudged</name></member>
      <member refid="class_ms_1_1_element_1a8612168f4af9d7a976e1f8c8f6826143" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isPrintable</name></member>
      <member refid="class_ms_1_1_score_element_1a4de90a044cdd2a7030d707f2b081c8a4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isSLine</name></member>
      <member refid="class_ms_1_1_score_element_1acf35020b5e670ac13791697e65b679d4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isSLineSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a372dfc0678c5194028e61b6a9a24ab62" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isSlurTieSegment</name></member>
      <member refid="class_ms_1_1_score_element_1a98f8c58df0f5baafe63414bedf84514f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isSpanner</name></member>
      <member refid="class_ms_1_1_score_element_1a5aa58f96618edb0e3ff660e1c96c5d4e" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isSpannerSegment</name></member>
      <member refid="class_ms_1_1_score_element_1ac009e016c7a3dc148b0aaad50c1c4547" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isStaffTextBase</name></member>
      <member refid="class_ms_1_1_score_element_1a4d0de3ac9401da46c32ed8becb9d496b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isStyled</name></member>
      <member refid="class_ms_1_1_score_element_1a979b6e1bc10cf790e755aa8641feb4cf" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isTextBase</name></member>
      <member refid="class_ms_1_1_score_element_1a7151838e2192a30624d6111dd4c87918" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isTextLineBase</name></member>
      <member refid="class_ms_1_1_score_element_1ab98a731c7adf65cebc23235f9fe150af" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isTextLineBaseSegment</name></member>
      <member refid="class_ms_1_1_element_1aa8c81e3444c2166a739fb31ca1bffe4e" prot="public" virt="virtual"><scope>Ms::Note</scope><name>isUserModified</name></member>
      <member refid="class_ms_1_1_score_element_1aac3320320d350a161ed3f9a601160451" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>isVBoxBase</name></member>
      <member refid="class_ms_1_1_element_1a07c3b2ed980bf10d79c377a68f7c500d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>itemDiscovered</name></member>
      <member refid="class_ms_1_1_note_1a80ed0f7976fe33bbb8c4ccef2a28226d" prot="public" virt="virtual"><scope>Ms::Note</scope><name>lastElementBeforeSegment</name></member>
      <member refid="class_ms_1_1_note_1a3b880abc62dd56f7b6ee5dfb196af73b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>lastTiedNote</name></member>
      <member refid="class_ms_1_1_note_1abf18b583e65f7c2b0f4fd9dc2acd34e9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>lastTiedNote</name></member>
      <member refid="class_ms_1_1_note_1a4d6e2aef9a0ba5beadef86d36f15367d" prot="public" virt="virtual"><scope>Ms::Note</scope><name>layout</name></member>
      <member refid="class_ms_1_1_note_1a4f229d667261862d0b69981712fee621" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>layout2</name></member>
      <member refid="class_ms_1_1_score_element_1ad9b69df1d2c04f2b298520bb649a8c55" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>lid</name></member>
      <member refid="class_ms_1_1_note_1ac65a5e366eda7035626fb167e4a22ff7" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>line</name></member>
      <member refid="class_ms_1_1_element_1ab6aade6de785c3ad52c1ed1dadcfcd9f" prot="public" virt="virtual"><scope>Ms::Note</scope><name>linkedClone</name></member>
      <member refid="class_ms_1_1_score_element_1a2f0ed55c566c19cb483d77250cb52450" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>linkList</name></member>
      <member refid="class_ms_1_1_score_element_1a3d5c97191484848b3f10e754246f8758" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>links</name></member>
      <member refid="class_ms_1_1_score_element_1a1dad93f0591eb31f69854e8f141b051e" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>linkTo</name></member>
      <member refid="class_ms_1_1_note_1a8d71debd58b03b41e029d3fcc2e6b738" prot="public" virt="virtual"><scope>Ms::Note</scope><name>localSpatiumChanged</name></member>
      <member refid="class_ms_1_1_note_1a034175a24b61e44fd6109b6572bc4237" prot="public" virt="virtual"><scope>Ms::Note</scope><name>mag</name></member>
      <member refid="class_ms_1_1_element_1a7d8e2560e3ab7d216656bf79ecff7ae8" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>magS</name></member>
      <member refid="class_ms_1_1_note_1af4d2a7dbde350f65fb2c4722e45f3c65" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>mark</name></member>
      <member refid="class_ms_1_1_score_element_1ae4991aaf0d79271cc347530f3d07fcd6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>masterScore</name></member>
      <member refid="class_ms_1_1_element_1a90f21ba358732f3c471069758d84a76f" prot="public" virt="virtual"><scope>Ms::Note</scope><name>mimeData</name></member>
      <member refid="class_ms_1_1_element_1a00b370d217141ef8efe9d32b1f737ce8" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>minDistance</name></member>
      <member refid="class_ms_1_1_note_1a015e1e0a27a32eef6070e3fc45a682fe" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>mirror</name></member>
      <member refid="class_ms_1_1_element_1a76367db103b54a315bfcfcbb9e58b3ab" prot="public" virt="virtual"><scope>Ms::Note</scope><name>mousePress</name></member>
      <member refid="class_ms_1_1_element_1acee1036e1efc8c4142fdf980d37b5745" prot="public" virt="virtual"><scope>Ms::Note</scope><name>move</name></member>
      <member refid="class_ms_1_1_score_element_1ad80dda73306d6b784b0cac4626f797d4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>name</name></member>
      <member refid="class_ms_1_1_score_element_1ab6ded8e7ff6dcb45db0036a57f9f9d26" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>name</name></member>
      <member refid="class_ms_1_1_element_1a3b88a2b00074559aad9b8948eaf07a6f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>name2Element</name></member>
      <member refid="class_ms_1_1_score_element_1a971f91737e74571d6e4b6bb78f56e1dc" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>name2type</name></member>
      <member refid="class_ms_1_1_score_element_1ae41701f68025bc77c26f6db74b452465" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>name2type</name></member>
      <member refid="class_ms_1_1_note_1a88cbb62e6321704dd1fa30418a80c6f9" prot="public" virt="virtual"><scope>Ms::Note</scope><name>nextElement</name></member>
      <member refid="class_ms_1_1_element_1ab9a5b8bfe46bc3cf604635a2689bb343" prot="public" virt="virtual"><scope>Ms::Note</scope><name>nextGrip</name></member>
      <member refid="class_ms_1_1_note_1a06be5bd1b14beb2b0f254c868a454426" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>nextInEl</name></member>
      <member refid="class_ms_1_1_note_1a6a719883605e3aeb917d1abadad69be0" prot="public" virt="virtual"><scope>Ms::Note</scope><name>nextSegmentElement</name></member>
      <member refid="class_ms_1_1_note_1ad773e3ee2589d5e8742f431ded6ed4fb" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>normalizeLeftDragDelta</name></member>
      <member refid="class_ms_1_1_element_1a8da4cf37b6c3f27351f096ec5847d1b6" prot="public" virt="virtual"><scope>Ms::Note</scope><name>normalModeEditBehavior</name></member>
      <member refid="class_ms_1_1_note_1acacaa498757f9823da9fe48345270314" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>Note</name></member>
      <member refid="class_ms_1_1_note_1ae5a10dad9d3449ec193563d6d407113b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>Note</name></member>
      <member refid="class_ms_1_1_note_1af368bb4900698d8e393dfec1abc7d6e6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>noteEvent</name></member>
      <member refid="class_ms_1_1_note_1a4d3ebffc692e780226d816e6ce212582" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>noteHead</name></member>
      <member refid="class_ms_1_1_note_1ac618e1fc375ebd6c5abcb15d4d97468a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>noteHead</name></member>
      <member refid="class_ms_1_1_note_1a2d5aa211d9b5f1c88c782c19f47eb2d9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>noteHead</name></member>
      <member refid="class_ms_1_1_note_1ac66fa59296b4aafe704d271383c67b50" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>noteheadCenterX</name></member>
      <member refid="class_ms_1_1_note_1a81e05b2d7fcba75ead327cac571a2cae" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>noteType</name></member>
      <member refid="class_ms_1_1_note_1a1a69d75873b1f26d2604cc047fb4855b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>noteTypeUserName</name></member>
      <member refid="class_ms_1_1_note_1ac79b136dce8b0d5507183a5b1e4ab24a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>noteVal</name></member>
      <member refid="class_ms_1_1_element_1a2ba48a5bec00a30fe829a9e6e477d1d0" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>offset</name></member>
      <member refid="class_ms_1_1_element_1ad6648a1f597c54d30aa6418dcd4ff64c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>offsetChanged</name></member>
      <member refid="class_ms_1_1_note_1a96a70c6acc6727cfb5898df5c0d70299" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>offTimeType</name></member>
      <member refid="class_ms_1_1_note_1ab8887dc08a845b1423315cbcd54c86f0" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>onTimeType</name></member>
      <member refid="class_ms_1_1_note_1a1795a2af91473808e29b1e088ba4f696" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>operator=</name></member>
      <member refid="class_ms_1_1_element_1a77e9d09289e5df2742e8b80c18e6fe14" prot="public" virt="non-virtual" ambiguityscope="Ms::Element::"><scope>Ms::Note</scope><name>operator=</name></member>
      <member refid="class_ms_1_1_note_1a647e0387202ca0459a9f823dccd62719" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>ottaveCapoFret</name></member>
      <member refid="class_ms_1_1_element_1a97c6426acf5bd7303aef532c1d95f105" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>pageBoundingRect</name></member>
      <member refid="class_ms_1_1_element_1a06cc027fe14db0cf896f02931356ae24" prot="public" virt="virtual"><scope>Ms::Note</scope><name>pagePos</name></member>
      <member refid="class_ms_1_1_element_1afbc508a91ce6aa696f2f6e33bd350bd8" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>pageX</name></member>
      <member refid="class_ms_1_1_element_1a52b30fdd589beba5b760a561a50ac601" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>parent</name></member>
      <member refid="class_ms_1_1_element_1a0049832d4191b3ce02446efa09127610" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>part</name></member>
      <member refid="class_ms_1_1_note_1a4fc3ac51c0e748364e264b60c422ded3" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>physicalLine</name></member>
      <member refid="class_ms_1_1_note_1adb609dbbd1f11ba96c09c01d49fa63bd" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>pitch</name></member>
      <member refid="class_ms_1_1_element_1a8ba22391443270db0f91a3164c457d1e" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>placeAbove</name></member>
      <member refid="class_ms_1_1_element_1a50092b502c319cb696998f24fc038695" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>placeBelow</name></member>
      <member refid="class_ms_1_1_element_1a951493711a51487f7f3c1786703b1a20" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>placement</name></member>
      <member refid="class_ms_1_1_element_1a59da7ad9fd3194d87120ecca6e7ebc75" prot="public" virt="virtual"><scope>Ms::Note</scope><name>placeMultiple</name></member>
      <member refid="class_ms_1_1_note_1aa03c04b98ca671fbac3c7235c8e63d06" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>play</name></member>
      <member refid="class_ms_1_1_note_1a4bcf5d2a9e8fc31a5b4c4fffbab51924" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>playEvents</name></member>
      <member refid="class_ms_1_1_note_1a7f9817aa0fa956d8b132072a358bdadd" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>playEvents</name></member>
      <member refid="class_ms_1_1_note_1ab2e6541958f8118eaff62baa58ec3307" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>playTicks</name></member>
      <member refid="class_ms_1_1_element_1aa1bfaad0745fdce188743b73821e0692" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>point</name></member>
      <member refid="class_ms_1_1_element_1a19157e811d0d2a0e3c94dc844039ba2f" prot="public" virt="virtual"><scope>Ms::Note</scope><name>pos</name></member>
      <member refid="class_ms_1_1_note_1a4931518c8ec3e9bf6c4a7269f3d3295d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>ppitch</name></member>
      <member refid="class_ms_1_1_note_1a2858b4669f72ef90bda741577512630d" prot="public" virt="virtual"><scope>Ms::Note</scope><name>prevElement</name></member>
      <member refid="class_ms_1_1_element_1ade142ed940c21dfcd893bb8fd42c97ca" prot="public" virt="virtual"><scope>Ms::Note</scope><name>prevGrip</name></member>
      <member refid="class_ms_1_1_note_1aa31925d7ae878f41f0dfb2e30eedc272" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>prevInEl</name></member>
      <member refid="class_ms_1_1_note_1aa0206318ceb66ea623b67e06d0490313" prot="public" virt="virtual"><scope>Ms::Note</scope><name>prevSegmentElement</name></member>
      <member refid="class_ms_1_1_note_1a7ead9c27b80ad9efe77e4c1b6f4f74ce" prot="public" virt="virtual"><scope>Ms::Note</scope><name>propertyDefault</name></member>
      <member refid="class_ms_1_1_score_element_1aaae0b7999568ce64245a5cf995af62b5" prot="public" virt="non-virtual" ambiguityscope="Ms::ScoreElement::"><scope>Ms::Note</scope><name>propertyDefault</name></member>
      <member refid="class_ms_1_1_element_1a7450fdfe3875f10243ae5a97883f9d34" prot="public" virt="virtual"><scope>Ms::Note</scope><name>propertyDelegate</name></member>
      <member refid="class_ms_1_1_score_element_1a9b9c00757c23cba103638b4ab63df03e" prot="public" virt="virtual"><scope>Ms::Note</scope><name>propertyFlags</name></member>
      <member refid="class_ms_1_1_score_element_1ab00670f7d8229c14090cc3d7376d2202" prot="public" virt="virtual"><scope>Ms::Note</scope><name>propertyFlagsList</name></member>
      <member refid="class_ms_1_1_element_1a44c16323c852e23c783b8d7362cc9c6a" prot="public" virt="virtual"><scope>Ms::Note</scope><name>propertyId</name></member>
      <member refid="class_ms_1_1_note_1a7e3548fe47c8fcd99784d93f527e7449" prot="public" virt="virtual"><scope>Ms::Note</scope><name>propertyUserValue</name></member>
      <member refid="class_ms_1_1_note_1af8b520d09a5ffaf46b74040a61eb4546" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>Q_ENUM</name></member>
      <member refid="class_ms_1_1_note_1abb36d80d537ebc0ff5247c022901dd2d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>qmlDotsCount</name></member>
      <member refid="class_ms_1_1_note_1a34fcc408905091e3b2cb6d74720585a0" prot="public" virt="virtual"><scope>Ms::Note</scope><name>read</name></member>
      <member refid="class_ms_1_1_note_1abadcf3844d0f3c131aab2465d62857f7" prot="public" virt="virtual"><scope>Ms::Note</scope><name>readAddConnector</name></member>
      <member refid="class_ms_1_1_element_1a0d7df07df85c18fd01d52efed33a2034" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>readMimeData</name></member>
      <member refid="class_ms_1_1_note_1a2c2428a09b9f1ef9d9f4fcea27629990" prot="public" virt="virtual"><scope>Ms::Note</scope><name>readProperties</name></member>
      <member refid="class_ms_1_1_score_element_1a8b3be86196659c2e0fb6ed86256cb0fe" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>readProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a473e639853dd8adc607a5c2a63c6d4ad" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>readProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a053d7512b54eaa787bcef0eba427a76f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>readStyledProperty</name></member>
      <member refid="class_ms_1_1_element_1a4422ccd59c2a9759591e15e290d3afdb" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>readType</name></member>
      <member refid="class_ms_1_1_element_1affddbd300aaeca46a5dc8eaf9ef44849" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>rebaseMinDistance</name></member>
      <member refid="class_ms_1_1_element_1a0d9b98767134ff6a72d5ad910fd52e7a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>rebaseOffset</name></member>
      <member refid="class_ms_1_1_note_1a31dc7f8793a43c1d1e3d0a06521f5c98" prot="public" virt="virtual"><scope>Ms::Note</scope><name>remove</name></member>
      <member refid="class_ms_1_1_note_1ae650f7395c0fbbca340293e2b7ddfa96" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>removeSpanner</name></member>
      <member refid="class_ms_1_1_note_1a97575ef0255cb4b9cde48b6c8730a00f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>removeSpannerBack</name></member>
      <member refid="class_ms_1_1_note_1a8079a2be644aa231ba874647bbd871fd" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>removeSpannerFor</name></member>
      <member refid="class_ms_1_1_note_1a519f62ae4063f2a55e74967a74eb8859" prot="public" virt="virtual"><scope>Ms::Note</scope><name>reset</name></member>
      <member refid="class_ms_1_1_score_element_1a8f3e233ff30279756578c751c0ea3e17" prot="public" virt="virtual"><scope>Ms::Note</scope><name>resetProperty</name></member>
      <member refid="class_ms_1_1_element_1a7d61fcd7dc55027f4f356101b2c0f3bf" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>roffset</name></member>
      <member refid="class_ms_1_1_element_1aa637afe72e7a1f186b6e9bcb2b26fa78" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>rpos</name></member>
      <member refid="class_ms_1_1_element_1ad4608ce52672a6b42930af320d9de2ef" prot="public" virt="virtual"><scope>Ms::Note</scope><name>rtick</name></member>
      <member refid="class_ms_1_1_element_1aa521acf22e0820ab42a7ab43c08fa57f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>rxoffset</name></member>
      <member refid="class_ms_1_1_element_1a6a063f005375c9b61c53cf49ebc14623" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>rxpos</name></member>
      <member refid="class_ms_1_1_element_1a8f60347a3bda60cf2db952b9dc6332ab" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>ryoffset</name></member>
      <member refid="class_ms_1_1_element_1a1397cfb5140978e6cd9aa294ade7d738" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>rypos</name></member>
      <member refid="class_ms_1_1_note_1a98c9b971a778805acb01a61cb0e1c9d7" prot="public" virt="virtual"><scope>Ms::Note</scope><name>scanElements</name></member>
      <member refid="class_ms_1_1_score_element_1a70883d048b0884821ac779d9ab168151" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>score</name></member>
      <member refid="class_ms_1_1_score_element_1a3fed4ec5f58054eb578ff9c7bb80d72f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_score_element_1ac2b2cb70fe954ba2b1cce6d35743edf2" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>ScoreElement</name></member>
      <member refid="class_ms_1_1_note_1a46131100645d38530a6184cd57f50533" prot="public" virt="virtual"><scope>Ms::Note</scope><name>screenReaderInfo</name></member>
      <member refid="class_ms_1_1_element_1a7b4ff51eff905fed21705445958253c1" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>selectable</name></member>
      <member refid="class_ms_1_1_element_1ae4f2f3a774def87e608afd55ef29b3e9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>selected</name></member>
      <member refid="class_ms_1_1_note_1a94a1df4d90e182eeb81cc704f32b6eb6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setAccidental</name></member>
      <member refid="class_ms_1_1_note_1aca3299f0339ff9ffdfea8045569fc16b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setAccidentalType</name></member>
      <member refid="class_ms_1_1_element_1a7b231391a59527cb00b7f08bb5279e58" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setAutoplace</name></member>
      <member refid="class_ms_1_1_element_1abe5c0aa8e74388b2b6b336dfec469a35" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setbbox</name></member>
      <member refid="class_ms_1_1_note_1ada3eb3d3cc46317caff364457c5a81fc" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setCachedNoteheadSym</name></member>
      <member refid="class_ms_1_1_note_1a4c0e30bba76a1838189fa6ab117122ca" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setChord</name></member>
      <member refid="class_ms_1_1_element_1a22907ac84ae65fb5b6c3bc2b14f3b23c" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setColor</name></member>
      <member refid="class_ms_1_1_element_1aad752b8ae0d976379ee918fd50f9bd0e" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setComposition</name></member>
      <member refid="class_ms_1_1_note_1aac8969ffb365d143f0b60b4a222303f4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setDotsHidden</name></member>
      <member refid="class_ms_1_1_note_1aad21335a2a9a90b9d623bbf3d55f747a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setDotY</name></member>
      <member refid="class_ms_1_1_element_1a8ca2ec95d1247f2940b1285205b2f633" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setDropTarget</name></member>
      <member refid="class_ms_1_1_element_1ab75c49bf26fcb549bd1959ffe7925d8b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setEnabled</name></member>
      <member refid="class_ms_1_1_note_1a87ee6c8a91225dac38f6918ec0ba47ee" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setFixed</name></member>
      <member refid="class_ms_1_1_note_1a9c27680c448f335ff2068ee415da09cb" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setFixedLine</name></member>
      <member refid="class_ms_1_1_element_1afbd51224c47d00551983d1b25f3c6f39" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setFlag</name></member>
      <member refid="class_ms_1_1_element_1ac28da1fe20339f2277852976ac6d7d8f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setFlag</name></member>
      <member refid="class_ms_1_1_note_1a274b9ec8b9be38c1aad55d8f506ab35b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setFret</name></member>
      <member refid="class_ms_1_1_note_1a85f7480cd12c34659da2e462bef52ec5" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setFretConflict</name></member>
      <member refid="class_ms_1_1_element_1a6f4204d12e78c77052520492ae4416cd" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setGenerated</name></member>
      <member refid="class_ms_1_1_note_1ab203ac79f25f02449fd99d0a995f7e93" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setGhost</name></member>
      <member refid="class_ms_1_1_element_1a5033ef29dffbf6e40958e4fdd2802b6d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setHeader</name></member>
      <member refid="class_ms_1_1_note_1ad0e73a30df1e32e9dcdc0b36580e853c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setHeadGroup</name></member>
      <member refid="class_ms_1_1_note_1add88c356d97cc3a42374c29ddb8ada28" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setHeadType</name></member>
      <member refid="class_ms_1_1_element_1a48786d2a55a0857f1685299e97b85b60" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setHeight</name></member>
      <member refid="class_ms_1_1_note_1a180de4d0e2a4b8dda03c5ed38c12f4fe" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setHidden</name></member>
      <member refid="class_ms_1_1_note_1a6912d3da9c05f0b7b356f9fbff5008df" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setLine</name></member>
      <member refid="class_ms_1_1_score_element_1ae1e16c1a83100a1ea23b05bfb1642283" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setLinks</name></member>
      <member refid="class_ms_1_1_element_1a49df2a43ee4c87d33b78c60cce70ff4e" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setMag</name></member>
      <member refid="class_ms_1_1_note_1a828f3bc7dec6aa94dbb302d4fd5f94b0" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setMark</name></member>
      <member refid="class_ms_1_1_element_1a7b5cd12e550c5be0c4399a55c93d1ea9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setMinDistance</name></member>
      <member refid="class_ms_1_1_note_1a0fd80339f7fe2ce2a9dedae21188821d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setMirror</name></member>
      <member refid="class_ms_1_1_note_1aa3894dd233a29852af0a8f8acce3e8c9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setNval</name></member>
      <member refid="class_ms_1_1_element_1a7bb9bbbf1c501bf50adfa4508da42056" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setOffset</name></member>
      <member refid="class_ms_1_1_element_1acdc3b830bf0d9bfe501b182b28200c98" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setOffset</name></member>
      <member refid="class_ms_1_1_element_1a432e2033ca1c24ef8179458d1e604509" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setOffsetChanged</name></member>
      <member refid="class_ms_1_1_note_1a589e03cd1337c1e59e5a237df70e203a" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setOffTimeOffset</name></member>
      <member refid="class_ms_1_1_note_1a6b44e75ac319c432033770dd49758c53" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setOffTimeType</name></member>
      <member refid="class_ms_1_1_note_1a6f58e66a31fa80f8cfd8d11cd9aebba1" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setOnTimeOffset</name></member>
      <member refid="class_ms_1_1_note_1a043785eb081da4bc4a7c10bce41b6dad" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setOnTimeType</name></member>
      <member refid="class_ms_1_1_element_1aa7757f6d62dc28447706ee8eb12da5ec" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setParent</name></member>
      <member refid="class_ms_1_1_note_1ac88696674088bba6493e11f97d09800d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setPitch</name></member>
      <member refid="class_ms_1_1_note_1a873e34c368a60fd0028f1df9cd41c717" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setPitch</name></member>
      <member refid="class_ms_1_1_element_1ae13af03f0efac5348d139609cbadc826" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setPlacement</name></member>
      <member refid="class_ms_1_1_note_1a554a25e62121fcd063e32bbb8e50124d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setPlay</name></member>
      <member refid="class_ms_1_1_note_1a7d3c4850c5f7957394cce53085f83c67" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setPlayEvents</name></member>
      <member refid="class_ms_1_1_element_1a2a2ce2358cc23529d8f038a940062e62" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_element_1ac7fcfee452c4de8e270aa6320365008c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setPos</name></member>
      <member refid="class_ms_1_1_note_1a0adf97c9436679e94904fca3747f457a" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setProperty</name></member>
      <member refid="class_ms_1_1_score_element_1aceed92c262270a2a79d3f97d0f018a29" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setPropertyFlags</name></member>
      <member refid="class_ms_1_1_note_1a2e8e367c5cd6bc24fd8e81ba7fc0db04" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setScore</name></member>
      <member refid="class_ms_1_1_element_1adfe1acfd98d816c02267b9d26a693618" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setSelectable</name></member>
      <member refid="class_ms_1_1_element_1aa7d9ce43d66fd04a403e2242051dd7a8" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setSelected</name></member>
      <member refid="class_ms_1_1_element_1ad76cff3c891435e058cd2ab572bcf9d3" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setSizeIsSpatiumDependent</name></member>
      <member refid="class_ms_1_1_note_1abc716b0cb1c5af9ae71447f41ecb2f0c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setSmall</name></member>
      <member refid="class_ms_1_1_note_1aeaddfd87a09000f6eb25dc1133ba8472" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setString</name></member>
      <member refid="class_ms_1_1_note_1aa3b47f29f88ee94fb7f3e2a19d10de85" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setSubchannel</name></member>
      <member refid="class_ms_1_1_element_1a2610a3ae6f4ce80c36a123fa7d1e33f2" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setSystemFlag</name></member>
      <member refid="class_ms_1_1_element_1a9b433e4368d19bc18b9d8cb4c41fe1d4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTag</name></member>
      <member refid="class_ms_1_1_note_1a9bdc2e024e29b58a2a25678a957782d5" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTieBack</name></member>
      <member refid="class_ms_1_1_note_1a05ce3788d478c430ece124313a63af1f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTieFor</name></member>
      <member refid="class_ms_1_1_note_1a8fd1eb2a642f8fef03f86210a4978ee7" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTpc</name></member>
      <member refid="class_ms_1_1_note_1a7b1cb6772bc40d4e6c6d005a8a514f77" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTpc1</name></member>
      <member refid="class_ms_1_1_note_1a6be8a4d3de7151fa3c6ee5420bc15731" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTpc2</name></member>
      <member refid="class_ms_1_1_note_1ada8ff30ba7ff1ba04e00fb2f8b971048" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTpcFromPitch</name></member>
      <member refid="class_ms_1_1_note_1a2a2dbb3c57df09b6f783254bbab05ce4" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setTrack</name></member>
      <member refid="class_ms_1_1_element_1a304d88a7891a731cbfb8e5b0c2e8a5fc" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTrailer</name></member>
      <member refid="class_ms_1_1_note_1af258c04ff707ec835352f589c9b86dfe" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setTuning</name></member>
      <member refid="class_ms_1_1_note_1afaf580b66a43a434bc70fcad9546e7cc" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setUserDotPosition</name></member>
      <member refid="class_ms_1_1_note_1a934b214a5a619e1a2a35d2540aa35e82" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setUserMirror</name></member>
      <member refid="class_ms_1_1_note_1a23bd44a49d6ec5ef2f7be99a9dfa8bcb" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setVeloOffset</name></member>
      <member refid="class_ms_1_1_note_1ac07831538c8525825635e07bd69bfe28" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setVeloType</name></member>
      <member refid="class_ms_1_1_element_1a41438f8c28ffb2eb06d55de8360c1969" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setVisible</name></member>
      <member refid="class_ms_1_1_element_1a03037db721d985f097d7ca610f402850" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setVoice</name></member>
      <member refid="class_ms_1_1_element_1ae3346b5a7ad5893674afc28c9b0877ec" prot="public" virt="virtual"><scope>Ms::Note</scope><name>setWidth</name></member>
      <member refid="class_ms_1_1_element_1a1a35bada3f70ea05096258aa18d74b3c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>setZ</name></member>
      <member refid="class_ms_1_1_note_1a5b077f0c68de7584562198eb28e926b3" prot="public" virt="virtual"><scope>Ms::Note</scope><name>shape</name></member>
      <member refid="class_ms_1_1_element_1a3e3e415df166153ec434b9a143ad7744" prot="public" virt="virtual"><scope>Ms::Note</scope><name>sizeIsSpatiumDependent</name></member>
      <member refid="class_ms_1_1_note_1a488c3e17de900353472040373d0e7f83" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>small</name></member>
      <member refid="class_ms_1_1_note_1a7e2a07630dad78f0911a16be88e16729" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>spannerBack</name></member>
      <member refid="class_ms_1_1_note_1ad85cf645f375f12d682c28243dedf029" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>spannerFor</name></member>
      <member refid="class_ms_1_1_element_1a9f375d79304c4cec5b45ea883c9efc86" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>spatium</name></member>
      <member refid="class_ms_1_1_element_1a8198d208370c064154b2be113981cbda" prot="public" virt="virtual"><scope>Ms::Note</scope><name>spatiumChanged</name></member>
      <member refid="class_ms_1_1_element_1a14581354d9bfc2c39c7dafbed79403da" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>staff</name></member>
      <member refid="class_ms_1_1_element_1a3c37abb86b5dfb5b16fe74155154bab8" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>staffIdx</name></member>
      <member refid="class_ms_1_1_element_1a3c2f8d8c52d96d1812733ec1669b576c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>staffType</name></member>
      <member refid="class_ms_1_1_note_1a8711aee69fd66d84c136af3dc2ce65a7" prot="private" virt="virtual"><scope>Ms::Note</scope><name>startDrag</name></member>
      <member refid="class_ms_1_1_element_1a44811717889176d96221850366e5f055" prot="public" virt="virtual"><scope>Ms::Note</scope><name>startEdit</name></member>
      <member refid="class_ms_1_1_element_1a0415a5b5710c311e92ba189e201c73c7" prot="public" virt="virtual"><scope>Ms::Note</scope><name>startEditDrag</name></member>
      <member refid="class_ms_1_1_note_1a4ca22e086275dc1906b1476acb032cc6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>stemDownNW</name></member>
      <member refid="class_ms_1_1_note_1a1c9ea06bca227155fbfb20e72a1ff4a6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>stemUpSE</name></member>
      <member refid="class_ms_1_1_note_1aa5068302dd057f7cd18cdf561b75d18f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>string</name></member>
      <member refid="class_ms_1_1_score_element_1abd7730432b512afc15873362a5414bad" prot="public" virt="virtual"><scope>Ms::Note</scope><name>styleChanged</name></member>
      <member refid="class_ms_1_1_score_element_1a08e4c60af2466c57931724393f7bee4f" prot="public" virt="virtual"><scope>Ms::Note</scope><name>styledProperties</name></member>
      <member refid="class_ms_1_1_element_1a31f9e63002b9f16ad6b4f35ba7a85bf4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>styleP</name></member>
      <member refid="class_ms_1_1_score_element_1a8a3670f26efa9a07e14695cee4512dc4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>styleValue</name></member>
      <member refid="class_ms_1_1_note_1aa8e988107ffd64c0e8b232cac1f42b1c" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>subchannel</name></member>
      <member refid="class_ms_1_1_note_1a82c66f056118ad9b0be128ba1c5a6035" prot="public" virt="virtual"><scope>Ms::Note</scope><name>subtype</name></member>
      <member refid="class_ms_1_1_note_1a171271218a44ccc6979fa222604c2cba" prot="public" virt="virtual"><scope>Ms::Note</scope><name>subtypeName</name></member>
      <member refid="class_ms_1_1_element_1a1625813b59654991c24a9a10eb580f07" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symAdvance</name></member>
      <member refid="class_ms_1_1_element_1a70a8140969dcd988ed77e91c27b6a84f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symBbox</name></member>
      <member refid="class_ms_1_1_element_1adad5f2c7a943687f0b3de2e896942898" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symBbox</name></member>
      <member refid="class_ms_1_1_element_1a984c5f0381896ac71fcf054d056bbe66" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symCutOutNE</name></member>
      <member refid="class_ms_1_1_element_1a545d8382d25c1402b0e46974ce84d444" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symCutOutNW</name></member>
      <member refid="class_ms_1_1_element_1af0b900ab6bb2674c1dcad1c5100fb4ee" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symCutOutSE</name></member>
      <member refid="class_ms_1_1_element_1a0cb9e0cf90c74e5b718e10f8a9a796da" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symCutOutSW</name></member>
      <member refid="class_ms_1_1_element_1ab3254b043c87dd338bfa6630c93e8e26" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symHeight</name></member>
      <member refid="class_ms_1_1_element_1a95c4ffee60af75b49f6e1c644db44493" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symIsValid</name></member>
      <member refid="class_ms_1_1_element_1a7c49ac344dd76c56fd51dad4287b79d5" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symStemDownNW</name></member>
      <member refid="class_ms_1_1_element_1a2526cc958a514c74daebfcdcc2dae7dc" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symStemUpSE</name></member>
      <member refid="class_ms_1_1_element_1adc45b084165da6ceb3afa7913d6a3feb" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symWidth</name></member>
      <member refid="class_ms_1_1_element_1a175d0a2254d83ee5f486123cb3ea2612" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>symWidth</name></member>
      <member refid="class_ms_1_1_element_1a77c37605cf48595a7e6dc079722839c4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>systemFlag</name></member>
      <member refid="class_ms_1_1_note_1a503a96f8bfef51762a39c60fdc3303ba" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tabHeadHeight</name></member>
      <member refid="class_ms_1_1_note_1ae52149fb44e9cda4d8d8dd2844a47b48" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tabHeadWidth</name></member>
      <member refid="class_ms_1_1_element_1a31f5e22d38f84ff52c512857c52dd668" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tag</name></member>
      <member refid="class_ms_1_1_element_1a4cc362a42bad65483b59d3a8e0df374f" prot="public" virt="virtual"><scope>Ms::Note</scope><name>tick</name></member>
      <member refid="class_ms_1_1_note_1a84d9574652805d8c7600ad6968ff8e40" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tieBack</name></member>
      <member refid="class_ms_1_1_note_1aebcc3e7025d9c2e4e562d09ed47ca9f6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tiedNotes</name></member>
      <member refid="class_ms_1_1_note_1a48317b9139affa970569ed1fcb3add46" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tieFor</name></member>
      <member refid="class_ms_1_1_note_1af813072eba46ad48757444a574d0a01f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tpc</name></member>
      <member refid="class_ms_1_1_note_1a253ddb42a9f2f5c0c05787b81910abe7" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tpc1</name></member>
      <member refid="class_ms_1_1_note_1a40ede174072aaa879eb707e6c014550b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tpc1default</name></member>
      <member refid="class_ms_1_1_note_1ab9c2a85410e0eda228b182a1a455bfe9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tpc2</name></member>
      <member refid="class_ms_1_1_note_1ab8c8466304bdd7179ac41f03784332c9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tpc2default</name></member>
      <member refid="class_ms_1_1_note_1ac9e13d0d98a6a9acaa0186483ca93b3b" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tpcUserName</name></member>
      <member refid="class_ms_1_1_element_1ab4986d1b4f0d45b8e84cf52c46885c36" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>track</name></member>
      <member refid="class_ms_1_1_element_1a868f0f5663dd1d7422c19700e070a4a6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>trailer</name></member>
      <member refid="class_ms_1_1_note_1a989f08021238763c558e87e9f7478c67" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>transposeDiatonic</name></member>
      <member refid="class_ms_1_1_note_1a5546123c8824914f864f02ae364d7bdd" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>transposeTpc</name></member>
      <member refid="class_ms_1_1_note_1a6616f92479ba74efcf6f2675337e4d28" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>transposition</name></member>
      <member refid="class_ms_1_1_element_1ab28ffe83fb1064fb3c2a6fa648bca688" prot="public" virt="virtual"><scope>Ms::Note</scope><name>triggerLayout</name></member>
      <member refid="class_ms_1_1_element_1a5fb627b3ef6f80967a432f86ad028117" prot="public" virt="virtual"><scope>Ms::Note</scope><name>triggerLayoutAll</name></member>
      <member refid="class_ms_1_1_note_1ad184301be62cb66c879ec8668d0a9e6d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>tuning</name></member>
      <member refid="class_ms_1_1_note_1a88e44f20b100767dc6c10f5d7c5ca5a9" prot="public" virt="virtual"><scope>Ms::Note</scope><name>type</name></member>
      <member refid="class_ms_1_1_note_1a1ac8f50276ebf2cf823f1613672f38a3" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>undoChangeDotsVisible</name></member>
      <member refid="class_ms_1_1_element_1ab3227faba09a745523ba6748d9f94ab5" prot="public" virt="virtual"><scope>Ms::Note</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_element_1af0505b234ccb7520a7d93ddd09ca4e1f" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_element_1a4d0c98408c09304865fc3c9e011a9695" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a4d0c98408c09304865fc3c9e011a9695" prot="public" virt="non-virtual" ambiguityscope="Ms::ScoreElement::"><scope>Ms::Note</scope><name>undoChangeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1ab31ad4878a7d6e5c5acbd88e3232f2fb" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>undoPushProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a2f2ea7d6e1179cbb00f95689125482d0" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>undoResetProperty</name></member>
      <member refid="class_ms_1_1_element_1aa9328fefa5648b5bc3f020b6cf481f38" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>undoSetColor</name></member>
      <member refid="class_ms_1_1_note_1a04a48f307d8a7658a43b7d32a8bdfea4" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>undoSetTpc</name></member>
      <member refid="class_ms_1_1_element_1a4033806e37a8a0bd95f75e06fb6d1286" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>undoSetVisible</name></member>
      <member refid="class_ms_1_1_note_1aabfa9ef9e94c538ca446d0f9a3742009" prot="public" virt="virtual"><scope>Ms::Note</scope><name>undoUnlink</name></member>
      <member refid="class_ms_1_1_note_1a9a43b3386cfcf71a997b2d5f30e90b7d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>unisonIndex</name></member>
      <member refid="class_ms_1_1_score_element_1a1d76afaf3ee463445961c3d981901be1" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>unlink</name></member>
      <member refid="class_ms_1_1_note_1a59e4af122333f6e794ba9a30340a3584" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>updateAccidental</name></member>
      <member refid="class_ms_1_1_element_1a2cbf6c48adfc2d3856a7670ce1a199da" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>updateGrips</name></member>
      <member refid="class_ms_1_1_note_1ae437265e0c8f4a19d786ee2f66ad3723" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>updateLine</name></member>
      <member refid="class_ms_1_1_note_1a3badb8b278cbde49d5dab0fc62362f82" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>updateRelLine</name></member>
      <member refid="class_ms_1_1_note_1ad9eec4888c9aa3acb109163a2b1819a5" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>userDotPosition</name></member>
      <member refid="class_ms_1_1_note_1ab0ce88117199ff8fea149d99b515c2e7" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>userMirror</name></member>
      <member refid="class_ms_1_1_score_element_1acb1866df2e440923354fa5b1ee9d5f52" prot="public" virt="virtual"><scope>Ms::Note</scope><name>userName</name></member>
      <member refid="class_ms_1_1_note_1a8485856ee1248554f7223cbac4397048" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>ValueType</name></member>
      <member refid="class_ms_1_1_note_1aec8b51971a64bc6de5794e133e72c219" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>veloOffset</name></member>
      <member refid="class_ms_1_1_note_1a35a050f6696d45ea0139ebb782f913b9" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>veloType</name></member>
      <member refid="class_ms_1_1_note_1a66f3fbc1730daf42898712e32bffb4b3" prot="private" virt="non-virtual"><scope>Ms::Note</scope><name>verticalDrag</name></member>
      <member refid="class_ms_1_1_element_1a9f91ce44289781c10fbaab9f5867d387" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>visible</name></member>
      <member refid="class_ms_1_1_element_1a7e7ba0487a1113884ed218ba74c6a7d6" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>voice</name></member>
      <member refid="class_ms_1_1_element_1ad1e0d3968ecafec4140aac087bd8fd99" prot="public" virt="virtual"><scope>Ms::Note</scope><name>vStaffIdx</name></member>
      <member refid="class_ms_1_1_element_1abd781d11186d1951028a0efaf6d5cf5a" prot="public" virt="virtual"><scope>Ms::Note</scope><name>width</name></member>
      <member refid="class_ms_1_1_note_1a53925c055ba0b5cf446b142cbea77995" prot="public" virt="virtual"><scope>Ms::Note</scope><name>write</name></member>
      <member refid="class_ms_1_1_element_1a6d2d848ec99034b85e1a4e3b33857840" prot="public" virt="virtual"><scope>Ms::Note</scope><name>writeProperties</name></member>
      <member refid="class_ms_1_1_score_element_1a4ae6e7e095b8f672951ffc30f980c45d" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>writeProperty</name></member>
      <member refid="class_ms_1_1_score_element_1a7a3de180bd5a72ab3e27b7fbf9213567" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>writeStyledProperties</name></member>
      <member refid="class_ms_1_1_element_1a6f850cd0581c46bee4661210b7a7777c" prot="public" virt="virtual"><scope>Ms::Note</scope><name>x</name></member>
      <member refid="class_ms_1_1_element_1a30c056051bbce9e867a512b8cbc1f912" prot="public" virt="virtual"><scope>Ms::Note</scope><name>y</name></member>
      <member refid="class_ms_1_1_element_1a0e947d90ca39376fd98b995d34811126" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>z</name></member>
      <member refid="class_ms_1_1_element_1a1a5eff5e9b3d54d8e8207a7c594a1fc9" prot="public" virt="virtual"><scope>Ms::Note</scope><name>~Element</name></member>
      <member refid="class_ms_1_1_note_1af17bbe53051ee6b779cc58072e0eaf05" prot="public" virt="non-virtual"><scope>Ms::Note</scope><name>~Note</name></member>
      <member refid="class_ms_1_1_score_element_1abc6cbffe99d185a7262f86be05cf6365" prot="public" virt="virtual"><scope>Ms::Note</scope><name>~ScoreElement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
